@import '../../core/_platform.scss';
@import '../../core/theme/index.scss';

$mdw-list__theme-values: (
  text-color:           $mdw-theme__default-ink,
  divider-color:        $mdw-theme__divider-ink,

  focus-opacity:                 (0.12, 0.24),
  hover-focus-opacity:           (0.04 + 0.12, 0.08 + 0.24),
  selected-focus-opacity:        (0.08 + 0.12, 0.16 + 0.24),
  selected-hover-focus-opacity:  (0.08 + 0.04 + 0.12, 0.16 + 0.08 + 0.24),

  activated-focus-opacity:       (0.12 + 0.12, 0.24 + 0.24),
  activated-hover-focus-opacity: (0.12 + 0.04 + 0.12, 0.24 + 0.08 + 0.24),

) !default;

@function mdwListThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('list', $mdw-list__theme-values, $key, $type, $theme);
}

@mixin mdw-list__theme-rules($type: 'var', $theme: null) {
  .mdw-list__text,
  .mdw-list__content:not(.mdw-theme) {
    color: mdwListThemeValue("text-color", $type, $theme);
    --ink-color: var(--foreground-color);
  }

  .mdw-list__content {
    &[mdw-ink][aria-current],
    &[mdw-ink][aria-selected="true"] {
      .mdw-list__icon,
      .mdw-list__text {
        color: inherit;
      }
    }
  }

  .mdw-list[mdw-divider] {
    & > .mdw-list__item:not(:last-child) .mdw-list__text::after {
      background-color: mdwListThemeValue("divider-color", $type, $theme);
    }
  }

  .mdw-list__expander:focus {
    & > .mdw-list__expander-content {
      &:not([mdw-overlay-touch="true"]) {
        &:not([mdw-overlay-off~="focus"]):not([mdw-overlay-touch="true"])::before {
          opacity: mdwListThemeValue("focus-opacity", $type, $theme);
        }
  
        &:not([disabled]):not([aria-disabled="true"]):not([mdw-overlay-touch="true"]) {
          &:hover:not([mdw-overlay-off~="hover"]):not([mdw-overlay-off~="focus"])::before {
            opacity: mdwListThemeValue("hover-focus-opacity", $type, $theme);
          }
        }
      }
  
      // Selected
      &[aria-selected="true"]:not([mdw-overlay-off~="selected"]) {
        &:not([mdw-overlay-touch="true"]) {
          &:focus:not([mdw-overlay-off~="focus"])::before {
            opacity: mdwListThemeValue("selected-focus-opacity", $type, $theme);
          }
  
          &:not([disabled]):not([aria-disabled="true"]) {
            &:hover:not([mdw-overlay-off~="hover"]):not([mdw-overlay-off~="focus"])::before {
              opacity: mdwListThemeValue("selected-hover-focus-opacity", $type, $theme);
            }
          }
        }
      }
  
      // Activated
      &[aria-current]:not([mdw-overlay-off~="current"]),
      &[aria-pressed="true"]:not([mdw-overlay-off~="activated"]) {
        &:not([mdw-overlay-touch="true"]) {
          &:not([mdw-overlay-off~="focus"])::before {
            opacity: mdwListThemeValue("activated-focus-opacity", $type, $theme);
          }
  
          &:not([disabled]):not([aria-disabled="true"]) {
            &:hover:not([mdw-overlay-off~="hover"]):not([mdw-overlay-off~="focus"])::before {
              opacity: mdwListThemeValue("activated-hover-focus-opacity", $type, $theme);
            }
          }
        }
      }
    }
  }

  .mdw-list__expander[aria-expanded="true"] {
    &::before,
    &::after {
      background-color: mdwListThemeValue("divider-color", $type, $theme);
    }

    &[mdw-ink][aria-expanded="true"] {
      & > .mdw-list__expander-content,
      & > .mdw-list__expander-content::before,
      & > .mdw-list__expander-content > .mdw-list__text {
        color: inherit;
      }
    }
  }
  
}

@each $name in map-keys($mdw-theme__themes) {
  $theme: map-get($mdw-theme__themes, $name);
  @include mdw-theme__add-component-fallback-rules('light', $name) {
    @include mdw-list__theme-rules('light', $theme);
  }
  @include mdw-theme__add-component-fallback-rules('dark', $name) {
    @include mdw-list__theme-rules('dark', $theme);
  }
}

@include mdw-theme__add-component-variable-rules('list', $mdw-list__theme-values) {
  @include mdw-list__theme-rules();
}
