@import '../../common/functions.scss';
@import '../../common/mixins.scss';

$bottomnavColors: (
  active-color:      (inherit,        (#fff, 1.0)),
  inactive-color:    ((#000, 0.54), (#fff, 0.50)),
  ripple-color:      ( #000       ,  #fff       ),
  ripple-opacity:    (         0.12 ,          0.30,           0.20),
);

@function bottomnavThemeValue($key, $type, $theme) {
  @return themeValue('bottomnav', $bottomnavColors, $key, $type, $theme);
}

@mixin bottomnavThemeVariables($color, $lightness) {
  @include themeVariables('bottomnav', $bottomnavColors, $color, $lightness);
}

// Vary by contrast
@mixin bottomnavContrastRules($type: 'var', $theme: null) {
  .mdw-bottomnav__icon,
  .mdw-bottomnav__label {
    color: bottomnavThemeValue("inactive-color", $type, $theme);
  }

  input:checked ~ .mdw-bottomnav__icon,
  input:checked ~ .mdw-bottomnav__label,
  .mdw-bottomnav__action[selected] > .mdw-bottomnav__icon,
  .mdw-bottomnav__action[selected] > .mdw-bottomnav__label,
  input:checked + .mdw-bottomnav__action > .mdw-bottomnav__icon,
  input:checked + .mdw-bottomnav__action > .mdw-bottomnav__label {
    color: bottomnavThemeValue("active-color", $type, $theme);
  }

  .mdw-bottomnav__action {
    & > .mdw-ripple > .mdw-ripple__inner,
    &:after {
      opacity: buttonThemeValue("ripple-opacity", $type, $theme);
      color: buttonThemeValue("ripple-color", $type, $theme);
    }
  }
}