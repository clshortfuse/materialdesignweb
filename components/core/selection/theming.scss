@import '../../common/functions.scss';
@import '../../common/mixins.scss';

$selectionColors: (
  text-color:            ((#000, 0.87), (#fff, 1.00)),
  color:                 ((#000, 0.54), (#fff, 0.70)),
  color__checked:        (('accent', '500', 1.0), ('accent', '500', 1.0)),
  ripple-color:          (black, white),
  ripple-opacity:        (0.12, 0.30, 0.20),
  ripple-color__checked: (('accent', '500', 0.26), ('accent', '500', 0.26))
);

@function selectionThemeValue($key, $type, $theme) {
  @return themeValue('selection', $selectionColors, $key, $type, $theme);
}

@mixin selectionThemeVariables($color, $lightness) {
  @include themeVariables('selection', $selectionColors, $color, $lightness);
}

// Vary by contrast
@mixin selectionContrastRules($type: 'var', $theme: null) {
  .mdw-selection > input {
    color: selectionThemeValue("ripple-color", $type, $theme);
    &:active,
    &:focus {
      opacity: selectionThemeValue("ripple-opacity", $type, $theme);
    }
  }
  .mdw-selection > input {
    &[type="checkbox"]:not(:checked) ~ .mdw-selection__icon,
    &[type="checkbox"]:active ~ .mdw-selection__icon {
      color: selectionThemeValue("color", $type, $theme);
    }

    &[type="radio"]:not(:checked) ~ .mdw-selection__icon {
      color: selectionThemeValue("color", $type, $theme);
    }
    &[type="checkbox"]:checked ~ .mdw-selection__icon::after {
      // Checkbox color is based on currently filled background-color
      @if($type == 'var') {
        border-color: unquote("rgb(var(--background-color))");
      } @else {
        // IE11 Fallback
        border-color: white;
      }
    }
  }
  .mdw-selection,
  .mdw-selection[mdw-theme-color] {
    .mdw-selection__label {
      color: selectionThemeValue("text-color", $type, $theme);
    }
  }
}

// Varies by theme
@mixin selectionThemeRules($theme: null) {
  
}