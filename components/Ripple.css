:host {
  --enter-delay: 80ms;
  --touch-down-acceleration: 1024;
  --touch-up-acceleration: 3400;
  --mdw-ripple-expand-duration: 300ms;
  --mdw-ripple-simple-duration: 100ms;
  --mdw-ripple-fade-out-duration: 333ms;
  --mdw-ripple-standard-easing: var(--mdw-motion-standard-easing, cubic-bezier(0.4, 0.0, 0.2, 1));
  --mdw-ripple-deceleration-easing: var(--mdw-motion-deceleration-easing, cubic-bezier(0.0, 0.0, 0.2, 1));
  --mdw-state__pressed-opacity: 0; /* Use ripple for pressed state instead */

  --size: 0;
  position: absolute;
  top: 50%;
  left: 50%;

  display: block;

  min-block-size: 141.42%; /* âˆš2 * 100% */
  min-inline-size: 141.42%;

  pointer-events: none;

  -webkit-tap-highlight-color: transparent;

  opacity: 0.12;
  transform: translateX(-50%) translateY(-50%) scale(0);

  background-color: currentColor;
  border-radius: 50%;

  box-shadow: 0 0 calc(0.10 * var(--size)) calc(0.10 * var(--size)) currentColor; /* Adds feathered appeared to ripple */

  transition-delay: 0s;
  transition-duration: var(--mdw-ripple-simple-duration);
  transition-property: background-color, color;
  transition-timing-function: var(--mdw-ripple-standard-easing);

  animation-name: ripple-fade-in, none;
  animation-duration: var(--mdw-ripple-expand-duration), var(--mdw-ripple-fade-out-duration);
  animation-timing-function: linear, var(--mdw-ripple-deceleration-easing);
  animation-direction: normal;
  animation-fill-mode: forwards;
  /* stylelint-disable-next-line liberty/use-logical-spec */
  will-change: transform, opacity, box-shadow;

  aspect-ratio: 1/1;
}

:host([ripple-state="filled"]) {
  animation-name: none, ripple-fade-out;
}

:host([ripple-state="filled"][hold-ripple]) {
  animation-name: ripple-fade-in, none;
}

:host([ripple-state="complete"]) {
  animation-name: none;
}

@keyframes ripple-fade-in {
  from {
    transform: translateX(-50%) translateY(-50%) scale(0);
  }

  to {
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
}

@keyframes ripple-fade-out {
  from {
    transform: translateX(-50%) translateY(-50%) scale(1);
  }

  to {
    opacity: 0;
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
}