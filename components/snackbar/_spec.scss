// https://material.io/design/components/snackbars.html#spec

@use '../../core/_breakpoint.scss' as breakpoint;
@use '../../core/_elevation.scss' as elevation;
@use '../../core/_length.scss' as *;
@use '../../core/_motion.scss' as motion;
@use '../../core/_platform.scss' as platform;
@use '../../core/_type.scss' as type;

$scale-initial: 0.85 !default;

.mdw-snackbar__wrapper {
  position: relative;

  z-index: 6;
}

.mdw-snackbar__container {
  display: flex;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  flex-direction: row;
  justify-content: flex-start;

  z-index: 6;

  &[mdw-position="end"] {
    justify-content: flex-end;
  }

  &[mdw-position="center"] {
    justify-content: center;
  }
} 

.mdw-snackbar {
  @include type.addRules('body-2');

  display: flex;
  position: absolute;
  bottom: 0;
  align-items: center;
  justify-content: space-between;

  min-height: dp(48);
  max-width: 100%;
  padding-right: dp(8);
  padding-left: dp(8);

  animation-name: none;
  animation-duration: motion.$fadeInDuration;
  animation-timing-function: motion.$decelerateEasing;
  animation-direction: normal;
  animation-fill-mode: forwards;
  will-change: opacity, transform, visibility;

  opacity: 0;

  // Default state is hidden
  pointer-events: auto;
  transform: scale($scale-initial);
  visibility: hidden;

  border-radius: dp(4);
  
  box-shadow: elevation.boxShadow(6);

  &[aria-hidden="false"] {
    animation-name: showSnackbar;

    // Fallback if animations are disabled
    opacity: 1;
    transform: scale(1.0);
    visibility: visible;
  }

  &[aria-hidden="true"] {
    animation-name: hideSnackbar;
    animation-duration: motion.$fadeOutDuration;
    animation-timing-function: motion.$accelerateEasing;
  }

  &:focus {
    outline: none;
  }
}

@keyframes hideSnackbar {
  from {
    opacity: 1;
    transform: scale(1.0);
    visibility: visible;
  }

  to {
    opacity: 0;
    transform: scale($scale-initial);
    visibility: hidden;
  }
}

@keyframes showSnackbar {
  from {
    opacity: 0;
    transform: scale($scale-initial);
    visibility: hidden;
  }

  to {
    opacity: 1;
    transform: scale(1.0);
    visibility: visible;
  }
}

.mdw-snackbar .mdw-button {
  order: 1;

  flex: none;
  margin: dp(6) 0;
}

.mdw-snackbar > span {
  @include type.textTopToTop(16);
  @include type.baselineToBottom(48 - 30);
  box-sizing: border-box;
  padding: 0 dp(8);

  white-space: pre-line;
}

@include breakpoint.isXSmallWindow() {
  .mdw-snackbar {
    right: 0;
    left: 0;

    &[mdw-stacked] {
      align-items: flex-end;
      flex-direction: column;
      justify-content: center;

      > span {
        width: 100%;
      }

      .mdw-button {
        margin-top: dp(2);
        margin-bottom: dp(8);
      }
    }
  }
}

@include platform.ifIE() {
  // Fix IE flexbug
  .mdw-snackbar {
    &::after {
      min-height: inherit;
      min-width: 0;
      content: '';
    }
  }

  .mdw-snackbar__container[mdw-position="center"] {
    .mdw-snackbar {
      transform: translateX(-50%);

      html[dir="rtl"] & {
        transform: translateX(50%);

        &[mdw-hide] {
          transform: translateX(50%) scale($scale-initial);
        }
      }

      &[mdw-hide] {
        transform: translateX(-50%) scale($scale-initial);
      }
    }
  }

  .mdw-snackbar__container[mdw-position="end"] {
    .mdw-snackbar {
      right: 0;

      html[dir="rtl"] & {
        right: auto;
        left: 0;
      }
    }
  }
  
}
