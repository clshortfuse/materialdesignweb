// https://material.io/design/components/snackbars.html#spec

// Guidelines conflict stating a background should be fully opaque
// But says spec says to use #000000 with 87% opacity
// Calculated against white, opaque value is #212121 (Grey-900)

$snackbar__background-color: #212121;
$snackbar__color: rgba(255, 255, 255, 0.87);
$snackbar__scale-up__from: 0.85;

.mdw-snackbar__wrapper {
  position: relative;
  z-index: 6;
}

.mdw-snackbar__container {
  position: absolute;
  display: flex;
  flex-direction: row;
  z-index: 6;
  left: 0;
  bottom: 0;
  right: 0;
  justify-content: flex-start;
  &[mdw-position="end"] {
    justify-content: flex-end;
  }
  &[mdw-position="center"] {
    justify-content: center;
  }
} 

.mdw-snackbar {
  position: absolute;
  bottom: 0;
  
  background: $snackbar__background-color;
  color: $snackbar__color;

  
  padding: 0 dp(16);
  min-height: dp(48);
  
  max-width: 100%;

  font-size: sp(14);
  font-weight: $font-weight-regular;

  display: flex;
  align-items: center;
  justify-content: space-between;

  border-radius: dp(4);
  box-shadow: elevation(6);

  // Default state is shown
  opacity: 1;
  transform: scale(1);
  will-change: opacity, transform;
  transition-property: opacity, transform;
  transition-timing-function: $motion-easing-deceleration;
  transition-delay: 0s, 0s;
  transition-duration: $motion-duration-desktop-enter;
  @include allHandsets {
    transition-duration: $motion-duration-mobile-enter;
  }
  @include allTablets {
    transition-duration: $motion-duration-tablet-enter;
  }
  // Disable animations with explicit visibility
  &[mdw-autohide] {
    animation-fill-mode: forwards;
    animation-name: showSnackbar, hideSnackbar;
    animation-timing-function: $motion-easing-deceleration, $motion-easing-acceleration;
    animation-delay: 0s, 4s;
    animation-duration: $motion-duration-desktop-enter, $motion-duration-desktop-leave;
    @include allHandsets {
      animation-duration: $motion-duration-mobile-enter, $motion-duration-mobile-leave;
    }
    @include allTablets {
      animation-duration: $motion-duration-tablet-enter, $motion-duration-tablet-leave;
    }
  }

  // Disable animation with explicit visibility
  &[mdw-show],
  &[mdw-hide] {
    animation-name: none;
  }

  &[mdw-consecutive]:not([mdw-hide]) {
    // Delay showing consecutive snackbar equal to previous snackbar's leave time
    transition-delay: $motion-duration-desktop-leave;
    @include allHandsets {
      transition-delay: $motion-duration-mobile-leave;
    }
    @include allTablets {
      transition-delay: $motion-duration-tablet-leave;
    }
  }

  &[mdw-hide] {
    opacity: 0;
    transform: scale($snackbar__scale-up__from);
    
    transition-timing-function: $motion-easing-acceleration;
    transition-duration: $motion-duration-desktop-leave;
    transition-delay: 0s, $motion-duration-desktop-leave;
    @include allHandsets {
      transition-duration: $motion-duration-mobile-leave;
      transition-delay: 0s, $motion-duration-mobile-leave;
    }
    @include allTablets {
      transition-duration: $motion-duration-tablet-leave;
      transition-delay: 0s, $motion-duration-tablet-leave;
    }
  }

  @for $seconds from 5 to 11 {
    &[mdw-autohide="#{$seconds}"] {
      animation-delay: 0s, #{$seconds}s;
    }
  }

}

@keyframes hideSnackbar {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes showSnackbar {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.mdw-snackbar .mdw-button {
  order: 1;
  margin-top: dp(6);
  margin-bottom: dp(6);
  margin-left: dp(8);
  margin-right: dp(-8);
  html[dir=rtl] & {
    margin-left: dp(-8);
    margin-right: dp(8);
  }
}

.mdw-snackbar > span {
  white-space: pre-line;
  &::before {
    content: "\200D"; // &zwj;
    display: inline-block;
    margin-top: dp(16);
    line-height: 1;
    vertical-align: text-bottom;
  }
  &::after {
    content: "\200D"; // &zwj;
    display: inline-block;
    line-height: 1;
    margin-bottom: dp(16);
    vertical-align: text-top;
  }
}

@media screen and (max-width: $breakpoint-portrait-handset-max) {
  .mdw-snackbar {
    left: 0;
    right: 0;
    &[mdw-stacked] {
      flex-direction: column;
      align-items: flex-end;
      justify-content: center;
      > span {
        width: 100%;
      }
      .mdw-button {
        margin-top: dp(2);
        margin-bottom: dp(8);
      }
    }
  }
}

@include IEOnly() {
  // Fix IE flexbug
  .mdw-snackbar {
    &::after {
      content: '';
      min-width: 0;
      min-height: inherit;
    }
  }
  .mdw-snackbar__container[mdw-position="center"] {
    .mdw-snackbar {
      transform: translateX(-50%);
      &[mdw-hide] {
        transform: translateX(-50%) scale($snackbar__scale-up__from);
      }
      html[dir=rtl] & {
        transform: translateX(50%);
        &[mdw-hide] {
          transform: translateX(50%) scale($snackbar__scale-up__from);
        }
      }
    }
  }
  .mdw-snackbar__container[mdw-position="end"] {
    .mdw-snackbar {
      right: 0;
      html[dir=rtl] & {
        left: 0;
        right: auto;
      }
    }
  }
  
}