// https://material.io/guidelines/components/selection-controls.html#
// https://material.io/guidelines/patterns/selection.html#selection-item-selection

@import '../../core/_breakpoint.scss';
@import '../../core/_elevation.scss';
@import '../../core/_motion.scss';
@import '../../core/_platform.scss';

$mdw-selection__ripple-size: dp(40) !default;
$mdw-selection__icon-size: dp(24) !default;
$mdw-selection__scale-size: ($mdw-selection__ripple-size/$mdw-selection__icon-size) !default;
$mdw-selection__radio-size: dp(20) !default;
$mdw-selection__checkbox-size: dp(18) !default;
$mdw-selection__border-size: dp(2) !default;
$mdw-selection__horizontal-margin: dp(2) !default;
// from ic_check_black_18px.svg
// rotated 45Â°
$mdw-selection__checkbox-icon-height: dp(12.73) !default;
$mdw-selection__checkbox-icon-width: dp(5.93) !default;
$mdw-selection__checkbox-icon-thickness: dp(1.5) !default;
$mdw-selection__checkbox-icon-offset-y: dp(2.64) - $mdw-selection__checkbox-icon-thickness - $mdw-selection__border-size !default;
$mdw-selection__checkbox-icon-offset-x: dp(6.04) - $mdw-selection__border-size !default;

.mdw-selection {
  display: inline-flex;
  position: relative;
  flex-direction: row;
}

.mdw-selection__input {
  display: inline-flex;
  align-self: center;
  order: 1;

  min-height: $mdw-selection__icon-size;
  min-width: $mdw-selection__icon-size;
  margin: 0 auto;
  padding: 0;

  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: none;
  -webkit-tap-highlight-color: transparent;

  transition-property: transform, color, opacity;

  opacity: 0;
  transform: scale($mdw-selection__scale-size);

  background-color: currentColor;
  // background-color: var(--button__ripple-color);
  border-radius: 50%;

  color: inherit;

  &::-ms-check {
    background-color: transparent;
    border-color: transparent;
    // IE11
    border-radius: 50%;
    color: transparent;
  }

  .mdw-selection[aria-disabled="true"] &,
  &:disabled {
    cursor: not-allowed;
  }

  // HTMLInputElement should not have psuedos
  &.mdw-overlay::before {
    display: none;
    content: none;
  }

  &[role="switch"] {
    margin-right: dp(12);
  
    transform: translateX(#{dp(-2)}) scale($mdw-selection__scale-size);
  
    &:checked {
      transform: translateX(#{dp(14)}) scale($mdw-selection__scale-size);
    }
  
    label.mdw-selection:active &:not(:disabled),
    label.mdw-selection:hover &:not(:disabled),
    &:active:not(:disabled),
    &:hover:not(:disabled),
    &:focus {
      transform: translateX(#{dp(-2)}) scale($mdw-selection__scale-size);
  
      &:checked {
        transform: translateX(#{dp(14)}) scale($mdw-selection__scale-size);
      }
    }
  }
}

.mdw-selection__icon {
  display: inline-flex;
  position: relative;

  box-sizing: border-box;
  height: $mdw-selection__icon-size;
  width: $mdw-selection__icon-size;
  margin: 0;
  margin-top: auto;
  margin-bottom: auto;
  padding: 0;

  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: none;
  -webkit-tap-highlight-color: transparent;

  transition-property: background-color, border-color;

  pointer-events: none;
  
  z-index: 1;

  background-color: transparent;

  :root[dir="rtl"] & {
    order: 1;
  }

  .mdw-selection__input ~ & {
    // width is represented by input element
    max-width: 0;
  }


  &::before {
    content: "";

    position: absolute;
    top: 0;
    left: 0;

    box-sizing: border-box;
    border-style: solid;
    border-width: dp(2);

    transition-property: border-width, border-color, background-color, color;

    background-color: transparent;
    border-color: currentColor;
  }

  &::after {
    content: "";

    position: absolute;
  }

  .mdw-selection[aria-disabled="true"] &,
  .mdw-selection__input:disabled ~ & {
    cursor: not-allowed;
  }

  &[mdw-checkbox] {
    // Box outline
    &::before {
      top: ($mdw-selection__icon-size - $mdw-selection__checkbox-size) / 2;
      left: ($mdw-selection__icon-size - $mdw-selection__checkbox-size) / 2;
  
      height: $mdw-selection__checkbox-size;
      width: $mdw-selection__checkbox-size;
  
      border-radius: dp(2);
  
      // Checked or Active
      .mdw-selection[aria-checked="true"] &,
      .mdw-selection[aria-checked]:not([aria-disabled="true"]):active &,
      .mdw-selection__input[type="checkbox"]:checked ~ &,
      .mdw-selection__input[type="checkbox"]:not(:disabled):active ~ & {
        border-width: $mdw-selection__checkbox-size / 2;
      }
  
      // Checked not
      .mdw-selection[aria-checked="true"]:not(:active):not([aria-disabled="true"]) &,
      .mdw-selection__input[type="checkbox"]:checked:not(:active):not(:disabled) ~ & {
        background-color: currentColor;
      }
    }
  
    // Check stencil
    &::after {
      top: $mdw-selection__border-size + (($mdw-selection__icon-size - $mdw-selection__checkbox-size) / 2);
      left: $mdw-selection__border-size + (($mdw-selection__icon-size - $mdw-selection__checkbox-size) / 2);
      
      height: $mdw-selection__checkbox-icon-height;
      width: $mdw-selection__checkbox-icon-width;
      margin-top: $mdw-selection__checkbox-icon-offset-y;
      margin-left: $mdw-selection__checkbox-icon-offset-x;
  
      .mdw-selection[aria-checked="true"] &,
      .mdw-selection__input[type="checkbox"]:checked ~ & {
        box-sizing: border-box;
        border-right-style: solid;
        border-bottom-style: solid;
        // border-width: $mdw-selection__checkbox-icon-thickness;
        // Increase visibility
        border-width: dp(2);
  
        animation-name: showCheck;
        animation-direction: normal;
        animation-fill-mode: forwards;
  
        transition: none;
        
        transform: rotate(45deg);
        
        background-color: transparent;
      }
    }
  }

  &[mdw-radio] {
    // Outer ring
    &::before {
      top: ($mdw-selection__icon-size - $mdw-selection__radio-size) / 2;
      left: ($mdw-selection__icon-size - $mdw-selection__radio-size) / 2;
  
      height: $mdw-selection__radio-size;
      width: $mdw-selection__radio-size;
  
      border-color: currentColor;
      border-radius: 50%;
  
      // Active, not disabled
      .mdw-selection:active:not([aria-disabled="true"]) &,
      .mdw-selection__input:active:not(:disabled) ~ & {
        border-width: $mdw-selection__radio-size / 2;
      }
    }
  
    // Center dot
    &::after {
      top: ($mdw-selection__icon-size - $mdw-selection__radio-size) / 2;
      left: ($mdw-selection__icon-size - $mdw-selection__radio-size) / 2;
  
      height: $mdw-selection__radio-size;
      width: $mdw-selection__radio-size;
  
      transition-property: transform, background-color;
  
      transform: scale(0);
  
      background-color: currentColor;
      border-radius: 50%;
  
      .mdw-selection[aria-checked="true"] &,
      .mdw-selection__input:checked ~ & {
        transform: scale(0.5);
      }
    }
  }

  &[mdw-switch] {
    width: dp(36);

    &::before {
      top: dp(2);
      left: 0;
  
      height: dp(20);
      width: dp(20);
      border-style: none;
  
      transition-property: background-color, transform;
  
      transform: translateX(0);
      z-index: 1;
  
      background-color: currentColor;
  
      border-radius: 50%;
      box-shadow: mdwElevation(1);
  
      .mdw-selection[aria-checked="true"] &,
      .mdw-selection__input:checked ~ & {
        transform: translateX(#{dp(16)});
      }
    }
  
    &::after {
      top: dp(5);
      bottom: dp(5);
      left: 0;
  
      height: dp(14);
      width: dp(36);
      margin: 0;
      border-style: none;
  
      animation-name: none;
  
      transform: none;

      background-color: currentColor;
  
      border-radius: dp(7);
    }
  
    .mdw-selection:active:not([aria-disabled="true"]) &,
    .mdw-selection__input:active:not(:disabled) ~ & {
      // color: inherit;
    }
  }
}

.mdw-selection__label {
  order: -1;

  padding-right: dp(8);
  padding-left: 0;

  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  user-select: none;

  z-index: 1;

  :root[dir="rtl"] & {
    padding-right: 0;
    padding-left: dp(8);
  }

  // Label as suffix
  .mdw-selection__icon ~ & {
    order: 1;

    padding-right: 0;
    padding-left: dp(8);

    :root[dir="rtl"] & {
      padding-right: dp(8);
      padding-left: 0;
    }
  }

  .mdw-selection[aria-disabled="true"] &,
  .mdw-selection__input:disabled ~ & {
    cursor: not-allowed;
  }
}

.mdw-selection__input,
.mdw-selection__icon,
.mdw-selection__icon::before,
.mdw-selection__icon::after {
  animation-duration: $mdw-motion__simple-duration;
  animation-timing-function: $mdw-motion__standard-easing;
  animation-delay: 0s;

  transition-delay: 0s;
  transition-duration: $mdw-motion__simple-duration;
  transition-timing-function: $mdw-motion__standard-easing;
}

@keyframes showCheck {
  // Animation is applied to pre-rotated box;
  // Clip box completely horizontally and vertically upto bottom border
  0% {
    clip: rect($mdw-selection__checkbox-icon-height - $mdw-selection__checkbox-icon-thickness, 0, auto, auto);
  }
  // Remove horizontal clip
  // % = stroke length upto corner
  #{$mdw-selection__checkbox-icon-width / ($mdw-selection__checkbox-icon-width + $mdw-selection__checkbox-icon-height) * 100%} {
    clip: rect($mdw-selection__checkbox-icon-height - $mdw-selection__checkbox-icon-thickness, $mdw-selection__checkbox-icon-width, auto, auto);
  }
  // Remove vertical clip
  100% {
    clip: rect(0, $mdw-selection__checkbox-icon-width, auto, auto);
  }
}
