// https://material.io/archive/guidelines/components/selection-controls.html#selection-controls-switch

@import '../../core/theme/index.scss';

$mdw-selection__theme-values: (
  icon-color:              $mdw-theme__foreground,
  icon-opacity:            $mdw-theme__medium-opacity,
  
  fallback-check-color:    (('background', '50', 1.00), ('background','900',1.0)),
  ripple-color:            (('foreground-light', 1.00), ('foreground-dark', 1.00)),

  track-on-opacity:        (0.50, 0.50),
  track-off-color:         (('foreground-light', 1.00), ('foreground-dark', 1.00)),
  track-off-opacity:       (0.38, 0.30),

  thumb-off-color:         (('background', '50', 1.00), ('background','400',1.0)),
  thumb-disabled-color:    (('background', '400', 1.00), ('background','800',1.00)),

  disabled-opacity:              (0.38, 0.50),

  hover-opacity:                 (0.04, 0.08),
  focus-opacity:                 (0.12, 0.24),
  selected-opacity:              (0.08, 0.16),
  
  hover-focus-opacity:           (0.04 + 0.12, 0.08 + 0.24),

  selected-hover-opacity:        (0.08 + 0.04, 0.16 + 0.08),
  selected-focus-opacity:        (0.08 + 0.12, 0.16 + 0.24),
  selected-hover-focus-opacity:  (0.08 + 0.04 + 0.12, 0.16 + 0.08 + 0.24),

) !default;

@function mdwSelectionThemeValue($key, $type) {
  @return mdwGetThemeValue('selection', $mdw-selection__theme-values, $key, $type);
}

@mixin mdw-selection__theme-rules($type: 'var') {
  .mdw-selection__input {
    opacity: 0;

    &:not(:checked) {
      color: RGBA(mdwSelectionThemeValue("icon-color", $type), mdwSelectionThemeValue("icon-opacity", $type));
    }

    &:not([mdw-overlay-touch="true"]) {
      &:checked:not([mdw-overlay-off~="selected"]) {
        // opacity: mdwSelectionThemeValue("selected-opacity", $type);
      }

      &:focus:not([mdw-overlay-off~="focus"]) {
        opacity: mdwSelectionThemeValue("focus-opacity", $type);

        &:checked:not([mdw-overlay-off~="selected"]) {
          opacity: mdwSelectionThemeValue("selected-focus-opacity", $type);
        }
      }
    }
  }

  .mdw-selection:not([aria-disabled="true"]) .mdw-selection__input:not(:disabled) {
    &:hover:not([mdw-overlay-off~="hover"]) {
      opacity: mdwSelectionThemeValue("hover-opacity", $type);

      &:checked:not([mdw-overlay-off~="selected"]) {
        opacity: mdwSelectionThemeValue("selected-hover-opacity", $type);
      }
    }

    &:hover:focus:not([mdw-overlay-off~="hover"]):not([mdw-overlay-off~="focus"]) {
      opacity: mdwSelectionThemeValue("hover-focus-opacity", $type);

      &:checked:not([mdw-overlay-off~="selected"]) {
        opacity: mdwSelectionThemeValue("selected-hover-focus-opacity", $type);
      }
    }
  }


  // Checkbox check default
  .mdw-selection__icon[mdw-checkbox]::after {
    // Checkbox color is based on currently filled background-color
    @if($type == 'var') {
      @include mdw-platform__edge {
        // Edge will not inherit css variables for border in psuedos
        border-color: RGBA(mdwSelectionThemeValue("fallback-check-color", $type));
      }
      border-color: RGB(var(--mdw-surface));
    } @else {
      border-color: RGBA(mdwSelectionThemeValue("fallback-check-color", $type));
    }
  }

  // Switch track default
  .mdw-selection__icon[mdw-switch]::after {
    opacity: mdwSelectionThemeValue("track-on-opacity", $type);
  }

  // Unchecked or disabled HTMLInputElement
  .mdw-selection[aria-checked="false"] .mdw-selection__icon,
  .mdw-selection[aria-disabled="true"] .mdw-selection__icon,
  .mdw-selection__input:not(:checked) ~ .mdw-selection__icon,
  .mdw-selection__input:disabled ~ .mdw-selection__icon {
    &[mdw-checkbox],
    &[mdw-radio] {
      color: RGBA(mdwSelectionThemeValue("icon-color", $type), mdwSelectionThemeValue("icon-opacity", $type));
    }

    &[mdw-switch] {
      // Thumb
      &::before {
        background-color: RGBA(mdwSelectionThemeValue("thumb-off-color", $type));
      }
      // Track
      &::after {
        opacity: mdwSelectionThemeValue("track-off-opacity", $type);

        background-color: RGBA(mdwSelectionThemeValue("track-off-color", $type));
      }
    }
  }

  // Disabled HTMLInputElement
  .mdw-selection[aria-disabled="true"] .mdw-selection__label,
  .mdw-selection[aria-disabled="true"] .mdw-selection__icon,
  .mdw-selection__input:disabled ~ .mdw-selection__label,
  .mdw-selection__input:disabled ~ .mdw-selection__icon {
    opacity: mdwSelectionThemeValue("disabled-opacity", $type);
  }

  // Disabled switch colors
  .mdw-selection[aria-disabled="true"] .mdw-selection__icon[mdw-switch],
  .mdw-selection__input:disabled ~ .mdw-selection__icon[mdw-switch] {
    // Thumb
    &::before {
      background-color: RGBA(mdwSelectionThemeValue("thumb-disabled-color", $type));
    }
    // Track
    &::after {
      background-color: RGBA(mdwSelectionThemeValue("track-off-color", $type));
    }
  }
}


@include mdw-theme__add-component-fallback-rules('light') {
  @include mdw-selection__theme-rules('light');
}
@include mdw-theme__add-component-fallback-rules('dark') {
  @include mdw-selection__theme-rules('dark');
}

@include mdw-theme__add-component-variable-rules('selection', $mdw-selection__theme-values) {
  @include mdw-selection__theme-rules();
}
