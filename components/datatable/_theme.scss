@import '../../core/theme/index.scss';

$mdw-datatable__theme-values: (
  text-color:                    $mdw-theme__foreground,
  text-opacity:                  $mdw-theme__high-opacity,
  secondary-text-opacity:        $mdw-theme__medium-opacity,
  divider-opacity:               $mdw-theme__divider-opacity,

  hover-opacity:                 (0.04, 0.08),
  focus-opacity:                 (0.12, 0.24),
  selected-opacity:              (0.08, 0.16),

  hover-focus-opacity:           (0.04 + 0.12, 0.08 + 0.24),

  selected-hover-opacity:        (0.08 + 0.04, 0.16 + 0.08),
  selected-focus-opacity:        (0.08 + 0.12, 0.16 + 0.24),
  selected-hover-focus-opacity:  (0.08 + 0.04 + 0.12, 0.16 + 0.08 + 0.24),


  header-fill-text:       ((invalid                  ), (#fff,              1.00)),
  selected-primary-ie:    (('primary'  , '500', null), ('primary',   '500', null)),
  selected-secondary-ie:  (('secondary', '500', null), ('secondary', '500', null)),
  selected-warn-ie:       (('warn'     , '500', null), ('warn',      '500', null)),
) !default;

@function mdwDatatableThemeValue($key, $type) {
  @return mdwGetThemeValue('datatable', $mdw-datatable__theme-values, $key, $type);
}

@mixin mdw-datatable__theme-rules($type: 'var') {
  .mdw-datatable tr,
  .mdw-datatable td,
  .mdw-datatable th {
    border-color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("divider-opacity", $type));
  }

  .mdw-datatable th:not([mdw-selector]),
  .mdw-datatable__footer {
    color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("secondary-text-opacity", $type));
  }

  .mdw-datatable caption,
  .mdw-datatable__header-text {
    color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("text-opacity", $type));
  }
  
  .mdw-datatable__header-controls,
  .mdw-datatable__footer-controls {
    color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("text-opacity", $type));
  }

  .mdw-datatable td:not([mdw-checkbox]) {
    color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("text-opacity", $type));
  }

  .mdw-datatable th[aria-sort]:not([aria-sort="none"]) {
    color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("text-opacity", $type));
  }

  .mdw-datatable tbody {
    > tr {
      &:hover {
        background-color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("hover-opacity", $type));
      }

      &:focus,
      > td:focus {
        background-color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("focus-opacity", $type));
      }

      &:hover:focus,
      & > td:hover:focus {
        background-color: RGBA(mdwDatatableThemeValue("text-color", $type), mdwDatatableThemeValue("hover-focus-opacity", $type))
      }
    }
  }

  .mdw-datatable[mdw-has-selection] {
    caption,
    .mdw-datatable__header-text {
      @if ($type == 'light') {
        color: inherit;
      } @else {
        color: RGBA(mdwDatatableThemeValue("header-fill-text", $type));
      }
      
    }
  }

  @if ($type == 'var') {
    .mdw-datatable[mdw-has-selection] {
      .mdw-datatable__header,
      caption {
        background-color: RGBA(var(--mdw-ink), mdwDatatableThemeValue("selected-opacity", $type));
      }
    }

    .mdw-datatable tbody tr[aria-selected="true"] {
      background-color: RGBA(var(--mdw-ink), mdwDatatableThemeValue("selected-opacity", $type));

      &:hover {
        background-color: RGBA(var(--mdw-ink), mdwDatatableThemeValue("selected-hover-opacity", $type));
      }

      &:focus {
        background-color: RGBA(var(--mdw-ink), mdwDatatableThemeValue("selected-focus-opacity", $type));
      }

      &:hover:focus {
        background-color: RGBA(var(--mdw-ink), mdwDatatableThemeValue("selected-hover-focus-opacity", $type));
      }
    }
  } @else {
    @each $color in ('primary', 'secondary', 'warn') {
      .mdw-datatable[mdw-ink^="#{$color}"] {
        &[mdw-has-selection] {
          .mdw-datatable__header,
          caption {
            background-color: RGBA(mdwDatatableThemeValue("selected-#{$color}-ie", $type), mdwDatatableThemeValue("selected-opacity", $type));
          }
        }

        tbody tr[aria-selected="true"] {
          background-color: RGBA(mdwDatatableThemeValue("selected-#{$color}-ie", $type), mdwDatatableThemeValue("selected-opacity", $type));

          &:hover {
            background-color: RGBA(mdwDatatableThemeValue("selected-#{$color}-ie", $type), mdwDatatableThemeValue("selected-hover-opacity", $type));
          }

          &:focus {
            background-color: RGBA(mdwDatatableThemeValue("selected-#{$color}-ie", $type), mdwDatatableThemeValue("selected-focus-opacity", $type));
          }

          &:hover:focus {
            background-color: RGBA(mdwDatatableThemeValue("selected-#{$color}-ie", $type), mdwDatatableThemeValue("selected-hover-focus-opacity", $type));
          }
        }
      }
    }
  }
}


@include mdw-theme__add-component-fallback-rules('light') {
  @include mdw-datatable__theme-rules('light');
}
@include mdw-theme__add-component-fallback-rules('dark') {
  @include mdw-datatable__theme-rules('dark');
}


@include mdw-theme__add-component-variable-rules('datatable', $mdw-datatable__theme-values) {
  @include mdw-datatable__theme-rules();
}
