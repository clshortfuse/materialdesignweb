@import '../../core/theme/index.scss';

$mdw-datatable__theme-values: (
  text-color:           $mdw-theme__default-ink,
  secondary-text-color: $mdw-theme__medium-ink,
  divider-color:        $mdw-theme__divider-ink,

  controls-color:       $mdw-theme__default-ink,

  overlay-rgb:          ("0, 0, 0", "255, 255, 255"),

  hover-opacity:                 (0.04, 0.08),
  focus-opacity:                 (0.12, 0.24),
  selected-opacity:              (0.08, 0.16),

  hover-focus-opacity:           (0.04 + 0.12, 0.08 + 0.24),

  selected-hover-opacity:        (0.08 + 0.04, 0.16 + 0.08),
  selected-focus-opacity:        (0.08 + 0.12, 0.16 + 0.24),
  selected-hover-focus-opacity:  (0.08 + 0.04 + 0.12, 0.16 + 0.08 + 0.24),


  header-fill-text:       ((invalid                  ), (#fff,              1.00)),
  selected-primary-ie:    (('primary'   , '500', 1.00), ('primary',    '500', 1.00)),
  selected-accent-ie:     (('accent'    , '500', 1.00), ('accent',     '500', 1.00)),
  selected-warn-ie:       (('warn'      , '500', 1.00), ('warn',       '500', 1.00)),
) !default;

@function mdwDatatableThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('datatable', $mdw-datatable__theme-values, $key, $type, $theme);
}

@mixin mdw-datatable__theme-rules($type: 'var', $theme: null) {
  .mdw-datatable tr,
  .mdw-datatable td,
  .mdw-datatable th {
    border-color: mdwDatatableThemeValue("divider-color", $type, $theme);
  }

  .mdw-datatable caption,
  .mdw-datatable__header-text {
    color: mdwDatatableThemeValue("text-color", $type, $theme);
  }
  
  .mdw-datatable__header-controls,
  .mdw-datatable__footer-controls {
    color: mdwDatatableThemeValue("controls-color", $type, $theme);
    @if ($type == 'var') {
      --ink-color: var(--foreground-color);
    }
  }

  .mdw-datatable th:not([mdw-selector]),
  .mdw-datatable__footer {
    color: mdwDatatableThemeValue("secondary-text-color", $type, $theme);
  }

  .mdw-datatable td:not([data-type="checkbox"]) {
    color: mdwDatatableThemeValue("text-color", $type, $theme);
  }

  .mdw-datatable tbody {
    > tr {
      &:hover {
        background-color: unquote("rgba(")
          #{mdwDatatableThemeValue("overlay-rgb", $type, $theme)},
          #{mdwDatatableThemeValue("hover-opacity", $type, $theme)}
          unquote(")");
      }

      &:focus,
      > td:focus {
        background-color: unquote("rgba(")
          #{mdwDatatableThemeValue("overlay-rgb", $type, $theme)},
          #{mdwDatatableThemeValue("focus-opacity", $type, $theme)}
          unquote(")");
      }

      &:hover:focus,
      & > td:hover:focus {
        background-color: unquote("rgba(")
          #{mdwDatatableThemeValue("overlay-rgb", $type, $theme)},
          #{mdwDatatableThemeValue("hover-focus-opacity", $type, $theme)}
          unquote(")");
      }
    }
  }

  .mdw-datatable[mdw-has-selection] {
    caption,
    .mdw-datatable__header-text {
      @if ($type == 'light') {
        color: inherit;
      } @else {
        color: mdwDatatableThemeValue("header-fill-text", $type, $theme);
      }
      
    }
  }

  .mdw-datatable th[mdw-sorted] {
    color: mdwDatatableThemeValue("text-color", $type, $theme);
  }

  @if ($type == 'var') {
    .mdw-datatable tbody tr[aria-selected="true"] {
      background-color: rgba(var(--ink-color), mdwDatatableThemeValue("selected-opacity", $type, $theme));

      &:hover {
        background-color: rgba(var(--ink-color), mdwDatatableThemeValue("selected-hover-opacity", $type, $theme));
      }

      &:focus {
        background-color: rgba(var(--ink-color), mdwDatatableThemeValue("selected-focus-opacity", $type, $theme));
      }

      &:hover:focus {
        background-color: rgba(var(--ink-color), mdwDatatableThemeValue("selected-hover-focus-opacity", $type, $theme));
      }
    }

    .mdw-datatable[mdw-has-selection] {
      .mdw-datatable__header,
      caption {
        background-color: rgba(var(--ink-color), mdwDatatableThemeValue("selected-opacity", $type, $theme));
      }
    }
  }

  @if ($type != 'var') {
    .mdw-datatable[mdw-ink^="primary"] {
      &[mdw-has-selection] {
        .mdw-datatable__header,
        caption {
          background-color: rgba(
            mdwDatatableThemeValue("selected-primary-ie", $type, $theme),
            mdwDatatableThemeValue("selected-opacity", $type, $theme)
          );
        }
      }

      tbody tr[aria-selected="true"] {
        background-color: rgba(
          mdwDatatableThemeValue("selected-primary-ie", $type, $theme),
          mdwDatatableThemeValue("selected-opacity", $type, $theme));

          &:hover {
          background-color: rgba(
            mdwDatatableThemeValue("selected-primary-ie", $type, $theme),
            mdwDatatableThemeValue("selected-hover-opacity", $type, $theme));
        }

        &:focus {
          background-color: rgba(
            mdwDatatableThemeValue("selected-primary-ie", $type, $theme),
            mdwDatatableThemeValue("selected-focus-opacity", $type, $theme));
        }

        &:hover:focus {
          background-color: rgba(
            mdwDatatableThemeValue("selected-primary-ie", $type, $theme),
            mdwDatatableThemeValue("selected-hover-focus-opacity", $type, $theme));
        }
      }
    }

    .mdw-datatable[mdw-ink^="accent"] {
      &[mdw-has-selection] {
        .mdw-datatable__header,
        caption {
          background-color: rgba(
            mdwDatatableThemeValue("selected-accent-ie", $type, $theme),
            mdwDatatableThemeValue("selected-opacity", $type, $theme)
          );
        }
      }

      tbody tr[aria-selected="true"] {
        background-color: rgba(
          mdwDatatableThemeValue("selected-accent-ie", $type, $theme),
          mdwDatatableThemeValue("selected-opacity", $type, $theme));

        &:hover {
          background-color: rgba(
            mdwDatatableThemeValue("selected-accent-ie", $type, $theme),
            mdwDatatableThemeValue("selected-hover-opacity", $type, $theme));
        }

        &:focus {
          background-color: rgba(
            mdwDatatableThemeValue("selected-accent-ie", $type, $theme),
            mdwDatatableThemeValue("selected-focus-opacity", $type, $theme));
        }

        &:hover:focus {
          background-color: rgba(
            mdwDatatableThemeValue("selected-accent-ie", $type, $theme),
            mdwDatatableThemeValue("selected-hover-focus-opacity", $type, $theme));
        }
      }
    }

    .mdw-datatable[mdw-ink^="warn"] {
      &[mdw-has-selection] {
        .mdw-datatable__header,
        caption {
          background-color: rgba(
            mdwDatatableThemeValue("selected-warn-ie", $type, $theme),
            mdwDatatableThemeValue("selected-opacity", $type, $theme)
          );
        }
      }

      tbody tr[aria-selected="true"] {
        background-color: rgba(
          mdwDatatableThemeValue("selected-warn-ie", $type, $theme),
          mdwDatatableThemeValue("selected-opacity", $type, $theme));

          &:hover {
          background-color: rgba(
            mdwDatatableThemeValue("selected-warn-ie", $type, $theme),
            mdwDatatableThemeValue("selected-hover-opacity", $type, $theme));
        }

        &:focus {
          background-color: rgba(
            mdwDatatableThemeValue("selected-warn-ie", $type, $theme),
            mdwDatatableThemeValue("selected-focus-opacity", $type, $theme));
        }

        &:hover:focus {
          background-color: rgba(
            mdwDatatableThemeValue("selected-warn-ie", $type, $theme),
            mdwDatatableThemeValue("selected-hover-focus-opacity", $type, $theme));
        }
      }
    }
  }
}

@each $name in map-keys($mdw-theme__themes) {
  $theme: map-get($mdw-theme__themes, $name);
  @include mdw-theme__add-component-fallback-rules('light', $name) {
    @include mdw-datatable__theme-rules('light', $theme);
  }
  @include mdw-theme__add-component-fallback-rules('dark', $name) {
    @include mdw-datatable__theme-rules('dark', $theme);
  }
}

@include mdw-theme__add-component-variable-rules('datatable', $mdw-datatable__theme-values) {
  @include mdw-datatable__theme-rules();
}
