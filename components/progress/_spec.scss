// https://material.io/guidelines/components/progress-activity.html#

// https://android.googlesource.com/platform/frameworks/base/+/master/core/res/res/anim/progress_indeterminate_rotation_material.xml
// https://android.googlesource.com/platform/frameworks/base/+/master/core/res/res/anim/progress_indeterminate_material.xml
// https://android.googlesource.com/platform/frameworks/base/+/master/core/res/res/drawable/vector_drawable_progress_bar_medium.xml

@use "sass:math";

@use '../../core/_motion.scss' as motion;
@use '../../core/_platform.scss' as platform;
@use '../../core/_length.scss' as *;

:root {
  --mdw-progress__circle-duration: 1333ms;
}

/*
 * SVG Animated Material Spin Animation
 * radius = 8.75
 * pi = 3.14159
 * circumference = 2 * pi * r = (54.977825)
 * dash-length = circumference * (100-x)/100
 *
 * Every cycle rotates entire shape an additional -90deg (CCW)
 *
 * Entire animation rotates 4x speed (CW)
 *
 * 1. Start head at: 0.5%
 * 2. Ease in head: to 75%
 * 3. Ease out tail: to 74.5%
 * 4. Rotate -90 deg
 *
 * Animate with ease-in-out
 */

@function circlePercentage($percent, $limit: 100) {
  $radius: 8.75;
  $pi: 3.14159265359;
  $circumference: 2 * $pi * $radius;
  @return $circumference * (math.div($limit,100) - math.div($percent,100));
}

@keyframes rotate-clockwise {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes rotate-counterclockwise {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(-360deg);
  }
}

@keyframes mdw-progress-dash {
  0% {
    stroke-dashoffset: circlePercentage(0.5, 75);
  }
  #{motion.$standardPeakVelocity * 100%} {
    stroke-dashoffset: circlePercentage(75, 75);
  }

  100% {
    stroke-dashoffset: circlePercentage(149.5, 75);
  }
}

.mdw-progress__circle {
  block-size: 48px;
  inline-size: 48px;
  margin: 8px;

  stroke-width: 2.5;

  svg {
    block-size: 100%;
    inline-size: 100%;

    animation-name: rotate-clockwise;
    animation-duration: var(--mdw-progress__circle-duration);
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    will-change: transform;

    transform: rotate(0deg);

    & > path {
      transform-origin: center center;

      fill: none;
      stroke: currentColor;
      stroke-width: inherit;

      &:nth-child(1) {
        animation-name: mdw-progress-dash, rotate-counterclockwise;
        animation-duration: var(--mdw-progress__circle-duration), calc(var(--mdw-progress__circle-duration) * 4);
        animation-timing-function: motion.$standardEasing, steps(4, end);
        animation-iteration-count: infinite;

        stroke-dasharray: circlePercentage(25, 100);
        stroke-dashoffset: circlePercentage(math.div(100, 3), 75); // Fallback 33% length for IE
        stroke-linecap: round;

      }

      &:nth-child(2) {
        display: none;

        transition-duration: motion.$shapeChangeDuration;

        transition-property: stroke-dashoffset;
        transition-timing-function: motion.$standardEasing;

        stroke-dasharray: circlePercentage(0, 100);
        stroke-dashoffset: circlePercentage(0, 100);
        stroke-linecap: square;
      }

    }
  }
}

.mdw-progress__circle[mdw-determinate] {
  svg {
    animation: none;
    will-change: none;

    & > path {
      &:nth-child(1) {
        display: none;

        animation: none;
      }

      &:nth-child(2) {
        display: inline;
      }
    }
  }
}

.mdw-progress__circle[value='100'] {
  svg {
    & > path:nth-child(2) {
      stroke-dashoffset: circlePercentage(100);
    }
  }
}
