@import '../../core/theme/exports.scss';

$mdw-menu__theme-values: (
  text-color:       (('foreground-light', 0.87), ('foreground-dark', 1.00)),
  secondary-color:  (('foreground-light', 0.54), ('foreground-dark', 0.70)),
  background-color: ((#fff,              1.00), ('background', '800', 1.00)),
  disabled-opacity: (0.38, 0.50),
) !default;

@function mdwMenuThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('menu', $mdw-menu__theme-values, $key, $type, $theme);
}

// Vary by contrast or theme
@mixin mdw-menu__theme-rules($type: 'var', $theme: null) {
  .mdw-menu__popup {
    background-color: mdwMenuThemeValue("background-color", $type, $theme);
  }


  .mdw-menu__icon,
  .mdw-menu__check,
  .mdw-menu__radio {
    color: mdwMenuThemeValue("secondary-color", $type, $theme);
  }

  .mdw-menu__item {
    color: mdwMenuThemeValue("text-color", $type, $theme);
    &[aria-disabled="true"] {
      opacity: mdwMenuThemeValue("disabled-opacity", $type, $theme);
    }
  }
}


@each $name in map-keys($mdw-theme__themes) {
  $theme: map-get($mdw-theme__themes, $name);
  @include mdw-theme__add-component-fallback-rules('light', $name) {
    @include mdw-menu__theme-rules('light', $theme);
  }
  @include mdw-theme__add-component-fallback-rules('dark', $name) {
    @include mdw-menu__theme-rules('dark', $theme);
  }
}

@include mdw-theme__add-component-variable-rules('menu', $mdw-menu__theme-values) {
  @include mdw-menu__theme-rules();
}
