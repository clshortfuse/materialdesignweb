// https://material.io/design/components/tabs.html#spec

@import '../common/functions.scss';
@import '../common/motion.scss';

$tab__icon-size: 24;
$tab__icon-margin-top: 12;
$tab__icon-to-label-baseline: 20;
$tab__icon-with-label-height: 72;

.mdw-tab {
  display: flex;
  flex-direction: column;
}

.mdw-tab__items {
  overflow-y: hidden;
  position: relative;

  display: flex; // IE11 doesn't support grid-auto-columns
  display: grid;

  grid-auto-columns: 1fr;

  justify-content: flex-start;
  flex-direction: row;
  &[mdw-scrollable] {
    display: flex;
    overflow-x: auto;
    box-sizing: border-box;
    > .mdw-tab__item {
      min-width: dp(90);
      max-width: 100%;
      flex: none;
    }
    > .mdw-tab__indicator {
      margin-left: dp(52);
    }
    &::before,
    &::after {
      // Ensures 52dp blank space at end
      content: "";
      min-width: dp(52);
    }
  }
}

.mdw-tab__indicator {
  position: absolute;
  bottom: 0;
  height: 2px;
  width: 0;
  left: 0;
  right: auto;
  html[dir=rtl] & {
    right: 0;
    left: auto;
  }
  background-color: currentColor;
  transform-origin: left center;
  transition-property: transform;
  transition-timing-function: $motion-easing-standard;
  transition-duration: $motion-duration-desktop-default;
  @include allHandsets {
    transition-duration: $motion-duration-mobile-default;
  }
  @include allTablets {
    transition-duration: $motion-duration-tablet-default;
  }
  // Indicator width
  // Element position = 2 * number of input elements + 1 (itself)
  // Width = 100% / number of input elements
  @for $j from 1 through 8 {
    &:nth-child(#{$j + 1}) {
      width: #{100% / $j};
    }
  }
  // Indicator offset
  @for $i from 1 through 8 {
    .mdw-tab__input:checked:nth-of-type(#{$i}) ~ .mdw-tab__items > &,
    .mdw-tab__input:checked:nth-of-type(#{$i}) ~ .mdw-tab__items-wrapper .mdw-tab__items > &,
    .mdw-tab__item[mdw-selected]:nth-of-type(#{$i}) ~ & {
      transform: translateX(#{100% * ($i - 1)});
    }
    html[dir=rtl] .mdw-tab__input:checked:nth-of-type(#{$i}) ~ .mdw-tab__items > &,
    html[dir=rtl] .mdw-tab__input:checked:nth-of-type(#{$i}) ~ .mdw-tab__items-wrapper .mdw-tab__items > &,
    html[dir=rtl] .mdw-tab__item[mdw-selected]:nth-of-type(#{$i}) ~ & {
      transform: translateX(#{-100% * ($i - 1)});
    }
  }
  
  &[mdw-js-indicator] {
    width: 1px;
    transform: translateX(0);
  }
}

.mdw-tab__item {
  min-height: dp(48); // Redundant but needed for IE11
  position: relative;
  display: flex;
  flex: auto;
  flex-direction: column;
  align-items: center;

  grid-row: 1;

  box-shadow: none;
  box-sizing: content-box;
  border-radius: 0;
  z-index: 0;
  overflow: hidden;
  cursor: pointer;
  user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -webkit-tap-highlight-color: transparent;
  .mdw-tab__input:checked + & {
    cursor: default;
  }

  > .mdw-ripple {
    @include mdw-ripple__container;
  }

  & > .mdw-ripple > .mdw-ripple__inner,
  &::after {
    @include mdw-ripple__inner;
  }

  & > .mdw-ripple:active > .mdw-ripple__inner,
  &:active::after {
    @include mdw-ripple__active;
  }

  &[mdw-ripple] {
    overflow: visible;
    &::after {
      // If using custom ripple, destroy ::after object
      content: none;
    }
  }
}

.mdw-tab__icon {
  margin-top: dp($tab__icon-margin-top);
  @include baseline-bottom($tab__icon-to-label-baseline);
  margin-bottom: dp(-$tab__icon-to-label-baseline);
  pointer-events: none;
  transition-property: color;
  transition-timing-function: $motion-easing-standard;
  transition-duration: $motion-duration-desktop-default;
  @include allHandsets {
    transition-duration: $motion-duration-mobile-default;
  }
  @include allTablets {
    transition-duration: $motion-duration-tablet-default;
  }
}

.mdw-tab__label {
  @include type-rules('button');

  box-sizing: border-box;
  margin-top: auto;
  margin-bottom: auto;
  pointer-events: none;
  padding: 0 dp(16);

  text-align: center;
  transition-property: color;
  transition-timing-function: $motion-easing-standard;
  transition-duration: $motion-duration-desktop-default;
  @include allHandsets {
    transition-duration: $motion-duration-mobile-default;
  }
  @include allTablets {
    transition-duration: $motion-duration-tablet-default;
  }

  .mdw-tab__icon ~ & {
    margin: 0;
    min-height: 0;
    display: block;
    @include baseline-top($tab__icon-to-label-baseline);
    @include baseline-bottom($tab__icon-with-label-height
      - $tab__icon-margin-top
      - $tab__icon-size
      - $tab__icon-to-label-baseline
    );
  }
}

.mdw-tab__input {
  display: inline-block;
  height: 0;
  width: 0;
  margin: 0;
  padding: 0;

  outline: none;
  pointer-events: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

.mdw-tab__item[mdw-selected] > .mdw-tab__icon,
.mdw-tab__item[mdw-selected] > .mdw-tab__label {
  color: inherit;
}
@for $i from 1 through 8 {
  .mdw-tab__input:checked:nth-of-type(#{$i}) ~ .mdw-tab__items,
  .mdw-tab__input:checked:nth-of-type(#{$i}) ~ .mdw-tab__items-wrapper .mdw-tab__items {
    & > .mdw-tab__item:nth-child(#{$i}) {
      > .mdw-tab__icon,
      > .mdw-tab__label {
        color: inherit;
      }
    }
  }
}

.mdw-tab__content {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  align-items: stretch;
  overflow-x: hidden;
  position: relative;
}

.mdw-tab__content-item {
  max-width: 100%;
  visibility: hidden;
  flex-basis: 100%;
  flex-shrink: 0;
  transition-property: transform, visibility;
  transition-timing-function: $motion-easing-standard;
  transition-duration: $motion-duration-desktop-default, 0s;
  transition-delay: 0s, $motion-duration-desktop-default;
  @include allHandsets {
    transition-duration: $motion-duration-mobile-default, 0s;
    transition-delay: 0s, $motion-duration-mobile-default;
  }
  @include allTablets {
    transition-duration: $motion-duration-tablet-default, 0s;
    transition-delay: 0s, $motion-duration-tablet-default;
  }
  @for $j from 1 through 8 {
    .mdw-tab__content[mdw-selected-index="#{$j - 1}"] > &,
    .mdw-tab__input:checked:nth-of-type(#{$j}) ~ .mdw-tab__content > & {
      transform: translateX(#{-100% * ($j - 1)});
      &:nth-child(#{$j}) {
        visibility: visible;
        transition-delay: 0s, 0s;
      }
    }
    html[dir=rtl] .mdw-tab__content[mdw-selected-index="#{$j - 1}"] > &,
    html[dir=rtl] .mdw-tab__input:checked:nth-of-type(#{$j}) ~ .mdw-tab__content > & {
      transform: translateX(#{100% * ($j - 1)});
    }
  }
}

.mdw-tab__content[mdw-scrollsnap] {
  scroll-snap-type: x mandatory;
  -ms-scroll-snap-type: x mandatory;
  overflow-x: scroll;
  .mdw-tab__content-item {
    scroll-snap-align: start none;
  }
}