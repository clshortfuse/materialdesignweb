@import '../../core/theme/exports.scss';

$mdw-tab__theme-values: (
  active-color:      (('foreground-light', 0.87), ('foreground-dark', 1.00)),
  inactive-color:    (('foreground-light', 0.54), ('foreground-dark', 0.70)),
) !default;

@function mdwTabThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('tab', $mdw-tab__theme-values, $key, $type, $theme);
}


// Vary by contrast
@mixin mdw-tab__theme-rules($type: 'var', $theme: null) {
  .mdw-tab__list:not([mdw-color]) {
    color: mdwTabThemeValue("active-color", $type, $theme);
  }

  .mdw-tab__item[aria-selected="false"] {
    color: mdwTabThemeValue("inactive-color", $type, $theme);
  }

  @if ($type != 'var') {
    .mdw-tab__item.mdw-overlay::before {
      color: inherit;
    }
  }

}

@each $name in map-keys($mdw-theme__themes) {
  $theme: map-get($mdw-theme__themes, $name);
  @include mdw-theme__add-component-fallback-rules('light', $name) {
    @include mdw-tab__theme-rules('light', $theme);
  }
  @include mdw-theme__add-component-fallback-rules('dark', $name) {
    @include mdw-tab__theme-rules('dark', $theme);
  }
}

@include mdw-theme__add-component-variable-rules('tab', $mdw-tab__theme-values) {
  @include mdw-tab__theme-rules();
}
