// https://material.io/design/interaction/states.html
// https://material.io/design/components/buttons.html
// https://material.io/design/iconography/system-icons.html#color

@import '../../core/theme/index.scss';

$mdw-button__theme-values: (
  disabled-surface-background-color: $mdw-theme__inactive-ink,
  disabled-surface-text-color:       $mdw-theme__default-ink,
  default-text-color:                $mdw-theme__default-ink,
  disabled-text-color:               $mdw-theme__inactive-ink,
) !default;

@function mdwButtonThemeValue($key, $type) {
  @return mdwGetThemeValue('button', $mdw-button__theme-values, $key, $type);
}

@mixin mdw-button__theme-rules($type: 'var') {
  .mdw-button {
    &:disabled:not([aria-disabled="true"]) {
      color: mdwButtonThemeValue("disabled-text-color", $type);
      &.mdw-overlay::before {
        display: none;
      }
    }
    &.mdw-overlay[aria-disabled="true"] {
      // Sets foreground to default ink color
      color: mdwButtonThemeValue("default-text-color", $type);
      &[mdw-surface] {
        background-color: mdwButtonThemeValue("disabled-surface-background-color", $type);
        color: mdwButtonThemeValue("disabled-surface-text-color", $type);

        // Disabled filled buttons use parent's theming context
        @if ($type == 'var') {
          &[mdw-dark],
          &[mdw-light] {
            --button__disabled-surface-text-color: inherit;
            --button__disabled-surface-background-color: inherit;
          }
        }
      }
    }
  }
}


@include mdw-theme__add-component-fallback-rules('light') {
  @include mdw-button__theme-rules('light');
}
@include mdw-theme__add-component-fallback-rules('dark') {
  @include mdw-button__theme-rules('dark');
}

@include mdw-theme__add-component-variable-rules('button', $mdw-button__theme-values) {
  @include mdw-button__theme-rules();
}
