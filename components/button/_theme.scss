// https://material.io/design/interaction/states.html
// https://material.io/design/components/buttons.html
// https://material.io/design/iconography/system-icons.html#color

@import '../../core/theme/index.scss';

$mdw-button__theme-values: (
  text-color:                    $mdw-theme__default-ink,
  inactive-color:                $mdw-theme__inactive-ink,
  disabled-text-color:           $mdw-theme__default-ink,
  disabled-background-color:     $mdw-theme__inactive-ink,
  disabled-opacity:              (0.38, 0.50),
  outline-color:                 $mdw-theme__divider-ink,
) !default;

@function mdwButtonThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('button', $mdw-button__theme-values, $key, $type, $theme);
}

@mixin mdw-button__theme-rules($type: 'var', $theme: null) {
  .mdw-button {
    &:not(.mdw-theme),
    &[aria-pressed="false"],
    &[aria-pressed="false"][mdw-ink] {
      color: mdwButtonThemeValue('text-color', $type, $theme);
      --ink-color: var(--foreground-color);
    }

    &[mdw-icon][aria-pressed="false"] {
      color: mdwButtonThemeValue('inactive-color', $type, $theme);
    }

    &[mdw-outline] {
      border-color: mdwButtonThemeValue('outline-color', $type, $theme);
    }

    &[aria-disabled="true"],
    &[disabled] {
      opacity: mdwButtonThemeValue("disabled-opacity", $type, $theme);

      &[mdw-surface] {
        background-color: mdwButtonThemeValue("disabled-background-color", $type, $theme);
        color: mdwButtonThemeValue("disabled-text-color", $type, $theme);

        // Disabled filled buttons use parent's theming context
        @if ($type == 'var') {
          &[mdw-dark],
          &[mdw-light] {
            --button__disabled-text-color: inherit;
            --button__disabled-background-color: inherit;
          }
        }
      }
    }
  }
}

@each $name in map-keys($mdw-theme__themes) {
  $theme: map-get($mdw-theme__themes, $name);
  @include mdw-theme__add-component-fallback-rules('light', $name) {
    @include mdw-button__theme-rules('light', $theme);
  }
  @include mdw-theme__add-component-fallback-rules('dark', $name) {
    @include mdw-button__theme-rules('dark', $theme);
  }
}

@include mdw-theme__add-component-variable-rules('button', $mdw-button__theme-values) {
  @include mdw-button__theme-rules();
}
