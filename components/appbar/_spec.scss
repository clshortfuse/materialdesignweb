// https://material.io/guidelines/layout/structure.html#structure-app-bar
// https://material.io/archive/guidelines/components/toolbars.html

@use '../../core/_breakpoint.scss' as breakpoint;
@use '../../core/_length.scss' as *;
@use '../../core/_type.scss' as type;

$height: 64 !default;
$heightDense: 48 !default;
$heightMobile: 56 !default;
$heightMobileLandscape: 48 !default;
$heightProminent: 128 !default;
$heightProminentDense: 96 !default;
$iconHeight: 40 !default;

.mdw-appbar {
  display: flex;
  flex-direction: column;
}

.mdw-appbar__action {
  display: -ms-grid;
  display: grid;
  grid-template-columns: auto 1fr auto;
  -ms-grid-columns: auto 1fr auto;
  
  min-height: dp($height);
  -ms-grid-rows: minmax(dp($height), 1fr) auto;

  transition-duration: inherit;
  transition-property: min-height;
  transition-timing-function: inherit;

  z-index: 1;

  &[mdw-centered] {
    grid-template-columns: minmax(auto, 1fr) minmax(0, auto) minmax(auto, 1fr);
    -ms-grid-columns: minmax(max-content, 1fr) minmax(0, max-content) minmax(max-content, 1fr);
  }

  .mdw-appbar[mdw-prominent] > & {
    min-height: dp($heightProminent);
    -ms-grid-rows: minmax(dp($heightProminent), 1fr) auto;
  }
  
  .mdw-appbar[mdw-dense] > & {
    min-height: dp($heightDense);
    -ms-grid-rows: minmax(dp($heightDense), 1fr) auto;
  }
  
  .mdw-appbar[mdw-dense][mdw-prominent] > & {
    min-height: dp($heightProminentDense);
    -ms-grid-rows: minmax(dp($heightProminentDense), 1fr) auto;
    @include breakpoint.maxTabletDevice {
      min-height: dp($heightProminent);
      -ms-grid-rows: minmax(dp($heightProminent), 1fr) auto;
    }
  }

  &,
  .mdw-appbar[mdw-dense] > & {
    @include breakpoint.maxTabletDevice {
      min-height: dp($heightMobile);
    }
    @include breakpoint.isMobileDeviceLandscape {
      min-height: dp($heightMobileLandscape);
    }
  }
}

.mdw-appbar__content {
  display: flex;
  flex-direction: column;

  -ms-grid-column: 1;
  grid-column: 1;
  -ms-grid-column-span: 3;
  grid-column-end: span 3;
  -ms-grid-row: 2;
  grid-row: 2;

  margin-right: dp(24);
  margin-left: dp(80);
  @include breakpoint.has16DPMargin() {
    margin-right: dp(16);
    margin-left: dp(72);
  }
}

.mdw-appbar__title {
  @include type.addRules('h6');
  @include type.baselineToBottom(24);

  -ms-grid-row-align: end;
  align-self: flex-end;

  -ms-grid-column: 2;
  grid-column: 2;
  -ms-grid-row: 1;
  grid-row: 1;

  justify-content: space-around;
  overflow-x: hidden;
  
  height: auto;
  margin: 0 dp(16);

  transition-duration: inherit;
  transition-property: font, letter-spacing, margin-top;
  transition-timing-function: inherit;

  text-overflow: ellipsis;
  white-space: nowrap;


  .mdw-appbar[mdw-dense] & {
    @include type.baselineToBottom(16);
  }

  .mdw-appbar[mdw-dense] &,
  & {
    @include breakpoint.maxTabletDevice {
      @include type.baselineToBottom(20);
    }
    @include breakpoint.isMobileDeviceLandscape {
      @include type.baselineToBottom(16);
    }
  }

  .mdw-appbar[mdw-prominent] & {
    white-space: normal;
    @include type.addRules('h5');
    @include type.baselineToBottom(28);
  }

  &[mdw-custom] {
    margin-top: 0;

    &::after {
      display: none;
    }
  }
}

.mdw-appbar__start {
  -ms-grid-column: 1;
  grid-column: 1;

  margin-left: dp(8);

  padding: 0 dp(8);
  @include breakpoint.has16DPMargin() {
    margin-left: 0;
  }
}

.mdw-appbar__end {
  -ms-grid-column: 3;
  grid-column: 3;
  justify-content: flex-end;

  margin-right: dp(12);
  margin-left: 0;
  @include breakpoint.has16DPMargin() {
    margin-right: dp(4);
    margin-left: 0;
  }

  :root[dir="rtl"] & {
    margin-right: 0;
    margin-left: dp(12);
    @include breakpoint.has16DPMargin() {
      margin-right: 0;
      margin-left: dp(4);
    }
  }
}


.mdw-appbar__start,
.mdw-appbar__end {
  display: flex;
  align-items: flex-start;
  flex-direction: row;

  transition-property: margin-top;
}

.mdw-appbar__start,
.mdw-appbar__end,
.mdw-appbar__title {
  margin-top: dp(($height - $iconHeight) / 2);
  
  .mdw-appbar[mdw-dense] & {
    margin-top: dp(($heightDense - $iconHeight) / 2);
  }

  &,
  .mdw-appbar[mdw-dense] & {
    @include breakpoint.maxTabletDevice {
      margin-top: dp(($heightMobile - $iconHeight) / 2);
    }
    @include breakpoint.isMobileDeviceLandscape {
      margin-top: dp(($heightMobileLandscape - $iconHeight) / 2);
    }
  }
}

.mdw-appbar__start .mdw-button {
  margin: 0;
}

.mdw-appbar__end .mdw-button {
  margin: 0 dp(4);

  &[mdw-more-button] {
    margin-right: dp(-2);
    margin-left: 0;

    :root[dir="rtl"] & {
      margin-right: 0;
      margin-left: dp(-2);
    }
  }
}
