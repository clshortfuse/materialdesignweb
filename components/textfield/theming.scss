@import '../common/theming.scss';

$mdw-textfield__theme-values: (
  text-color:                         (('foreground-light', 0.87), ('foreground-dark', 1.00)),
  secondary-text-color:               (('foreground-light', 0.54), ('foreground-dark', 0.70)),
  placeholder-color__focus:           (('foreground-light', 0.42), ('foreground-dark', 0.50)),
  disabled-color:                     (('foreground-light', 0.38), ('foreground-dark', 0.50)),
  filled-disabled-border-color:       (('foreground-light', 0.10), ('foreground-dark', 0.30)),
  filled-disabled-background-color:   (('foreground-light', 0.03), ('foreground-dark', 0.05)),
  fill-color:                         (('foreground-light', 0.06), ('foreground-dark', 0.10)),
  fill-color__hover:                  (('foreground-light', 0.12), ('foreground-dark', 0.20)),
  border-line-color:                  (('foreground-light', 0.42), ('foreground-dark', 0.70)),
  border-line-color__hover:           (('foreground-light', 0.87), ('foreground-dark', 1.00)),
  ripple-color:                       ('foreground-light', 'foreground-dark'),
  ripple-opacity:                     (0.16, 0.32 ),
  dropdown-icon-color:                (('foreground-light', 0.54), ('foreground-dark', 0.70)),
  
  dropdown-background-color:          ((#fff, 1.00), ('background', '800', 1.00)),

  selection-color:                    (('foreground-light', 0.12), ('foreground-dark', 0.24)),
  border-line-color__focus:           (('foreground-light', 1.00), ('foreground-dark', 1.00)),
  label-color__focus:                 (('foreground-light', 0.87), ('foreground-dark', 1.00)),

  primary-selection-color:            (('primary', 'A700', 0.12), ('primary', 'A200', 0.24)),
  primary-border-line-color__focus:   (('primary', 'A700', 1.00), ('primary', 'A200', 1.00)),
  primary-label-color__focus:         (('primary', 'A700', 0.87), ('primary', 'A200', 1.00)),

  accent-selection-color:             (('accent', 'A700', 0.12), ('accent', 'A200', 0.24)),
  accent-border-line-color__focus:    (('accent', 'A700', 1.00), ('accent', 'A200', 1.00)),
  accent-label-color__focus:          (('accent', 'A700', 0.87), ('accent', 'A200', 1.00)),

  warn-selection-color:               (('warn', 'A400', 0.12), ('warn', 'A400', 0.24)),
  warn-border-line-color__focus:      (('warn', 'A400', 1.00), ('warn', 'A400', 1.00)),
  warn-label-color__focus:            (('warn', 'A400', 0.87), ('warn', 'A400', 1.00)),

  selection-opacity:                  (0.12, 0.24),
  border-line-opacity__focus:         (1.00, 1.00),
  label-opacity__focus:               (0.87, 1.00),
) !default;

@function mdwTextfieldThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('textfield', $mdw-textfield__theme-values, $key, $type, $theme);
}

@mixin mdw-textfield__theme-variables($lightness) {
  @include mdw-theme__variables('textfield', $mdw-textfield__theme-values, $lightness);
}

@mixin mdw-textfield__contrast-and-theme-rules($type: 'var', $theme: null) {
  .mdw-textfield[mdw-outlined] {
    &:active > .mdw-textfield__input:not(:disabled),
    & > .mdw-textfield__input:not(:disabled):focus {
      & ~ .mdw-textfield__border {
        @if ($type == 'var') {
          color: unquote("rgba(var(--color),")
            mdwTextfieldThemeValue("border-line-opacity__focus", $type, $theme)
            unquote(")");
        } @else {
          color: mdwTextfieldThemeValue("border-line-color__focus", $type, $theme);
        }
      }
    }

    &[mdw-theme-color="primary"] {
      &:active > .mdw-textfield__input:not(:disabled),
      & > .mdw-textfield__input:not(:disabled):focus {
        & ~ .mdw-textfield__border {
          color: mdwTextfieldThemeValue("primary-border-line-color__focus", $type, $theme);
        }
      }
    }

    &[mdw-theme-color="accent"] {
      &:active > .mdw-textfield__input:not(:disabled),
      & > .mdw-textfield__input:not(:disabled):focus {
        & ~ .mdw-textfield__border {
          color: mdwTextfieldThemeValue("accent-border-line-color__focus", $type, $theme);
        }
      }
    }

    &,
    &[mdw-theme-color] {
      &:active > .mdw-textfield__input:not(:disabled),
      & > .mdw-textfield__input:not(:disabled):focus {
        &:invalid {
          & ~ .mdw-textfield__border,
          & ~ .mdw-textfield__border::before {
            color: mdwTextfieldThemeValue("warn-border-line-color__focus", $type, $theme);
          }
        }
      }
    }
  }

  .mdw-textfield {
    // Focus
    &:active > .mdw-textfield__input:not(:disabled),
    & > .mdw-textfield__input:not(:disabled):focus {
      @if($type == 'var') {
        caret-color: unquote("rgba(var(--color),")
          mdwTextfieldThemeValue("label-opacity__focus", $type, $theme)
          unquote(")");

        &::selection {
          background-color: unquote("rgba(var(--color),")
            mdwTextfieldThemeValue("selection-opacity", $type, $theme)
            unquote(")");
        }

        & ~ .mdw-textfield__border .mdw-textfield__label {
          color: unquote("rgba(var(--color),")
            mdwTextfieldThemeValue("label-opacity__focus", $type, $theme)
            unquote(")");
        }

        & ~ .mdw-textfield__border::before {
          color: unquote("rgba(var(--color),")
            mdwTextfieldThemeValue("border-line-opacity__focus", $type, $theme)
            unquote(")");
        }
      } @else {
        caret-color: mdwTextfieldThemeValue("label-color__focus", $type, $theme);

        &::selection {
          background-color: mdwTextfieldThemeValue("selection-color", $type, $theme);
        }

        & ~ .mdw-textfield__border .mdw-textfield__label {
          color: mdwTextfieldThemeValue("label-color__focus", $type, $theme);
        }

        & ~ .mdw-textfield__border::before {
          color: mdwTextfieldThemeValue("border-line-color__focus", $type, $theme);
        }
      }
    }

    &[mdw-theme-color="primary"] {
      &:active > .mdw-textfield__input:not(:disabled),
      & > .mdw-textfield__input:not(:disabled):focus {
        caret-color: mdwTextfieldThemeValue("primary-label-color__focus", $type, $theme);

        &::selection {
          background-color: mdwTextfieldThemeValue("primary-selection-color", $type, $theme);
        }

        & ~ .mdw-textfield__border .mdw-textfield__label {
          color: mdwTextfieldThemeValue("primary-label-color__focus", $type, $theme);
        }

        & ~ .mdw-textfield__border::before {
          color: mdwTextfieldThemeValue("primary-border-line-color__focus", $type, $theme);
        }
      }
    }

    &[mdw-theme-color="accent"] {
      &:active > .mdw-textfield__input:not(:disabled),
      & > .mdw-textfield__input:not(:disabled):focus {
        caret-color: mdwTextfieldThemeValue("accent-label-color__focus", $type, $theme);

        &::selection {
          background-color: mdwTextfieldThemeValue("accent-selection-color", $type, $theme);
        }

        & ~ .mdw-textfield__border .mdw-textfield__label {
          color: mdwTextfieldThemeValue("accent-label-color__focus", $type, $theme);
        }

        & ~ .mdw-textfield__border::before {
          color: mdwTextfieldThemeValue("accent-border-line-color__focus", $type, $theme);
        }
      }
    }

    &:active > .mdw-textfield__input:not(:disabled):invalid,
    & > .mdw-textfield__input:not(:disabled):focus:invalid {
      caret-color: mdwTextfieldThemeValue("warn-label-color__focus", $type, $theme);

      &::selection {
        background-color: mdwTextfieldThemeValue("warn-selection-color", $type, $theme);
      }

      & ~ .mdw-textfield__border::after {
        color: mdwTextfieldThemeValue("warn-border-line-color__focus", $type, $theme);
      }

      & ~ .mdw-textfield__border .mdw-textfield__label {
        color: mdwTextfieldThemeValue("warn-label-color__focus", $type, $theme);
      }
    }
  }

  .mdw-textfield__input:focus:invalid ~ .mdw-textfield__error-text {
    color: mdwTextfieldThemeValue("warn-label-color__focus", $type, $theme);
  }
}

// Vary by contrast
@mixin mdw-textfield__contrast-rules($type: 'var', $theme: null) {
  .mdw-textfield__signifier,
  .mdw-textfield__label {
    color: mdwTextfieldThemeValue("secondary-text-color", $type, $theme);
  }

  .mdw-textfield__prefix,
  .mdw-textfield__suffix {
    color: mdwTextfieldThemeValue("secondary-text-color", $type, $theme);
  }

  select.mdw-textfield__input {
    // Firefox focusring styling workaround
    // https://dxr.mozilla.org/mozilla-central/source/browser/components/extensions/extension.css
    .mdw-textfield[mdw-value-empty] > & {
      color: mdwTextfieldThemeValue("placeholder-color__focus", $type, $theme);

      &:focus {
        color: mdwTextfieldThemeValue("secondary-text-color", $type, $theme);
      }

      &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 mdwTextfieldThemeValue("placeholder-color__focus", $type, $theme);
      }

      &:focus:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 mdwTextfieldThemeValue("secondary-text-color", $type, $theme);
      }
    }

    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 mdwTextfieldThemeValue("text-color", $type, $theme);
    }

  }

  .mdw-textfield__icon[mdw-dropdown] {
    color: mdwTextfieldThemeValue("dropdown-icon-color", $type, $theme);
  }

  .mdw-textfield[mdw-value-empty] > input.mdw-textfield__input:not(:focus) {
    color: transparent;
  }

  input.mdw-textfield__input:not(:focus):placeholder-shown {
    color: transparent;
  }

  .mdw-textfield__input::selection {
    color: inherit;
  }

  .mdw-textfield__input::placeholder {
    color: mdwTextfieldThemeValue("placeholder-color__focus", $type, $theme);
  }

  .mdw-textfield__input:-ms-input-placeholder {
    color: mdwTextfieldThemeValue("placeholder-color__focus", $type, $theme) !important;
  }

  .mdw-textfield__input::-ms-input-placeholder {
    color: mdwTextfieldThemeValue("placeholder-color__focus", $type, $theme) !important;
  }

  .mdw-textfield__input {
    color: mdwTextfieldThemeValue("text-color", $type, $theme);

    // Disabled
    &:disabled {
      color: mdwTextfieldThemeValue("disabled-color", $type, $theme);

      & ~ .mdw-textfield__border .mdw-textfield__label,
      & ~ .mdw-textfield__signifier,
      & ~ .mdw-textfield__prefix,
      & ~ .mdw-textfield__suffix,
      & ~ .mdw-textfield__icon {
        color: mdwTextfieldThemeValue("disabled-color", $type, $theme);
      }

      & ~ .mdw-textfield__border {
        color: mdwTextfieldThemeValue("disabled-color", $type, $theme);
      }
    }

    // Hover
    &:not(:focus):hover:not(:disabled) ~ .mdw-textfield__border,
    &:not(:focus):not(:disabled) ~ .mdw-textfield__border:hover {
      color: mdwTextfieldThemeValue("border-line-color__hover", $type, $theme);
    }
    
    &:not(:focus) {
      /* Rules must be separated for IE11 support */
      &:placeholder-shown ~ .mdw-textfield__prefix,
      &:placeholder-shown ~ .mdw-textfield__suffix {
        color: transparent;
      }

      .mdw-textfield[mdw-value-empty] > & ~ .mdw-textfield__prefix,
      .mdw-textfield[mdw-value-empty] > & ~ .mdw-textfield__suffix {
        color: transparent;
      }
    }
  }
  
  .mdw-textfield__border {
    color: mdwTextfieldThemeValue("border-line-color", $type, $theme);
  }

  .mdw-textfield__helper-text {
    color: mdwTextfieldThemeValue("secondary-text-color", $type, $theme);
  }

  .mdw-textfield__error-text {
    color: transparent; // will transition when shown
  }

  .mdw-textfield__input:disabled ~ .mdw-textfield__helper-text {
    color: mdwTextfieldThemeValue("disabled-color", $type, $theme);
  }

  .mdw-textfield__input:focus:invalid ~ .mdw-textfield__helper-text {
    color: transparent;
  }

  .mdw-textfield__dropdown {
    background-color: mdwTextfieldThemeValue("dropdown-background-color", $type, $theme);
    color: mdwTextfieldThemeValue("text-color", $type, $theme);
  }

  .mdw-textfield {
    &:not([mdw-solo]) > .mdw-textfield__input:not(:focus)::placeholder {
      color: transparent;
    }

    &:not([mdw-solo]) > .mdw-textfield__input:not(:focus):-ms-input-placeholder {
      color: transparent !important;
    }

    &:not([mdw-solo]) > .mdw-textfield__input:not(:focus)::-ms-input-placeholder {
      color: transparent !important;
    }

    .mdw-textfield__input:not(:focus) ~ .mdw-textfield__border {
      color: mdwTextfieldThemeValue("border-line-color", $type, $theme);
    }
    
    .mdw-textfield__input:disabled ~ .mdw-textfield__border {
      background-color: mdwTextfieldThemeValue("filled-disabled-background-color", $type, $theme);
      color: mdwTextfieldThemeValue("filled-disabled-border-color", $type, $theme);
    }

    &:not([mdw-outlined]) > .mdw-textfield__border {
      background-color: mdwTextfieldThemeValue("fill-color", $type, $theme);
    }

    &:not([mdw-outlined]) > .mdw-textfield__input:not(:disabled) {
      & ~ .mdw-textfield__border:hover,
      &:hover ~ .mdw-textfield__border {
        background-color: mdwTextfieldThemeValue("fill-color__hover", $type, $theme);
      }
    }
  }
}
