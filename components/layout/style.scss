// https://material.io/guidelines/layout/responsive-ui.html
// https://material.io/archive/guidelines/layout/responsive-ui.html

@import '../common/motion.scss';
@import '../common/platform.scss';
@import '../common/responsive.scss';

$layout__margin: dp(24);
$layout__gutter: dp(24);

.mdw-layout {
  display: flex;
  grid-auto-flow: row;
  grid-template-columns: repeat(12, 1fr);
  -ms-grid-columns: unquote("(1fr)[12]");
  grid-auto-rows: auto;
  -ms-grid-rows: auto;
  &[mdw-grid] {
    // IE11 is currently unsupported due to lack of automatic placement
    display: grid;
    display: -ms-grid;
  }
  &[mdw-dense] {
    grid-auto-flow: row dense;
  }
  &[mdw-center] {
    justify-content: center;
  }
  flex-wrap: wrap;

  padding-left: $layout__margin;
  padding-right: $layout__margin;

  margin-left: -$layout__gutter;
  margin-top: -$layout__gutter;

  &[mdw-margin-top] {
    padding-top: $layout__margin;
  }
  &[mdw-margin-bottom] {
    padding-bottom: $layout__margin;
  }

}

@mixin layoutItem($columnCount) {
  &[mdw-colspan="1"],
  &:not([mdw-colspan]) {
    width: calc(100% / #{$columnCount});
  }
  @for $i from 2 to 12 {
    &[mdw-colspan="#{$i}"] {
      @if ($i > $columnCount) {
        grid-column-end: span #{$columnCount};
        -ms-grid-column-span: #{$columnCount};
        width: 100%;
      } @else {
        width: calc((#{$i} * 100% / #{$columnCount}));
      }
    }
  }
  @each $percent in (25, 50, 75, 100) {
    &[mdw-colspan="#{$percent}%"] {
      $value: $percent / 100 * $columnCount;
      @if ($value < 1) {
        $value: $columnCount;
        width: 100%;
      }
      grid-column-end: span #{$value};
      -ms-grid-column-span: #{$value};
    }
  }
  &[mdw-stretch] {
    max-width: none;
  }
}

.mdw-layout__item {
  max-width: 100%;
  flex-grow: 0;
  flex-shrink: 1;
  box-sizing: border-box;
  padding-top: $layout__gutter;
  padding-left: $layout__gutter;

  .mdw-layout[mdw-grid] > & {
    min-width: 100%;
  }
  .mdw-layout[mdw-stretch] > & {
    flex-grow: 1;
  }

  @for $i from 2 to 12 {
    &[mdw-rowspan="#{$i}"] {
      grid-row-end: span #{$i};
      -ms-grid-row-span: #{$i};
    }
    &[mdw-colspan="#{$i}"] {
      grid-column-end: span #{$i};
      -ms-grid-column-span: #{$i};
    }
  }
  transition-property: flex, width, padding;
  transition-timing-function: $mdw-motion__standard-easing;
  transition-duration: $mdw-motion__default-duration__desktop;
  @include allHandsets {
    transition-duration: $mdw-motion__default-duration__mobile;
  }
  @include allTablets {
    transition-duration: $mdw-motion__default-duration__tablet;
  }

  @include layoutItem(12);

  &[mdw-colspan="25%"] {
    width: 25%;
  }
  &[mdw-colspan="50%"] {
    width: 50%;
  }
  &[mdw-colspan="75%"] {
    width: 75%;
  }
  &[mdw-colspan="100%"] {
    width: 100%;
  }
}

@include margin16dp {
  .mdw-layout {
    padding-left: dp(16);
    padding-right: dp(16);
    &[mdw-margin-top] {
      padding-top: dp(16);
    }
    &[mdw-margin-bottom] {
      padding-bottom: dp(16);
    }
    margin-top: dp(-16);
    margin-left: dp(-16);
    & > .mdw-layout__item {
      padding-top: dp(16);
      padding-left: dp(16);
    }
  }
}

.mdw-layout__content {
  flex: 100%;
  height: 100%;
  width: 100%;
  max-height: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

// 8 Columns (Explicit on >=840dp, Implicit on < 840dp)
.mdw-layout[mdw-columns="8"] {
  grid-template-columns: repeat(8, 1fr);
  -ms-grid-columns: unquote("(1fr)[8]");
  & > .mdw-layout__item {
    @include layoutItem(8);
  }
}
@include viewport-max-8-columns {
  .mdw-layout {
    grid-template-columns: repeat(8, 1fr);
    -ms-grid-columns: unquote("(1fr)[8]");
  }
  .mdw-layout__item {
    @include layoutItem(8);
  }
}

// 4 Columns (Explicit on >=600dp, Implicit on <600dp)
.mdw-layout[mdw-columns="4"] {
  grid-template-columns: repeat(4, 1fr);
  -ms-grid-columns: unquote("(1fr)[4]");
  & > .mdw-layout__item {
    @include layoutItem(4);
  }
}

@include viewport-4-columns() {
  .mdw-layout,
  .mdw-layout[mdw-columns="8"] {
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: unquote("(1fr)[4]");
  }
  .mdw-layout__item,
  .mdw-layout[mdw-columns="8"] > .mdw-layout__item {
    @include layoutItem(4);
  }
}

// 1 Column (Explicit on all)
.mdw-layout[mdw-columns="1"] {
  grid-template-columns: 1fr;
  -ms-grid-columns: 1fr;
  & > .mdw-layout__item {
    @include layoutItem(1);
  }
}

// 1-column uses same margin values as 12-column
@each $value in (0, 8, 16, 24, 40) {
  .mdw-layout[mdw-margin="#{$value}"],
  .mdw-layout[mdw-columns="1"][mdw-margin="#{$value}"],
  .mdw-layout[mdw-columns="8"][mdw-margin-8col="#{$value}"],
  .mdw-layout[mdw-columns="4"][mdw-margin-4col="#{$value}"], {
    padding-left: dp($value);
    padding-right: dp($value);
    &[mdw-margin-bottom] {
      padding-bottom: dp($value);
    }
    &[mdw-margin-top] {
      padding-top: dp($value);
    }
  }
  .mdw-layout[mdw-gutter="#{$value}"],
  .mdw-layout[mdw-columns="1"][mdw-gutter="#{$value}"],
  .mdw-layout[mdw-columns="8"][mdw-gutter-8col="#{$value}"],
  .mdw-layout[mdw-columns="4"][mdw-gutter-4col="#{$value}"] {
    margin-top: dp(-$value);
    margin-left: dp(-$value);
    & > .mdw-layout__item {
      padding-top: dp($value);
      padding-left: dp($value);
    }
  }
}

// 8-col layouts use 8col variable
@include viewport-max-8-columns {
  @each $value in (0, 8, 16, 24, 40) {
    .mdw-layout[mdw-margin-8col="#{$value}"] {
      padding-left: dp($value);
      padding-right: dp($value);
      &[mdw-margin-bottom] {
        padding-bottom: dp($value);
      }
      &[mdw-margin-top] {
        padding-top: dp($value);
      }
    }
    .mdw-layout[mdw-gutter-8col="#{$value}"] {
      margin-top: dp(-$value);
      margin-left: dp(-$value);
      & > .mdw-layout__item {
        padding-top: dp($value);
        padding-left: dp($value);
      }
    }
  }
}

// 4col layouts use 4col variable
// Overrides 8col and 12col
@include viewport-4-columns {
  @each $value in (0, 8, 16, 24, 40) {
    .mdw-layout,
    .mdw-layout[mdw-columns="8"] {
      &[mdw-margin-4col="#{$value}"] {
        padding-left: dp($value);
        padding-right: dp($value);
        &[mdw-margin-bottom] {
          padding-bottom: dp($value);
        }
        &[mdw-margin-top] {
          padding-top: dp($value);
        }
      }
      &[mdw-gutter-4col="#{$value}"] {
        margin-top: dp(-$value);
        margin-left: dp(-$value);
        > .mdw-layout__item {
          padding-top: dp($value);
          padding-left: dp($value);
        }
      }
    }
  }
}
