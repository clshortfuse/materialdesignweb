@import '../common/theming.scss';

$mdw-bottomnav__theme-values: (
  active-color:         (inherit, inherit),
  filled-active-color:  (inherit, ('foreground-dark', 1.0)),
  inactive-color:       (('foreground-light', 0.54), ('foreground-dark', 0.70)),
  overlay-color:        (('foreground-light', 1.00), ('foreground-dark', 1.00)),
  pressed-opacity:      (0.16, 0.32),
  badge-background:     (('warn', '500', 1.00), ('warn', '500', 1.00)),
  badge-foreground:     (('foreground-dark', 1), ('foreground-dark', 1.00)),
) !default;

@function mdwBottomnavThemeValue($key, $type, $theme) {
  @return mdwGetThemeValue('bottomnav', $mdw-bottomnav__theme-values, $key, $type, $theme);
}

// Vary by contrast and theme
@mixin mdw-bottomnav__theme-rules($type: 'var', $theme: null) {
  .mdw-bottomnav[mdw-fill]:not([mdw-color]) {
    input:checked ~ .mdw-bottomnav__icon,
    input:checked ~ .mdw-bottomnav__label,
    .mdw-bottomnav__item[mdw-selected] > .mdw-bottomnav__icon,
    .mdw-bottomnav__item[mdw-selected] > .mdw-bottomnav__label,
    input:checked + .mdw-bottomnav__item > .mdw-bottomnav__icon,
    input:checked + .mdw-bottomnav__item > .mdw-bottomnav__label {
      color: mdwBottomnavThemeValue("filled-active-color", $type, $theme);
    }
  }

  .mdw-bottomnav__icon,
  .mdw-bottomnav__label {
    color: mdwBottomnavThemeValue("inactive-color", $type, $theme);
  }

  input:checked ~ .mdw-bottomnav__icon,
  input:checked ~ .mdw-bottomnav__label,
  .mdw-bottomnav__item[mdw-selected] > .mdw-bottomnav__icon,
  .mdw-bottomnav__item[mdw-selected] > .mdw-bottomnav__label,
  input:checked + .mdw-bottomnav__item > .mdw-bottomnav__icon,
  input:checked + .mdw-bottomnav__item > .mdw-bottomnav__label {
    color: mdwBottomnavThemeValue("active-color", $type, $theme);
  }

  .mdw-bottomnav__item {
    &::before {
      background-color: mdwBottomnavThemeValue("badge-background", null, $theme);
      color: mdwBottomnavThemeValue("badge-foreground", null, $theme);
    }

    & > .mdw-ripple > .mdw-ripple__inner,
    &::after {
      opacity: mdwBottomnavThemeValue("pressed-opacity", $type, $theme);

      color: mdwBottomnavThemeValue("overlay-color", $type, $theme);
    }
  }
}

@each $name in map-keys($mdw-theme__themes) {
  $theme: map-get($mdw-theme__themes, $name);
  @include mdw-theme__add-component-fallback-rules('light', $name) {
    @include mdw-bottomnav__theme-rules('light', $theme);
  }
  @include mdw-theme__add-component-fallback-rules('dark', $name) {
    @include mdw-bottomnav__theme-rules('dark', $theme);
  }
}

@include mdw-theme__add-component-variable-rules('bottomnav', $mdw-bottomnav__theme-values) {
  @include mdw-bottomnav__theme-rules();
}
