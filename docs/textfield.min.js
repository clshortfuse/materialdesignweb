/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 374);
/******/ })
/************************************************************************/
/******/ ({

/***/ 3:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

/**
 * @param {Element} element
 * @return {void}
 */
function setupDarkMode(element) {
  var darkAttribute = 'black dark';
  var lightAttribute = 'white light';
  element.addEventListener('click', function () {
    if (document.body.getAttribute('mdw-theme-fill') === darkAttribute) {
      document.body.setAttribute('mdw-theme-fill', lightAttribute);
      element.setAttribute('mdw-inactive', '');
      element.removeAttribute('mdw-active');
    } else {
      document.body.setAttribute('mdw-theme-fill', darkAttribute);
      element.removeAttribute('mdw-inactive');
      // element.setAttribute('mdw-active', '');
      // Poor visibility even though spec says 70% opacity
    }
  });
}

/** @return {void} */
function setupMenuOptions() {
  var _document$querySelect = document.querySelectorAll('#docs-menu-buttons .mdw-button'),
      _document$querySelect2 = _slicedToArray(_document$querySelect, 1),
      buttonDarkMode = _document$querySelect2[0];

  setupDarkMode(buttonDarkMode);
}

exports.default = setupMenuOptions;

/***/ }),

/***/ 374:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(375);
module.exports = __webpack_require__(376);


/***/ }),

/***/ 375:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _targetHandler = __webpack_require__(7);

var _targetHandler2 = _interopRequireDefault(_targetHandler);

var _index = __webpack_require__(45);

var _menuoptions = __webpack_require__(3);

var _menuoptions2 = _interopRequireDefault(_menuoptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var componentMap = new WeakMap();

/** @return {void} */
function initializeMdwComponents() {
  var components = document.querySelectorAll('.js .mdw-textfield');
  for (var i = 0; i < components.length; i += 1) {
    componentMap.set(components[i], new _index.TextField(components[i]));
  }
}

initializeMdwComponents();
(0, _menuoptions2.default)();
(0, _targetHandler2.default)();

/***/ }),

/***/ 376:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 45:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var TextField = function () {
  /**
   * @param {HTMLElement} element
   */
  function TextField(element) {
    var _this = this;

    _classCallCheck(this, TextField);

    this.element = element;
    /** @type {HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement} */
    this.input = element.querySelector('.mdw-textfield__input');
    if (this.input) {
      if (this.input instanceof HTMLTextAreaElement && this.element.hasAttribute('mdw-multiline')) {
        this.input.addEventListener('input', function () {
          _this.updateTextAreaSize();
        });
        this.updateTextAreaSize();
      }
      this.input.addEventListener('input', function () {
        _this.updateInputEmptyState();
      });
      this.updateInputEmptyState();
    }
    this.border = element.querySelector('.mdw-textfield__border-line');
    if (!this.border) {
      var border = document.createElement('div');
      border.classList.add('mdw-textfield__border-line');
      element.appendChild(border);
      this.border = border;
    }
    var rippleElements = this.border.getElementsByClassName('mdw-ripple');
    this.ripple = rippleElements && rippleElements[0];
    if (!this.ripple) {
      var ripple = document.createElement('div');
      ripple.classList.add('mdw-ripple');
      this.border.appendChild(ripple);
      this.ripple = ripple;
    }
    var innerRippleElements = this.ripple.getElementsByClassName('mdw-ripple__inner');
    this.rippleInner = innerRippleElements && innerRippleElements[0];
    if (!this.rippleInner) {
      var rippleInner = document.createElement('div');
      rippleInner.classList.add('mdw-ripple__inner');
      this.ripple.appendChild(rippleInner);
      this.rippleInner = rippleInner;
    }
    this.element.setAttribute('mdw-ripple', '');
    this.border.addEventListener('click', function (event) {
      _this.updateRipplePosition(event);
    });
  }

  /** @return {void} */


  _createClass(TextField, [{
    key: 'updateInputEmptyState',
    value: function updateInputEmptyState() {
      var attributeName = 'mdw-value-empty';
      if (this.input.value) {
        if (this.element.hasAttribute(attributeName)) {
          this.element.removeAttribute(attributeName);
        }
      } else if (!this.element.hasAttribute(attributeName)) {
        this.element.setAttribute('mdw-value-empty', '');
      }
    }

    /** @return {number} Single row height */

  }, {
    key: 'updateTextAreaSize',
    value: function updateTextAreaSize() {
      var previousRowsValue = this.input.getAttribute('rows');
      this.input.setAttribute('rows', '1');

      var _window$getComputedSt = window.getComputedStyle(this.input),
          height = _window$getComputedSt.height,
          paddingTop = _window$getComputedSt.paddingTop;

      if (height === 'auto') {
        this.input.setAttribute('rows', previousRowsValue);
        return -1;
      }
      var heightPx = parseInt(height.replace('px', ''), 10);
      var paddingTopPx = parseInt(paddingTop.replace('px', ''), 10);
      this.input.setAttribute('rows', Math.floor((this.input.scrollHeight - paddingTopPx) / heightPx).toString());
      return heightPx;
    }

    /**
     * @param {MouseEvent|PointerEvent} event
     * @return {void}
     */

  }, {
    key: 'updateRipplePosition',
    value: function updateRipplePosition(event) {
      if (event.target !== this.border && event.target !== this.ripple) {
        return;
      }
      if (!event.pointerType && !event.detail) {
        // Ripple from center
        this.rippleInner.style.removeProperty('left');
        this.rippleInner.style.removeProperty('top');
        return;
      }
      var x = event.offsetX;
      var y = event.offsetY;
      this.rippleInner.style.setProperty('left', x + 'px');
      this.rippleInner.style.setProperty('top', y + 'px');
    }

    /**
     * @return {string|Date|number}
     */

  }, {
    key: 'value',
    get: function get() {
      if (this.input instanceof HTMLTextAreaElement || this.input instanceof HTMLSelectElement) {
        return this.value;
      }
      var type = this.input.hasAttribute('type') && this.input.getAttribute('type').toLowerCase();
      switch (type) {
        case 'number':
        case 'range':
          return this.input.valueAsNumber;
        case 'date':
        case 'datetime-local':
        case 'time':
          if (this.input.value == null) {
            return null;
          }
          return new Date(this.input.valueAsDate.getTimezoneOffset() * 60 * 1000 + this.input.valueAsNumber);
        default:
          return this.input.value;
      }
    }

    /** @param {(string|Date|number)=} value */
    ,
    set: function set(value) {
      if (value == null) {
        this.input.value = null;
      } else if (this.input instanceof HTMLTextAreaElement || this.input instanceof HTMLSelectElement) {
        if (value instanceof Date) {
          this.input.value = value.toString();
        } else if (typeof value === 'string') {
          this.input.value = value;
        } else {
          this.input.value = value.toString(10);
        }
      } else if (value instanceof Date) {
        var type = this.input.hasAttribute('type') && this.input.getAttribute('type').toLowerCase();
        if (type === 'time') {
          var hoursStr = '' + (value.getHours() < 10 ? '0' : '') + value.getHours();
          var minutesStr = '' + (value.getMinutes() < 10 ? '0' : '') + value.getMinutes();
          var secondsStr = '' + (value.getSeconds() < 10 ? '0' : '') + value.getSeconds();
          this.input.value = hoursStr + ':' + minutesStr + ':' + secondsStr + '.' + value.getMilliseconds();
        } else {
          switch (type) {
            case 'date':
            case 'datetime-local':
              this.input.valueAsDate = value;
              break;
            case 'number':
            case 'range':
              this.input.valueAsNumber = value.getTime();
              break;
            default:
              this.input.value = value.toString();
          }
        }
      } else if (typeof value === 'string') {
        this.input.value = value;
      } else {
        var _type = this.input.hasAttribute('type') && this.input.getAttribute('type').toLowerCase();
        switch (_type) {
          case 'date':
          case 'time':
          case 'datetime-local':
          case 'number':
          case 'range':
            this.input.valueAsNumber = value;
            break;
          default:
            this.input.value = value.toString();
        }
      }
      this.updateInputEmptyState();
      this.updateTextAreaSize();
    }
  }]);

  return TextField;
}();

exports.TextField = TextField;

/***/ }),

/***/ 7:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var crosshairs = {};
var vOffset = 0;
var hOffset = 0;

Object.defineProperty(crosshairs, 'vOffset', {
  enumerable: true,
  configurable: false,
  get: function get() {
    return vOffset;
  },
  set: function set(val) {
    vOffset = val;
    document.getElementById('verticalLineLeft').style.left = val + 'px';
    document.getElementById('verticalLineRight').style.left = val + 'px';
  }
});

Object.defineProperty(crosshairs, 'hOffset', {
  enumerable: true,
  configurable: false,
  get: function get() {
    return hOffset;
  },
  set: function set(val) {
    hOffset = val;
    document.getElementById('horizontalLine').style.top = val + 'px';
  }
});

/**
 * @param {MouseEvent} event
 * @return {void}
 */
function onTemplateImageClick(event) {
  document.getElementById('horizontalLine').style.top = event.clientY + 'px';
  document.getElementById('verticalLineLeft').style.left = event.layerX + 'px';
  document.getElementById('verticalLineRight').style.left = event.clientX + 'px';
}

/** @return {void} */
function setupImageTargets() {
  var targets = document.getElementsByClassName('target');
  for (var i = 0; i < targets.length; i += 1) {
    targets[i].addEventListener('click', onTemplateImageClick);
  }
}

exports.default = setupImageTargets;

/***/ })

/******/ });