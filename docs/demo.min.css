/* mixins/ThemableMixin.css */
:host([color="primary"]) {
  --mdw-bg: var(--mdw-color__primary);
  --mdw-ink: var(--mdw-color__on-primary);
}
:host([color="primary-container"]) {
  --mdw-bg: var(--mdw-color__primary-container);
  --mdw-ink: var(--mdw-color__on-primary-container);
}
:host([color="secondary"]) {
  --mdw-bg: var(--mdw-color__secondary);
  --mdw-ink: var(--mdw-color__on-secondary);
}
:host([color="secondary-container"]) {
  --mdw-bg: var(--mdw-color__secondary-container);
  --mdw-ink: var(--mdw-color__on-secondary-container);
}
:host([color="tertiary"]) {
  --mdw-bg: var(--mdw-color__tertiary);
  --mdw-ink: var(--mdw-color__on-tertiary);
}
:host([color="tertiary-container"]) {
  --mdw-bg: var(--mdw-color__tertiary-container);
  --mdw-ink: var(--mdw-color__on-tertiary-container);
}
:host([color="error"]) {
  --mdw-bg: var(--mdw-color__error);
  --mdw-ink: var(--mdw-color__on-error);
}
:host([color="error-container"]) {
  --mdw-bg: var(--mdw-color__error-container);
  --mdw-ink: var(--mdw-color__on-error-container);
}
:host([color="background"]) {
  --mdw-bg: var(--mdw-color__background);
  --mdw-ink: var(--mdw-color__on-background);
}
:host([color|="surface"]) {
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__on-surface);
}
:host([color="surface-primary"]) {
  --mdw-ink: var(--mdw-color__primary);
}
:host([color="surface-variant"]) {
  --mdw-bg: var(--mdw-color__surface-variant);
  --mdw-ink: var(--mdw-color__on-surface-variant);
}
:host([color|="inverse"]) {
  --mdw-bg: var(--mdw-color__inverse-surface);
}
:host([color="inverse-surface"]) {
  --mdw-ink: var(--mdw-color__inverse-on-surface);
}
:host([color="inverse-primary"]) {
  --mdw-ink: var(--mdw-color__inverse-primary);
}
:host([color][disabled]) {
}
:host([ink="inverse-primary"]) {
  --mdw-ink: var(--mdw-color__inverse-primary);
}
:host([ink="primary"]) {
  --mdw-ink: var(--mdw-color__primary);
}
:host([ink="secondary"]) {
  --mdw-ink: var(--mdw-color__secondary);
}
:host([ink="tertiary"]) {
  --mdw-ink: var(--mdw-color__tertiary);
}
:host([ink="error"]) {
  --mdw-ink: var(--mdw-color__error);
}
:host([ink="outline"]) {
  --mdw-ink: var(--mdw-color__outline);
}
:host([ink="on-surface"]) {
  --mdw-ink: var(--mdw-color__on-surface);
}
:host([ink="on-surface-variant"]) {
  --mdw-ink: var(--mdw-color__on-surface-variant);
}
:host([ink="inverse-on-surface"]) {
  --mdw-ink: var(--mdw-color__inverse-on-surface);
}
:host([ink="inherit"]) {
  --mdw-ink: inherit;
}
:host([type-style|="display"]) {
  --mdw-type__font: var(--mdw-typescale__display-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__display-large__font);
}
:host([type-style="display-medium"]) {
  --mdw-type__font: var(--mdw-typescale__display-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__display-medium__letter-spacing);
}
:host([type-style="display-small"]) {
  --mdw-type__font: var(--mdw-typescale__display-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__display-small__letter-spacing);
}
:host([type-style|="headline"]) {
  --mdw-type__font: var(--mdw-typescale__headline-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__headline-large__letter-spacing);
}
:host([type-style="headline-medium"]) {
  --mdw-type__font: var(--mdw-typescale__headline-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__headline-medium__letter-spacing);
}
:host([type-style="headline-small"]) {
  --mdw-type__font: var(--mdw-typescale__headline-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__headline-small__letter-spacing);
}
:host([type-style|="title"]) {
  --mdw-type__font: var(--mdw-typescale__title-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__title-large__letter-spacing);
}
:host([type-style="title-medium"]) {
  --mdw-type__font: var(--mdw-typescale__title-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__title-medium__letter-spacing);
}
:host([type-style="title-small"]) {
  --mdw-type__font: var(--mdw-typescale__title-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__title-small__letter-spacing);
}
:host([type-style|="label"]) {
  --mdw-type__font: var(--mdw-typescale__label-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__label-large__letter-spacing);
}
:host([type-style="label-medium"]) {
  --mdw-type__font: var(--mdw-typescale__label-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__label-medium__letter-spacing);
}
:host([type-style="label-small"]) {
  --mdw-type__font: var(--mdw-typescale__label-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__label-small__letter-spacing);
}
:host([type-style|="body"]) {
  --mdw-type__font: var(--mdw-typescale__body-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-large__letter-spacing);
}
:host([type-style="body-medium"]) {
  --mdw-type__font: var(--mdw-typescale__body-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-medium__letter-spacing);
}
:host([type-style="body-small"]) {
  --mdw-type__font: var(--mdw-typescale__body-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-small__letter-spacing);
}

/* layout/Inline.css */
#slot:is([color], [ink]) {
  color: rgb(var(--mdw-ink));
}
#slot[type-style] {
  font: var(--mdw-type__font);
  letter-spacing: var(--mdw-type__letter-spacing);
}

/* components/Icon.css */
:host {
  --mdw-icon__opacity: 1;
  --mdw-icon__font-variation-settings: "FILL" 1;
  --mdw-icon__image__opacity: 1;
  display: inline-block;
  vertical-align: -11.5%;
  block-size: var(--mdw-icon__size, 1em);
  inline-size: var(--mdw-icon__size, 1em);
  user-select: none;
  font-size: var(--mdw-icon__size, inherit);
  transition-duration: 100ms;
  transition-property: inline-size, width;
}
#icon {
  position: absolute;
  display: var(--mdw-icon__display, block);
  overflow: clip;
  block-size: 1em;
  inline-size: 1em;
  opacity: var(--mdw-icon__opacity);
  font-size: inherit;
  font-variation-settings: var(--mdw-icon__font-variation-settings);
  transition-delay: 1ms;
  transition-duration: 100ms;
  transition-property: font-variation-settings, opacity;
}
#svg-slot::slotted(svg),
svg,
img {
  position: absolute;
  inset: 0;
  block-size: 100%;
  inline-size: 100%;
  opacity: var(--mdw-icon__image__opacity);
  fill: currentColor;
  object-fit: cover;
}
.material-symbols-outlined {
  direction: inherit;
}

/* mixins/ControlMixin.css */
:host {
  display: inline-flex;
}
:host(::-moz-focus-inner) {
  border: 0;
}
#label {
  flex: 1;
}
#control {
  position: absolute;
  inset: 0;
  block-size: 100%;
  inline-size: 100%;
  margin: 0;
  border: 0;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: inherit;
  outline: none;
  z-index: 4;
  background-color: transparent;
  color: transparent;
}
#control::-moz-focus-inner {
  border: 0;
}
#control:active ~ #ripple > #ripple-inner {
  animation-name: var(--mdw-ripple__fade-in-name), none;
}

/* components/Ripple.css */
:host {
  --enter-delay: 80ms;
  --touch-down-acceleration: 1024;
  --touch-up-acceleration: 3400;
  --mdw-ripple-expand-duration: 300ms;
  --mdw-ripple-simple-duration: 100ms;
  --mdw-ripple-fade-out-duration: 333ms;
  --mdw-ripple-standard-easing: var(--mdw-motion-standard-easing, cubic-bezier(0.4, 0.0, 0.2, 1));
  --mdw-ripple-deceleration-easing: var(--mdw-motion-deceleration-easing, cubic-bezier(0.0, 0.0, 0.2, 1));
  --mdw-state__pressed-opacity: 0;
  --size: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  min-block-size: 141.42%;
  min-inline-size: 141.42%;
  pointer-events: none;
  -webkit-tap-highlight-color: transparent;
  opacity: 0.12;
  transform: translateX(-50%) translateY(-50%) scale(0);
  background-color: currentColor;
  border-radius: 50%;
  box-shadow: 0 0 calc(0.10 * var(--size)) calc(0.10 * var(--size)) currentColor;
  transition-delay: 0s;
  transition-duration: var(--mdw-ripple-simple-duration);
  transition-property: background-color, color;
  transition-timing-function: var(--mdw-ripple-standard-easing);
  animation-name: ripple-fade-in, none;
  animation-duration: var(--mdw-ripple-expand-duration), var(--mdw-ripple-fade-out-duration);
  animation-timing-function: linear, var(--mdw-ripple-deceleration-easing);
  animation-direction: normal;
  animation-fill-mode: forwards;
  will-change:
    transform,
    opacity,
    box-shadow;
  aspect-ratio: 1/1;
}
:host([ripple-state="filled"]) {
  animation-name: none, ripple-fade-out;
}
:host([ripple-state="filled"][hold-ripple]) {
  animation-name: ripple-fade-in, none;
}
:host([ripple-state="complete"]) {
  animation-name: none;
}
@keyframes ripple-fade-in {
  from {
    transform: translateX(-50%) translateY(-50%) scale(0);
  }
  to {
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
}
@keyframes ripple-fade-out {
  from {
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
}

/* mixins/RippleMixin.css */
#ripple-container {
  position: absolute;
  inset: 0;
  overflow: hidden;
  pointer-events: none;
}

/* mixins/StateMixin.css */
:host {
  --mdw-state__hover-opacity: 0.08;
  --mdw-state__focus-opacity: 0.12;
  --mdw-state__pressed-opacity: 0;
  --mdw-state__dragged-opacity: 0.12;
  position: relative;
  outline: none;
  -webkit-tap-highlight-color: transparent;
}
:host(::-moz-focus-inner) {
  border: 0;
}
#state {
  position: absolute;
  inset: 0;
  pointer-events: none;
  opacity: calc(var(--mdw-state__hover-opacity) + var(--mdw-state__focus-opacity) + var(--mdw-state__pressed-opacity) + var(--mdw-state__dragged-opacity));
  background-color: currentColor;
  border-radius: inherit;
  transition-delay: 1ms;
  transition-duration: 0ms;
  transition-property:
    opacity,
    color,
    background-color;
  will-change: opacity;
}
#state[touched] {
  --mdw-state__hover-opacity: 0;
  --mdw-state__focus-opacity: 0;
}
#state:is(:not([hovered]), [disabled]:not([state-disabled~="hover"]), [state-off~="hover"]) {
  --mdw-state__hover-opacity: 0;
}
#state:is(:not([focused]), [disabled]:not([state-disabled~="focus"]), [state-off~="focus"]) {
  --mdw-state__focus-opacity: 0;
}
#state:is(:not([pressed]), [disabled]:not([state-disabled~="pressed"]), [state-off~="pressed"]) {
  --mdw-state__pressed-opacity: 0;
}
:host(:not([aria-dragged="true"])) #state,
#state:is([disabled]:not([state-disabled~="dragged"]), [state-off~="dragged"]) {
  --mdw-state__dragged-opacity: 0;
}
#state[disabled]:not([state-disabled]) {
  display: none;
}

/* components/Outline.css */
.outline {
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-color: currentColor;
  border-radius: inherit;
  color: rgba(var(--mdw-outline__rgb), var(--mdw-outline__opacity));
}
.outline[pressed]:not([disabled]),
.outline[focused]:not([disabled]) {
  --mdw-outline__rgb: var(--mdw-outline__rgb__focused);
}
.outline[disabled] {
  --mdw-outline__opacity: 0.12;
}
.outline::before {
  content: "";
  position: absolute;
  inset: 0;
  border-style: solid;
  border-width: 1px;
  border-radius: inherit;
}
@supports (-webkit-mask-box-image: none) {
  .outline::before {
    content: none;
  }
  .outline::after {
    content: "";
    position: absolute;
    inset: 0;
    -webkit-mask-box-image: var(--mdw-shape__mask-image__edges) 8 fill / auto stretch;
    background-color: currentColor;
  }
  .outline-section {
    position: absolute;
    inset: 0;
  }
  .outline-section::before,
  .outline-section::after {
    content: "";
    position: absolute;
    max-block-size: 50%;
    max-inline-size: 50%;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-size: contain;
    background-color: currentColor;
    transition-duration: 200ms;
    transition-property: width, height;
  }
  .outline-left::before {
    inset-block-start: calc(-1px * var(--mdw-shape__convex));
    inset-inline-start: calc(-1px * var(--mdw-shape__convex));
    block-size: calc(var(--mdw-shape__size__top-start-size));
    inline-size: calc(var(--mdw-shape__size__top-start-size));
    padding-block-end: calc(2px * var(--mdw-shape__convex));
    padding-inline-end: calc(2px * var(--mdw-shape__convex));
    -webkit-mask-image: var(--mdw-shape__mask-image__top-left);
  }
  .outline-left::after {
    inset-block-end: calc(-1px * var(--mdw-shape__convex));
    inset-inline-start: calc(-1px * var(--mdw-shape__convex));
    block-size: var(--mdw-shape__size__bottom-start-size);
    inline-size: var(--mdw-shape__size__bottom-start-size);
    padding-block-start: calc(2px * var(--mdw-shape__convex));
    padding-inline-end: calc(2px * var(--mdw-shape__convex));
    -webkit-mask-image: var(--mdw-shape__mask-image__bottom-left);
    -webkit-mask-position-y: 100%;
  }
  .outline-right::before {
    inset-block-start: calc(-1px * var(--mdw-shape__convex));
    inset-inline-end: calc(-1px * var(--mdw-shape__convex));
    block-size: var(--mdw-shape__size__top-end-size);
    inline-size: var(--mdw-shape__size__top-end-size);
    padding-block-end: calc(2px * var(--mdw-shape__convex));
    padding-inline-start: calc(2px * var(--mdw-shape__convex));
    -webkit-mask-image: var(--mdw-shape__mask-image__top-right);
    -webkit-mask-position-x: 100%;
  }
  .outline-right::after {
    inset-block-end: calc(-1px * var(--mdw-shape__convex));
    inset-inline-end: calc(-1px * var(--mdw-shape__convex));
    block-size: var(--mdw-shape__size__bottom-end-size);
    inline-size: var(--mdw-shape__size__bottom-end-size);
    padding-block-start: calc(2px * var(--mdw-shape__convex));
    padding-inline-start: calc(2px * var(--mdw-shape__convex));
    -webkit-mask-image: var(--mdw-shape__mask-image__bottom-right);
    -webkit-mask-position-x: 100%;
    -webkit-mask-position-y: 100%;
  }
}

/* components/Shape.css */
.shape {
  --mdw-surface__will-change: none;
  --mdw-shape__size: 0px;
  --mdw-shape__size__top-start-size: var(--mdw-shape__size);
  --mdw-shape__size__top-end-size: var(--mdw-shape__size);
  --mdw-shape__size__bottom-start-size: var(--mdw-shape__size);
  --mdw-shape__size__bottom-end-size: var(--mdw-shape__size);
  --mdw-shape__rounded: 1;
  --mdw-shape__mask-border-source: none;
  --mdw-shape__mask: none;
  position: relative;
  display: inherit;
  align-items: inherit;
  flex-direction: inherit;
  justify-content: inherit;
  overflow: hidden;
  box-sizing: border-box;
  block-size: 100%;
  min-block-size: 0;
  inline-size: 100%;
  min-inline-size: 0;
  z-index: 4;
  border-start-start-radius: calc(var(--mdw-shape__rounded) * var(--mdw-shape__size__top-start-size));
  border-start-end-radius: calc(var(--mdw-shape__rounded) * var(--mdw-shape__size__top-end-size));
  border-end-start-radius: calc(var(--mdw-shape__rounded) * var(--mdw-shape__size__bottom-start-size));
  border-end-end-radius: calc(var(--mdw-shape__rounded) * var(--mdw-shape__size__bottom-end-size));
  transition-delay: 1ms;
  transition-duration: 100ms;
  transition-property: background-color, color;
  will-change: background-color, color;
}
.shape[color]:not[disabled] {
  background-color: rgb(var(--mdw-bg));
  color: rgb(var(--mdw-ink));
}
.shape[shape-style=none] {
  --mdw-shape__size: 0px;
}
.shape[shape-style=extra-small] {
  --mdw-shape__size: var(--mdw-shape__extra-small);
}
.shape[shape-style=small] {
  --mdw-shape__size: var(--mdw-shape__small);
}
.shape[shape-style=medium] {
  --mdw-shape__size: var(--mdw-shape__medium);
}
.shape[shape-style=large] {
  --mdw-shape__size: var(--mdw-shape__large);
}
.shape[shape-style=extra-large] {
  --mdw-shape__size: var(--mdw-shape__extra-large);
}
.shape[shape-style=full] {
  --mdw-shape__size: var(--mdw-shape__full);
}
.shape[shape-top] {
  --mdw-shape__size__bottom-start-size: 0px;
  --mdw-shape__size__bottom-end-size: 0px;
  --mdw-shape__mask: linear-gradient(transparent 50%, black 50%);
}
.shape[shape-bottom] {
  --mdw-shape__size__top-start-size: 0px;
  --mdw-shape__size__top-end-size: 0px;
  --mdw-shape__mask: linear-gradient(black 50%, transparent 50%);
}
.shape[shape-start] {
  --mdw-shape__size__top-end-size: 0px;
  --mdw-shape__size__bottom-end-size: 0px;
  --mdw-shape__mask: linear-gradient(to left, black 50%, transparent 50%);
}
.shape[shape-end] {
  --mdw-shape__size__top-start-size: 0px;
  --mdw-shape__size__bottom-start-size: 0px;
  --mdw-shape__mask: linear-gradient(to left, transparent 50%, black 50%);
}
@supports (-webkit-mask-box-image: none) {
  .shape {
    --mdw-shape__rounded: inherit;
    --mdw-shape__mask-border-source: inherit;
    -webkit-mask-box-image: var(--mdw-shape__mask-border-source) 8 fill / var(--mdw-shape__size) stretch;
    -webkit-mask: var(--mdw-shape__mask);
    transition-duration:
      100ms,
      100ms,
      200ms;
    transition-property:
      background-color,
      color,
      -webkit-mask-box-image-width;
    will-change:
      background-color,
      color,
      -webkit-mask-box-image;
  }
}

/* mixins/SurfaceMixin.css */
:host {
  --mdw-elevation__box-shadow__1__umbra: 0px 1px 2px 0px rgba(var(--mdw-color__shadow), 0.30);
  --mdw-elevation-_box-shadow__2__umbra: 0px 1px 2px 0px rgba(var(--mdw-color__shadow), 0.30);
  --mdw-elevation-_box-shadow__3__umbra: 0px 1px 3px 0px rgba(var(--mdw-color__shadow), 0.30);
  --mdw-elevation-_box-shadow__4__umbra: 0px 2px 3px 0px rgba(var(--mdw-color__shadow), 0.30);
  --mdw-elevation-_box-shadow__5__umbra: 0px 4px 4px 0px rgba(var(--mdw-color__shadow), 0.30);
  --mdw-elevation__filter__0__umbra: drop-shadow(0px 1px 1px rgba(var(--mdw-color__shadow), 0));
  --mdw-elevation__filter__1__umbra: drop-shadow(0px 1px 1px rgba(var(--mdw-color__shadow), 0.30));
  --mdw-elevation__filter__2__umbra: drop-shadow(0px 1px 1px rgba(var(--mdw-color__shadow), 0.30));
  --mdw-elevation__filter__3__umbra: drop-shadow(0px 1px 1.5px rgba(var(--mdw-color__shadow), 0.30));
  --mdw-elevation__filter__4__umbra: drop-shadow(0px 2px 1.5px rgba(var(--mdw-color__shadow), 0.30));
  --mdw-elevation__filter__5__umbra: drop-shadow(0px 4px 2px rgba(var(--mdw-color__shadow), 0.30));
  --mdw-elevation__box-shadow__1__penumbra: 0px 1px 3px 1px rgba(var(--mdw-color__shadow), 0.15);
  --mdw-elevation__box-shadow__2__penumbra: 0px 2px 6px 2px rgba(var(--mdw-color__shadow), 0.15);
  --mdw-elevation__box-shadow__3__penumbra: 0px 4px 8px 3px rgba(var(--mdw-color__shadow), 0.15);
  --mdw-elevation__box-shadow__4__penumbra: 0px 6px 10px 4px rgba(var(--mdw-color__shadow), 0.15);
  --mdw-elevation__box-shadow__5__penumbra: 0px 8px 12px 6px rgba(var(--mdw-color__shadow), 0.15);
  --mdw-elevation__filter__0__penumbra: drop-shadow(0px 1px 2.5px rgba(var(--mdw-color__shadow), 0));
  --mdw-elevation__filter__1__penumbra: drop-shadow(0px 1px 2.5px rgba(var(--mdw-color__shadow), 0.25));
  --mdw-elevation__filter__2__penumbra: drop-shadow(0px 2px 5px rgba(var(--mdw-color__shadow), 0.25));
  --mdw-elevation__filter__3__penumbra: drop-shadow(0px 4px 7px rgba(var(--mdw-color__shadow), 0.263));
  --mdw-elevation__filter__4__penumbra: drop-shadow(0px 6px 9px rgba(var(--mdw-color__shadow), 0.27));
  --mdw-elevation__filter__5__penumbra: drop-shadow(0px 8px 12px rgba(var(--mdw-color__shadow), 0.30));
  --mdw-elevation__filter__0: var(--mdw-elevation__filter__0__umbra) var(--mdw-elevation__filter__0__penumbra);
  --mdw-elevation__filter__1: var(--mdw-elevation__filter__1__umbra) var(--mdw-elevation__filter__1__penumbra);
  --mdw-elevation__filter__2: var(--mdw-elevation__filter__2__umbra) var(--mdw-elevation__filter__2__penumbra);
  --mdw-elevation__filter__3: var(--mdw-elevation__filter__3__umbra) var(--mdw-elevation__filter__3__penumbra);
  --mdw-elevation__filter__4: var(--mdw-elevation__filter__4__umbra) var(--mdw-elevation__filter__4__penumbra);
  --mdw-elevation__filter__5: var(--mdw-elevation__filter__5__umbra) var(--mdw-elevation__filter__5__penumbra);
  --mdw-elevation__opacity__1: 0.05;
  --mdw-elevation__opacity__2: 0.08;
  --mdw-elevation__opacity__3: 0.11;
  --mdw-elevation__opacity__4: 0.12;
  --mdw-elevation__opacity__5: 0.14;
  --mdw-elevation__rgb: var(--mdw-color__primary);
  --mdw-outline__size: 1;
  --mdw-outline__opacity: 1;
  --mdw-outline__rgb: var(--mdw-color__outline);
  --mdw-outline__rgb__focused: var(--mdw-color__outline);
  --mdw-elevation__filter__resting: none;
  --mdw-elevation__opacity__resting: 0;
  --mdw-elevation__opacity: var(--mdw-elevation__opacity__resting);
  --mdw-elevation__filter: var(--mdw-elevation__filter__resting);
  --mdw-shape__size: 0px;
  display: block;
  transition-delay: 1ms;
  transition-duration: 200ms;
  transition-property: filter;
  will-change: filter;
}
.shape {
  --mdw-shape__size: inherit;
}
:host([color*="surface"][elevation="1"]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__1);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__1);
}
:host([color*="surface"][elevation="2"]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__2);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__2);
}
:host([color*="surface"][elevation="3"]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__3);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__3);
}
:host([color*="surface"][elevation="4"]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__4);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__4);
}
:host([color*="surface"][elevation="5"]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__5);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__5);
}
:host {
  filter: var(--mdw-elevation__filter);
}
:host(:hover:not(:active)) {
  filter: var(--mdw-elevation__filter__hover, var(--mdw-elevation__filter__resting));
}
:host(:hover:not(:active)) {
  --mdw-elevation__opacity: var(--mdw-elevation__opacity__hover, var(--mdw-elevation__opacity__resting));
  --mdw-elevation__filter: var(--mdw-elevation__opacity__filter, var(--mdw-elevation__filter__resting));
}
#elevation {
  position: absolute;
  inset: 0;
  pointer-events: none;
  opacity: var(--mdw-elevation__opacity);
  background-color: rgb(var(--mdw-elevation__rgb));
  border-radius: inherit;
  transition-delay: 1ms;
  transition-duration: 200ms;
  transition-property:
    opacity,
    color,
    background-color;
}

/* components/Button.css */
:host {
  --mdw-shape__size: var(--mdw-shape__full);
  --mdw-button__padding-inline-start: 12px;
  --mdw-button__padding-inline-end: 12px;
  --mdw-button__icon__display: none;
  --mdw-button__icon__font-variation-settings: "FILL" 1;
  --mdw-button__icon__margin-inline-start: 12px;
  --mdw-button__icon__margin-inline-end: 8px;
  --mdw-button__icon__opacity: 1;
  --mdw-button__icon__size: 18px;
  --mdw-button__touch-target__size: 10mm;
  --mdw-ink: var(--mdw-color__primary);
  --label-bg: transparent;
  display: inline-flex;
  align-items: stretch;
  justify-content: center;
  min-block-size: 40px;
  min-inline-size: 48px;
  cursor: pointer;
  color: rgb(var(--mdw-ink));
  font: var(--mdw-typescale__label-large__font);
  letter-spacing: var(--mdw-typescale__label-large__letter-spacing);
  --mdw-outline__rgb__focused: var(--mdw-ink);
}
:host(:is([color], [surface])) {
  --label-bg: rgb(var(--mdw-bg));
  background-color: transparent;
}
:host(:where([elevated], [filled])) {
  will-change: filter;
  --label-bg: rgb(var(--mdw-bg));
}
:host(:where([elevated])) {
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__primary);
}
:host(:where([filled])) {
  --mdw-bg: var(--mdw-color__primary);
  --mdw-ink: var(--mdw-color__on-primary);
}
:host(:where([filled="tonal"])) {
  --mdw-bg: var(--mdw-color__secondary-container);
  --mdw-ink: var(--mdw-color__on-secondary-container);
}
:host(:where([outlined])) {
  --mdw-ink: var(--mdw-color__primary);
}
:host(:where([outlined="surface"])) {
  --label-bg: rgb(var(--mdw-color__surface));
}
:host(:where([outlined], [elevated], [filled], [icon])) {
  --mdw-button__icon__display: block;
  --mdw-button__padding-inline-start: 0;
  --mdw-button__padding-inline-end: 24px;
}
:host(:is([outlined], [elevated], [filled])) {
  --mdw-button__icon__margin-inline-start: 16px;
}
:host(:disabled) #label {
  --mdw-outline__opacity: 0.12;
  cursor: not-allowed;
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#label[disabled]:is([elevated], [filled]) {
  --label-bg: rgba(var(--mdw-color__on-surface), 0.12);
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#icon[disabled],
#slot[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
:host([filled]) {
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__0);
  --mdw-elevation__filter__hover: var(--mdw-elevation__filter__1);
}
:host([elevated]) {
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__1);
  --mdw-elevation__filter__hover: var(--mdw-elevation__filter__2);
}
:host([filled][color*="surface"]) {
  --mdw-elevation__opacity__hover: var(--mdw-elevation__opacity__1);
}
:host([elevated][color*="surface"]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__1);
  --mdw-elevation__opacity__hover: var(--mdw-elevation__opacity__2);
}
#icon {
  --mdw-icon__font-variation-settings: var(--mdw-button__icon__font-variation-settings);
  --mdw-icon__opacity: var(--mdw-button__icon__opacity);
  --mdw-icon__size: var(--mdw-button__icon__size);
  order: -1;
  display: var(--mdw-button__icon__display);
  margin-inline-start: var(--mdw-button__icon__margin-inline-start);
  margin-inline-end: var(--mdw-button__icon__margin-inline-end);
}
:host(:not([icon])) #icon {
  inline-size: 0;
}
#icon[disabled] {
  --mdw-icon__image__opacity: 0.38;
}
#touch-target {
  position: absolute;
  inset: 50%;
  block-size: var(--mdw-button__touch-target__size);
  inline-size: var(--mdw-button__touch-target__size);
  transform: translateX(-50%) translateY(-50%);
  visibility: hidden;
}
@media (any-pointer: coarse) {
  #touch-target {
    visibility: visible;
  }
}
#label {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  block-size: auto;
  min-block-size: none;
  max-block-size: none;
  inline-size: auto;
  min-inline-size: none;
  max-inline-size: none;
  flex: 1;
  margin: 0;
  border: none;
  padding: 0;
  padding-inline-start: var(--mdw-button__padding-inline-start);
  padding-inline-end: var(--mdw-button__padding-inline-end);
  cursor: inherit;
  outline: none;
  -webkit-tap-highlight-color: transparent;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  user-select: none;
  z-index: 0;
  background-color: var(--label-bg);
  color: inherit;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  font-family: inherit;
  letter-spacing: inherit;
  text-decoration: none;
  white-space: nowrap;
}
#slot {
  text-align: center;
}
:host(:disabled) {
}

/* layout/Flex.css */
:host {
  --mdw-layout__x: normal;
  --mdw-layout__y: normal;
  display: flex;
  align-items: var(--mdw-layout__y);
  justify-content: var(--mdw-layout__x);
  box-sizing: border-box;
}
:host([column]) {
  align-items: var(--mdw-layout__x);
  flex-direction: column;
  justify-content: var(--mdw-layout__y);
}
:host(:is([x="start"], [x="flex-start"])) {
  --mdw-layout__x: flex-start;
}
:host(:is([x="end"], [x="flex-end"])) {
  --mdw-layout__x: flex-end;
}
:host([x="center"]) {
  --mdw-layout__x: center;
}
:host(:is([x="between"], [x="space-between"])) {
  --mdw-layout__x: space-between;
}
:host(:is([x="around"], [x="space-around"])) {
  --mdw-layout__x: space-around;
}
:host(:is([x="evenly"], [x="space-evenly"])) {
  --mdw-layout__x: space-evenly;
}
:host([x="stretch"]) {
  --mdw-layout__x: stretch;
}
:host(:is([y="start"], [y="flex-start"])) {
  --mdw-layout__y: flex-start;
}
:host(:is([y="end"], [y="flex-end"])) {
  --mdw-layout__y: flex-end;
}
:host([y="center"]) {
  --mdw-layout__y: center;
}
:host(:is([y="between"], [y="space-between"])) {
  --mdw-layout__y: space-between;
}
:host(:is([y="around"], [y="space-around"])) {
  --mdw-layout__y: space-around;
}
:host(:is([y="evenly"], [y="space-evenly"])) {
  --mdw-layout__y: space-evenly;
}
:host([y="stretch"]) {
  -y: stretch;
}
:host([wrap]) {
  flex-wrap: wrap;
}
:host([wrap="reverse"]) {
  flex-wrap: wrap-reverse;
}
:host([gap]) {
  gap: var(--mdw-layout__gap);
}

/* components/Container.css */
:host([color]) {
  background-color: rgb(var(--mdw-bg));
}
:host([inline]) {
  display: inline-flex;
}
:host([inline][block]) {
  display: inline-block;
}

/* components/Tooltip.css */
:host {
  --mdw-shape__size: var(--mdw-shape__extra-small);
  --mdw-ink: var(--mdw-color__on-surface-variant);
  --mdw-bg: var(--mdw-color__surface-variant);
  pointer-events: none;
  opacity: 0;
  transform: scale(0);
  z-index: 24;
  font: var(--mdw-typescale__label-medium__font);
  letter-spacing: var(--mdw-typescale__label-medium__letter-spacing);
  transition: transform 200ms, opacity 200ms;
}
.shape {
  display: block;
  vertical-align: middle;
  box-sizing: border-box;
  margin-inline: auto;
  padding-block: 4px;
  padding-inline: 8px;
}
:host(:where([touch])) .shape {
  padding-block: 6px;
  padding-inline: 16px;
  font: var(--mdw-typescale__label-large__font);
  letter-spacing: var(--mdw-typescale__label-large__letter-spacing);
}
:host([open]) {
  opacity: 1;
  transform: scale(1);
}

/* mixins/TooltipTriggerMixin.css */
#tooltip {
  position: absolute;
  overflow: hidden;
  box-sizing: content-box;
  block-size: 0;
  inline-size: 0;
  margin: 0;
  padding: 0;
  transform: none;
}
#tooltip[open] {
  display: block;
  block-size: auto;
  inline-size: auto;
  cursor: default;
  pointer-events: auto;
  opacity: 0;
  transform: none;
}

/* components/IconButton.css */
:host {
  --mdw-shape__size: var(--mdw-shape__full);
  --mdw-container__box-shadow: none;
  --mdw-container__elevation__opacity: 0;
  --mdw-button__icon__size: 24px;
  --mdw-button__icon__display: block;
  --mdw-outline__opacity: 1;
  --mdw-button__target__size: 48px;
  --mdw-button__icon__font-variation-settings: "FILL" 0;
  --mdw-icon-button__background-alpha: 1;
  --mdw-outline__size: 0;
  --mdw-ink: var(--mdw-color__on-surface-variant);
  --label-bg: rgb(var(--mdw-bg));
  display: flex;
  align-items: center;
  justify-content: center;
  block-size: auto;
  min-block-size: 0;
  inline-size: auto;
  min-inline-size: 0;
  background-color: transparent;
  font-size: 24px;
}
:host(:focus) {
  --mdw-outline__rgb: var(--mdw-color__outline);
}
:host([ink]:focus) {
  --mdw-outline__rgb: var(--mdw-ink);
}
#label {
  block-size: auto;
  inline-size: auto;
  padding: 8px;
}
#icon {
  margin: 0px;
}
:host(:not([icon])) #icon {
  inline-size: 1em;
}
#label[toggle] {
  color: rgb(var(--mdw-color__on-surface-variant));
}
#label[selected] {
  --mdw-button__icon__font-variation-settings: "FILL" 1;
  color: inherit;
}
:host(:where([filled])) {
  --label-bg: rgb(var(--mdw-bg));
  --mdw-ink: var(--mdw-color__on-primary);
  --mdw-bg: var(--mdw-color__primary);
  --mdw-button__icon__font-variation-settings: "FILL" 1;
}
:host(:where([filled="tonal"])) {
  --mdw-ink: var(--mdw-color__on-secondary-container);
  --mdw-bg: var(--mdw-color__secondary-container);
}
#label:where([filled][toggle]:not([selected])) {
  --mdw-button__icon__font-variation-settings: "FILL" 0;
  background-color: rgb(var(--mdw-color__surface-variant));
  color: rgb(var(--mdw-bg));
}
#label:where([filled="tonal"][toggle]:not([selected])) {
  color: rgb(var(--mdw-color__on-surface-variant));
}
:host(:where([outlined])) {
  --mdw-bg: var(--mdw-color__inverse-surface);
  --mdw-ink: var(--mdw-color__inverse-on-surface);
  --mdw-button__icon__font-variation-settings: "FILL" 0;
  --mdw-outline__size: 1;
  --label-bg: transparent;
  color: rgb(var(--mdw-color__on-surface-variant));
}
#label:where([outlined])[toggle] {
  background-color: transparent;
  color: rgb(var(--mdw-color__on-surface-variant));
}
#label:where([outlined])[selected] {
  --mdw-button__icon__font-variation-settings: "FILL" 1;
  --mdw-outline__size: 0;
  background-color: rgba(var(--mdw-bg), var(--mdw-icon-button__background-alpha));
  color: rgb(var(--mdw-ink));
}
#outline[selected] {
  opacity: 0;
}
#label[disabled] {
  --mdw-outline__opacity: 0.12;
  --mdw-icon-button__background-alpha: 0.12;
  cursor: not-allowed;
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#label[disabled][filled],
#label[disabled][outlined][selected] {
  background-color: rgba(var(--mdw-color__on-surface), 0.12);
}

/* components/TopAppBar.css */
:host {
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__on-surface);
  --mdw-container__elevation__opacity: var(--mdw-container__elevation__opacity__0);
  display: contents;
  z-index: 2;
}
#bar {
  position: sticky;
  inset-block-start: 0;
  inset-inline: 0;
  display: grid;
  align-items: center;
  grid-auto-flow: row;
  grid-template-rows: minmax(64px, min-content) minmax(0, min-content);
  grid-template-columns: minmax(auto, 1fr) 12px minmax(0, auto) 12px minmax(auto, 1fr);
  box-sizing: border-box;
  inline-size: 100%;
  max-inline-size: 100%;
  padding-inline: 4px;
  z-index: 5;
  background-color: rgb(var(--mdw-bg));
  box-shadow: none;
  color: rgb(var(--mdw-ink));
  font: var(--mdw-typescale__title-large__font);
  letter-spacing: var(--mdw-typescale__title-large__letter-spacing);
  white-space: nowrap;
  transition: grid-template-columns 100ms;
}
#elevation {
  z-index: 1;
}
:host([raised]) {
  --mdw-container__elevation__opacity: var(--mdw-container__elevation__opacity__2);
}
:host([color]:not([color|="surface"])) #elevation,
:host([color]:not([color|="surface"])) #companion::before {
  display: none;
}
#leading {
  display: flex;
  align-items: center;
  grid-column: 1;
  grid-row: 1;
}
#headline {
  display: block;
  overflow-x: clip;
  overflow-y: hidden;
  overflow-y: hidden;
  grid-column: 3;
  grid-row: 1;
  text-overflow: ellipsis;
  text-transform: none;
  word-break: break-word;
  transition-duration: 200ms;
  transition-property:
    transform,
    opacity,
    color,
    background-color;
}
#trailing {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  grid-column: 5;
  grid-row: 1;
  color: var(--mdw-color__on-surface-variant);
}
#companion {
  position: relative;
  display: flex;
  align-items: flex-end;
  margin-block-start: -4px;
  padding-block-end: 20px;
  padding-inline: 16px;
  background-color: rgb(var(--mdw-bg));
  box-shadow: none;
  font: var(--mdw-typescale__headline-small__font);
  letter-spacing: var(--mdw-typescale__headline-small__letter-spacing);
  white-space: nowrap;
}
#companion-text {
  display: block;
  overflow-x: clip;
  overflow-y: hidden;
  overflow-y: hidden;
  text-overflow: ellipsis;
  text-transform: none;
  word-break: break-word;
}
:host([size="large"]) #companion {
  min-block-size: 108px;
  font: var(--mdw-typescale__headline-medium__font);
  letter-spacing: var(--mdw-typescale__headline-medium__letter-spacing);
  white-space: normal;
}
:host([size="large"]) #companion-text {
  max-block-size: calc(2 * var(--mdw-typescale__headline-medium__line-height));
}
@supports (-webkit-line-clamp: 2) {
  :host([size="large"]) #companion-text {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    max-block-size: none;
  }
}
#companion::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  opacity: var(--mdw-container__elevation__opacity, 0);
  visibility: var(--mdw-container__elevation__visibility);
  background-color: rgb(var(--mdw-container__elevation__color));
  border-radius: inherit;
  transition-delay: 1ms;
  transition-duration: 200ms;
  transition-property:
    opacity,
    color,
    background-color;
}
:host([hide-on-scroll]) #bar {
  position: relative;
  inset-block-start: 0;
  transform: translateY(0);
  will-change: transform, position;
}
:host([size="small"]) #bar {
  grid-template-columns: auto 4px 1fr 4px auto;
}
:host(:is([size="medium"], [size="large"])) #headline {
  opacity: 0;
  will-change: opacity;
}

/* components/Badge.css */
:host {
  --mdw-shape__size: var(--mdw-shape__full);
  --mdw-ink: var(--mdw-color__on-error);
  --mdw-bg: var(--mdw-color__error);
}
.shape {
  box-sizing: border-box;
  min-inline-size: 16px;
  min-inline-size: 1lh;
  padding-inline: 4px;
  padding-inline: 0.25lh;
  font: var(--mdw-typescale__label-small__font);
  letter-spacing: var(--mdw-typescale__label-small__letter-spacing);
  text-align: center;
}
:host(:empty) .shape {
  min-block-size: 6px;
  min-inline-size: 6px;
  padding-inline: 0;
}

/* components/BottomAppBar.css */
:host {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__2);
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__on-surface);
}
#shape {
  display: flex;
  align-items: center;
  gap: 8px;
  justify-content: flex-start;
  box-sizing: border-box;
  block-size: 80px;
  padding-block: 12px;
  padding-inline: 8px 16px;
  box-shadow: none;
  direction: ltr;
}
:host([color]:not([color*="surface"])) {
  --mdw-elevation__opacity__resting: 0;
}

/* components/Card.css */
:host {
  --mdw-shape__size: 12px;
  --mdw-card__elevation__visiblity: visible;
  position: relative;
  display: inline-block;
  align-items: flex-start;
  box-sizing: border-box;
}
:host([actionable]) {
  --mdw-card__elevation__visiblity: hidden;
  box-shadow: none;
}
:host([disabled]) #shape {
  --mdw-outline__opacity: 0.12;
  cursor: not-allowed;
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
:host([disabled]:is([elevated], [filled])) #shape {
  background-color: rgba(var(--mdw-color__on-surface), 0.12);
}
:host([disabled]) #slot::slotted(:first-child) {
  --mdw-card-action-area__pointer-events: none;
}
:host([disabled]) #primary-action {
  visibility: hidden;
}
#elevation {
  visibility: var(--mdw-card__elevation__visiblity);
}
#primary-action::slotted(:first-child) {
  --mdw-ink: inherit;
  --mdw-shape__size: inherit;
  --mdw-surface__elevation__opacity: inherit;
  --mdw-surface__box-shadow: inherit;
  position: absolute;
  inset: 0;
  padding: 0;
  z-index: 1;
  background-color: transparent;
  color: var(--mdw-ink);
}
:host(:where([elevated])) {
  --mdw-surface__will-change: filter;
  --mdw-bg: --mdw-color__surface;
  --mdw-ink: --mdw-color__on-surface;
}
:host([elevated]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__1);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__1);
  --mdw-elevation__opacity__hover: var(--mdw-elevation__opacity__2);
  --mdw-elevation__filter__hover: var(--mdw-filter__filter__2);
}
:host(:is([elevated], [filled])[color]:not([color*="surface"])) {
  --mdw-elevation__opacity__resting: 0;
  --mdw-elevation__opacity__hover: 0;
}
:host(:where([filled])) {
  --mdw-bg: var(--mdw-color__surface-variant);
  --mdw-ink: var(--mdw-color__on-surface-variant);
}
:host([filled]) #primary-action:hover {
  --mdw-surface__box-shadow: var(--mdw-surface__box-shadow__1);
}
#slot {
  overflow: hidden;
}
#fieldset {
  display: contents;
}

/* components/CheckboxIcon.css */
:host {
  --mdw-ink: var(--mdw-color__on-primary);
  --mdw-bg: var(--mdw-color__primary);
  --mdw-shape__size: 2px;
  --disabled-opacity: 0.38;
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  block-size: 18px;
  inline-size: 18px;
  font-size: 18px;
}
#shape {
  --mdw-shape__size: inherit;
}
#icon {
  position: absolute;
  opacity: 0;
  background-color: rgb(var(--mdw-bg));
  color: rgb(var(--mdw-ink));
  transition-duration: 100ms;
  transition-property:
    opacity,
    background-color,
    color;
  will-change: opacity;
}
#outline {
  filter: drop-shadow(1px 0px 0px currentColor) drop-shadow(0px 1px 0px currentColor) drop-shadow(-1px 0px 0px currentColor) drop-shadow(0px -1px 0px currentColor);
  color: rgb(var(--mdw-color__on-surface));
  transition-duration: 100ms;
  transition-property:
    opacity,
    background-color,
    color;
  will-change: opacity;
}
#icon[selected] {
  opacity: 1;
}
#outline[selected] {
  opacity: 0;
}
#icon[errored] {
  background-color: rgb(var(--mdw-color__error));
  color: rgb(var(--mdw-color__on-error));
}
#outline[errored] {
  color: rgb(var(--mdw-color__error));
}
#icon[disabled] {
  background-color: rgba(var(--mdw-color__on-surface), var(--disabled-opacity));
  color: rgb(var(--mdw-color__surface), var(--disabled-opacity));
}
#outline[disabled] {
  color: rgb(var(--mdw-color__on-surface), var(--disabled-opacity));
}

/* components/Checkbox.css */
:host {
  --mdw-ink: var(--mdw-color__on-primary);
  --mdw-bg: var(--mdw-color__primary);
  --mdw-checkbox__size: 18px;
  --mdw-checkbox__state-size: 40px;
  --mdw-checkbox__margin: calc((var(--mdw-checkbox__state-size) - var(--mdw-checkbox__size)) / 2);
  --mdw-shape__size: 2px;
  gap: var(--mdw-radio__gap, calc(var(--mdw-checkbox__margin)));
  direction: var(--mdw-radio__direction, initial);
}
#label {
  display: inline-grid;
  align-items: center;
  gap: inherit;
  grid-auto-flow: column;
  grid-template-rows: minmax(var(--mdw-checkbox__size), min-content);
  grid-template-columns: var(--mdw-checkbox__size);
  cursor: pointer;
  transition: none 100ms cubic-bezier(0.4, 0.0, 1, 1);
}
#control {
  line-height: 0;
}
#state {
  pointer-events: auto;
}
#state,
#ripple-container {
  inset-block-start: 50%;
  inset-inline-start: 50%;
  block-size: var(--mdw-checkbox__state-size);
  inline-size: var(--mdw-checkbox__state-size);
  transform: translateX(-50%) translateY(-50%);
  border-radius: 50%;
}
#label[disabled] {
  cursor: not-allowed;
  opacity: 0.38;
}
#target {
  position: relative;
  display: inline-flex;
  grid-column: 1 / 1;
  color: rgb(var(--mdw-color__on-surface));
}
#target[selected] {
  color: rgb(var(--mdw-bg));
}
#target[disabled] {
  color: rgb(var(--mdw-color__on-surface));
}
#target[errored] {
  color: rgb(var(--mdw-color__error));
}
#icon {
  --mdw-ink: inherit;
  --mdw-bg: inherit;
  --disabled-opacity: 1;
}

/* components/Chip.css */
:host {
  --mdw-ink: var(--mdw-color__primary);
  --mdw-shape__size: 8px;
  --mdw-button__icon__size: 18px;
  --mdw-button__icon__display: block;
  --mdw-button__padding-inline-start: 0;
  --mdw-button__padding-inline-end: 16px;
  --mdw-button__icon__margin-inline-start: 16px;
  --mdw-outline__visibility: visible;
  --mdw-chip__trailing-icon__size: 18px;
  --mdw-chip__trailing-icon__opacity: 1;
  --mdw-chip__trailing-icon__display: block;
  --mdw-chip__trailing-icon__font-variation-settings: "FILL" 1;
  --mdw-chip__label-color: var(--mdw-color__on-surface);
  min-block-size: 32px;
  color: rgb(var(--mdw-chip__label-color));
}
:host([elevated]) {
  color: rgb(var(--mdw-chip__label-color));
}
:host(:where([suggestion])) {
  --mdw-ink: var(--mdw-color__on-surface-variant);
  --mdw-chip__label-color: var(--mdw-ink);
}
.mdw-button__text {
  block-size: 32px;
  padding-inline-start: 0;
  padding-inline-end: 16px;
}
#outline {
  --mdw-outline__rgb: var(--mdw-color__outline);
}
#icon {
  --mdw-button__icon__margin-inline-start: 8px;
  --mdw-button__icon__margin-inline-end: 8px;
  color: rgb(var(--mdw-ink));
}
#slot,
#state,
#ripple-container {
  color: rgb(var(--mdw-chip__label-color));
}
#slot[disabled],
#icon[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#icon[disabled][src] {
  filter: saturate(0);
}

/* components/Dialog.css */
:host {
  --mdw-dialog__expand-duration: var(--mdw-motion-expand-duration, 250ms);
  --mdw-dialog__simple-duration: var(--mdw-motion-simple-duration, 100ms);
  --mdw-dialog__standard-easing: var(--mdw-motion-standard-easing, cubic-bezier(0.4, 0.0, 0.2, 1));
  --mdw-dialog__deceleration-easing: var(--mdw-motion-deceleration-easing, cubic-bezier(0.0, 0.0, 0.2, 1));
  --mdw-dialog__align-items: flex-start;
  --mdw-dialog__fade-in-duration: var(--mdw-motion-fade-in-duration, 150ms);
  --mdw-dialog__scrim__visibility: hidden;
  --mdw-dialog__edge-distance: 48px;
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__on-surface);
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 24;
}
:host([icon]) {
  --mdw-dialog__align-items: center;
}
@media (min-width: 1440px) {
  :host {
    --mdw-dialog__edge-distance: 56px;
  }
}
#dialog {
  position: fixed;
  inset-block-start: 0;
  inset-inline-start: 0;
  display: flex;
  align-items: center;
  flex-direction: row;
  justify-content: center;
  box-sizing: border-box;
  block-size: 100%;
  max-block-size: none;
  inline-size: 100%;
  max-inline-size: none;
  margin: 0;
  border: none;
  padding: var(--mdw-dialog__edge-distance);
  opacity: 0;
  visibility: hidden;
  z-index: 24;
  background-color: transparent;
  transition: none;
  transition-duration: motion.$fadeOutDuration;
  transition-property: opacity;
  transition-timing-function: motion.$accelerateEasing;
  will-change: opacity;
}
#dialog::backdrop {
  display: none;
}
#dialog[aria-hidden=false],
#dialog:modal {
  --mdw-dialog__scrim__visibility: visible;
  pointer-events: auto;
  opacity: 1;
  visibility: visible;
  transition-duration: var(--mdw-dialog__fade-in-duration);
  transition-property: opacity;
  transition-timing-function: var(--mdw-dialog__deceleration-easing);
}
#scrim {
  position: fixed;
  inset: 0;
  overflow-y: scroll;
  overscroll-behavior: none;
  overscroll-behavior: contain;
  scrollbar-width: none;
  block-size: 100%;
  inline-size: 100%;
  cursor: default;
  pointer-events: inherit;
  -webkit-tap-highlight-color: transparent;
  opacity: 0.38;
  visibility: var(--mdw-dialog__scrim__visibility);
  z-index: 0;
  background-color: rgb(var(--mdw-color__scrim));
}
#scrim::-webkit-scrollbar {
  display: none;
}
#scrim::after {
  content: "";
  display: block;
  block-size: 200%;
  inline-size: 200%;
}
@keyframes scaleUpAnimation {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}
#surface {
  --mdw-shape__size: 28px;
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__3);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__3);
  position: relative;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  max-block-size: 100%;
  min-inline-size: 280px;
  max-inline-size: 560px;
  flex-shrink: 1;
  transform: scale(1);
  transform-origin: bottom center;
  z-index: 24;
  will-change: display, transform;
}
#surface::part(shape) {
  display: flex;
  align-items: var(--mdw-dialog__align-items);
  flex-direction: column;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: none;
  overscroll-behavior: contain;
  padding-block-start: 8px;
}
#dialog[aria-hidden=false] #surface,
#dialog:modal #surface {
  animation-name: scaleUpAnimation;
  animation-duration: var(--mdw-dialog__fade-in-duration);
  animation-direction: forwards;
}
#icon {
  --mdw-icon__size: 24px;
  margin-block-start: 16px;
}
#headline {
  display: block;
  margin-block-start: 16px;
  margin-inline: 24px;
  color: rgb(var(--mdw-color__on-surface));
  font: var(--mdw-typescale__headline-small__font);
  letter-spacing: var(--mdw-typescale__headline-small__letter-spacing);
}
#headline:not([slotted]):empty {
  display: none;
}
#body {
  margin-block: 16px;
}
.content {
  padding-inline: 24px;
}
#divider-top {
  margin-block-start: 16px;
}
mdw-divider:not([size]) {
  color: transparent;
}
mdw-divider[size=inset] {
  padding-inline: 24px;
}
#fixed {
  display: block;
  margin-block-start: 16px;
  color: rgb(var(--mdw-color__on-surface-variant));
  font: var(--mdw-typescale__body-medium__font);
  letter-spacing: var(--mdw-typescale__body-medium__letter-spacing);
}
#fixed:not([slotted]) {
  display: none;
}
#slot {
  display: block;
  overflow-y: auto;
  color: rgb(var(--mdw-color__on-surface-variant));
  font: var(--mdw-typescale__body-medium__font);
  letter-spacing: var(--mdw-typescale__body-medium__letter-spacing);
}
#scroller {
  display: block;
  overflow-y: auto;
}
form {
  display: contents;
}
#form-slot::slotted(form) {
  display: contents;
}

/* components/Divider.css */
:host {
  --mdw-ink: var(--mdw-color__outline-variant);
  position: relative;
  display: block;
  overflow: visible;
  box-sizing: border-box;
  block-size: 0;
  inline-size: 100%;
  color: rgb(var(--mdw-ink));
}
:host::before {
  content: "";
  display: block;
  box-sizing: border-box;
  block-size: 1px;
  inline-size: auto;
  padding: inherit;
  background-color: currentcolor;
}
:host([vertical]) {
  display: inline-flex;
  vertical-align: top;
  block-size: auto;
  min-block-size: 100%;
  inline-size: 0;
}
:host([vertical])::before {
  block-size: auto;
  min-inline-size: 1px;
}

/* components/ExtendedFab.css */
:host {
  --mdw-shape__size: 16px;
  --mdw-button__icon__size: 24px;
  --mdw-button__padding-inline-start: 20px;
  --mdw-button__padding-inline-end: 20px;
  --mdw-button__icon__display: none;
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__3);
  --mdw-elevation__opacity__hover: var(--mdw-elevation__hover__4);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__3);
  --mdw-elevation__filter__hover: var(--mdw-elevation__filter__4);
  --mdw-bg: var(--mdw-color__primary-container);
  --mdw-ink: var(--mdw-color__on-primary-container);
  --label-bg: rgb(var(--mdw-bg));
  min-block-size: 56px;
  min-inline-size: 80px;
}
:host([flat]) {
  --mdw-elevation__filter__resting: none;
  --mdw-elevation__filter__hover: none;
}
#elevation:not([color*="surface"]) {
  display: none;
}
:host([flat]) #elevation {
  display: none;
}
:host([icon]) {
  --mdw-button__icon__display: block;
  --mdw-button__icon__margin-inline-start: 16px;
  --mdw-button__icon__margin-inline-end: 12px;
  --mdw-button__padding-inline-start: 0;
}
:host([lowered]) {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__1);
  --mdw-elevation__opacity__hover: var(--mdw-elevation__opacity__2);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__1);
  --mdw-elevation__filter__hover: var(--mdw-elevation__filter__2);
}

/* components/Fab.css */
:host {
  --mdw-shape__size: 16px;
  --mdw-button__icon__display: block;
  --mdw-button__icon__size: 24px;
  min-block-size: 56px;
  min-inline-size: 56px;
}
#label {
  padding: 0;
}
#icon {
  margin: 0;
}
:host([fab-size="small"]) {
  --mdw-shape__size: 12px;
  min-block-size: 40px;
  min-inline-size: 40px;
}
:host([fab-size="large"]) {
  --mdw-shape__size: 28px;
  --mdw-button__icon__size: 36px;
  min-block-size: 96px;
  min-inline-size: 96px;
}

/* components/FilterChip.css */
:host {
  --mdw-ink: var(--mdw-color__on-secondary-container);
  --mdw-bg: var(--mdw-color__secondary-container);
  --label-bg: transparent;
}
:host(:focus) {
  --mdw-outline__rgb: var(--mdw-color__outline);
}
:host([elevated]) {
  --label-bg: rgb(var(--mdw-color__surface));
}
#slot,
#state,
#ripple-container,
#icon {
  color: inherit;
}
#label {
  padding: 0;
  background-color: transparent;
  color: rgb(var(--mdw-color__on-surface-variant));
}
#label[elevated] {
  background-color: rgb(var(--mdw-color__surface));
}
#label[selected] {
  --mdw-button__icon__font-variation-settings: "FILL" 1;
  background-color: rgb(var(--mdw-bg));
  color: rgb(var(--mdw-ink));
}
#label[selected] #outline {
  color: transparent;
}
#trailing-icon {
  --mdw-icon__size: var(--mdw-chip__trailing-icon__size);
  --mdw-icon__opacity: var(--mdw-chip__trailing-icon__opacity);
  --mdw-icon__display: var(--mdw-chip__trailing-icon__display);
  --mdw-icon__font-variation-settings: var(--mdw-chip__trailing-icon__font-variation-settings);
  position: relative;
  order: 1;
  margin-inline-start: 8px;
  margin-inline-end: 8px;
}
.mdw-chip__checkbox {
  position: absolute;
  max-block-size: 0;
  max-inline-size: 0;
  appearance: none;
  pointer-events: none;
}
:host(:not([trailing-icon])) #trailing-icon {
  --mdw-chip__trailing-icon__size: 0;
}
#check-icon {
  --mdw-icon__size: 0;
  order: -1;
  margin-inline: 8px;
}
:host([type="checkbox"]) :is(#slot, #state, #ripple-container, #icon, #check-icon) {
  color: inherit;
}
#check-icon[selected] {
  --mdw-icon__size: 18px;
}
#check-icon[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#label[disabled]:is([elevated], [selected]) {
  background-color: rgba(var(--mdw-color__on-surface), 0.12);
}

/* mixins/TextFieldMixin.css */
:host {
  --mdw-shape__size: var(--mdw-shape__extra-small);
  --control__margin-top: calc(var(--mdw-typescale__body-small__line-height) / 2);
  --control__padding-top: calc((var(--mdw-text-field__ratio) * 16px) - calc(var(--mdw-typescale__body-small__line-height) / 2));
  --control__padding-bottom: calc(var(--mdw-text-field__ratio) * 16px);
  --control__margin-bottom: 0px;
  --mdw-text-field__ratio: 1;
  --inline-color: rgb(var(--mdw-color__on-surface-variant));
  --descriptor-opacity: 0.5;
  --mdw-ink: var(--mdw-color__primary);
  --mdw-bg: var(--mdw-color__surface-variant);
  --mdw-type__font: var(--mdw-typescale__body-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-large__letter-spacing);
  display: block;
  color: rgb(var(--mdw-color__on-surface));
  font: var(--mdw-type__font);
  letter-spacing: var(--mdw-type__letter-spacing);
}
#label:is([filled], [color]) {
  background-color: rgb(var(--mdw-bg));
}
#label[outlined] {
  background-color: transparent;
}
:host([icon]) {
  --padding-inline-start: 12px;
}
:host([trailing-icon]) {
  --padding-inline-end: 12px;
}
:host(:is([color], [ink])) {
  background-color: transparent;
  color: rgb(var(--mdw-color__on-surface));
}
:is(#label-text, #indicator) {
  color: rgb(var(--mdw-color__on-surface-variant));
}
:is(#label-text, #indicator)[hovered] {
}
:is(#label-text, #indicator)[focused] {
  color: rgb(var(--mdw-ink));
}
#label {
  position: relative;
  display: flex;
  align-items: center;
  overflow: visible;
  padding-inline-start: 16px;
  padding-inline-end: 16px;
  cursor: inherit;
  background-color: transparent;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  font-family: inherit;
  letter-spacing: inherit;
  transition: none 200ms cubic-bezier(0.0, 0.0, 0.2, 1);
}
#label[icon] {
  padding-inline-start: 12px;
}
#label[trailing-icon] {
  padding-inline-end: 12px;
}
#label[focused] {
  transition: none 100ms cubic-bezier(0.4, 0.0, 1, 1);
}
#prefix,
#suffix,
#control::placeholder {
  opacity: var(--descriptor-opacity);
  color: var(--inline-color);
  transition-duration: inherit;
  transition-property: opacity;
  transition-timing-function: inherit;
  will-change: opacity;
}
:host([label]:is([filled], [outlined])) {
  --descriptor-opacity: 0;
}
#control {
  position: relative;
  align-self: flex-start;
  display: inline;
  box-sizing: border-box;
  block-size: auto;
  inline-size: 100%;
  min-inline-size: none;
  flex: 1;
  border-block-start: solid var(--control__margin-top) transparent;
  border-block-end: solid var(--control__margin-bottom) transparent;
  padding-block: var(--control__padding-top) var(--control__padding-bottom);
  appearance: none;
  caret-color: rgb(var(--mdw-ink));
  cursor: auto;
  visibility: visible;
  background-color: transparent;
  border-color: transparent;
  color: inherit;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  font-family: inherit;
  letter-spacing: inherit;
  transition-duration: inherit;
  transition-property: color;
  transition-timing-function: inherit;
}
#suffix,
#prefix {
  margin-block: var(--control__margin-top) var(--control__margin-bottom);
  padding-block: var(--control__padding-top) var(--control__padding-bottom);
}
#control::selection {
  background-color: rgb(var(--mdw-ink));
  color: rgb(var(--mdw-color__surface));
}
#state {
  --mdw-state__focus-opacity: 0;
  --mdw-state__pressed-opacity: 0;
}
mdw-icon {
  --mdw-icon__size: 24px;
  align-self: center;
  color: var(--inline-color);
}
#icon {
  order: -2;
  margin-inline-end: 16px;
}
#prefix {
  order: -1;
}
#suffix {
  order: 1;
}
#trailing-icon {
  order: 2;
  margin-inline-start: 16px;
}
#indicator {
  position: absolute;
  inset-block-end: 0;
  inset-inline: 0;
  border-block-end: 2px solid currentColor;
  pointer-events: none;
  transform: scaleY(0.5);
  z-index: 1;
  transition-duration: inherit;
  transition-property: transform;
  transition-timing-function: inherit;
  will-change: transform;
}
#indicator[focused] {
  transform: scaleY(1);
}
#label-text {
  position: absolute;
  inset-block-start: 0;
  inset-inline: 0;
  display: block;
  overflow-x: clip;
  overflow-y: visible;
  padding-inline: 16px;
  pointer-events: none;
  opacity: 1;
  transform: translateY(calc((var(--control__margin-top) + var(--control__padding-top) + 100% + var(--control__padding-bottom) + var(--control__margin-bottom)) / 2)) translateY(-50%);
  z-index: 4;
  color: rgb(var(--mdw-color__on-surface-variant));
  text-overflow: ellipsis;
  white-space: nowrap;
  transition-duration: inherit;
  transition-property:
    inset-inline-start,
    font-size,
    transform;
  transition-timing-function: inherit;
  will-change:
    inset-inline-start,
    font-size,
    transform;
}
@supports (-moz-appearance:none) {
  #label-text {
    overflow-x: hidden;
  }
}
#label-text[focused] {
  color: rgb(var(--mdw-ink));
}
#label-text[icon] {
  inset-inline-start: calc(24px + 12px);
}
#label-text[trailing-icon] {
  inset-inline-end: calc(24px + 12px);
}
#label-text:is([focused], [populated]) {
  transform: translateY(calc(var(--mdw-text-field__ratio) * 8px));
  font: var(--mdw-typescale__body-small__font);
  letter-spacing: var(--mdw-typescale__body-small__letter-spacing);
}
#label-text[outlined]:is([focused], [populated]) {
  inset-inline: 0;
  transform: translateY(-50%);
}
#label[label][outlined] {
  --mdw-shape__size__top-start-size: min(var(--mdw-shape__size), 12px);
  --mdw-shape__size__bottom-start-size: min(var(--mdw-shape__size), 12px);
  --mdw-shape__size__top-end-size: min(var(--mdw-shape__size), 12px);
  --mdw-shape__size__bottom-end-size: min(var(--mdw-shape__size), 12px);
  -webkit-mask-box-image-width: min(var(--mdw-shape__size), 12px);
}
:is(#prefix, #suffix):is([focused], [populated]) {
  opacity: 1;
}
#control:is(:focus, :not(:placeholder-shown))::placeholder {
  opacity: 0.70;
}
#control[input-suffix] {
  text-align: end;
}
#outline::before {
  content: none;
}
.outline-section {
  position: relative;
  border: 1px solid currentColor;
}
.outline-section[focused] {
  border-width: 2px;
}
#outline-left {
  border-inline-end-width: 0;
  border-start-start-radius: inherit;
  border-end-start-radius: inherit;
}
#outline-right {
  border-inline-start-width: 0;
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}
#outline {
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: 12px auto minmax(12px, 1fr);
  color: rgb(var(--mdw-color__outline));
}
#outline[hovered] {
  color: rgb(var(--mdw-color__on-surface));
}
#outline[focused] {
  color: rgb(var(--mdw-ink));
}
.outline-section::before,
.outline-section::after {
  max-inline-size: none;
}
.outline-left {
  inline-size: 12px;
  grid-column: 1;
  flex: none;
  flex: none;
}
.outline-right {
  grid-column: 3;
}
#gap {
  position: relative;
  grid-column: 2;
  font: var(--mdw-typescale__body-small__font);
  letter-spacing: var(--mdw-typescale__body-small__letter-spacing);
  transition-duration: inherit;
  transition-property: padding;
  transition-timing-function: inherit;
}
#gap-label {
  padding-inline: 4px;
  color: transparent;
}
#gap::after {
  content: "";
  position: absolute;
  inset: 0;
  border-block-end: solid 1px currentColor;
}
#gap[focused]::after {
  border-block-end-width: 2px;
}
#gap-slot {
  position: absolute;
  inset: 0;
}
#gap-slot::before,
#gap-slot::after {
  content: "";
  position: absolute;
  inset: 0;
  border-block-start: solid 1px currentColor;
  transition: transform 200ms;
  will-change: transform;
}
#gap-slot[focused]::before,
#gap-slot[focused]::after {
  border-block-start-width: 2px;
}
@supports (-webkit-mask-box-image: none) {
  #outline[focused] {
    filter: drop-shadow(1px 0px 0px currentColor) drop-shadow(0px 1px 0px currentColor) drop-shadow(-1px 0px 0px currentColor) drop-shadow(0px -1px 0px currentColor);
  }
  #outline::before {
    content: "";
    position: absolute;
    inset: 0;
    grid-column: 1 / 1;
    margin-inline-end: -0.99px;
    border: none;
    background-color: currentColor;
    -webkit-mask-box-image: var(--mdw-shape__mask-image__edges) 8 fill / auto stretch;
    -webkit-mask-box-image-width: auto 0 auto auto;
  }
  #outline::after {
    grid-column: 3;
    margin-inline-start: -0.99px;
    -webkit-mask-box-image-width: auto auto auto 0;
  }
  .outline-section {
    border: none;
  }
  #gap::after {
    border: none;
    background-color: currentColor;
    -webkit-mask-box-image: var(--mdw-shape__mask-image__edges) 8 fill / auto stretch;
    -webkit-mask-box-image-width: 0 0 auto 0;
  }
  #gap-slot::before,
  #gap-slot::after {
    border: none;
    background-color: currentColor;
    -webkit-mask-box-image: var(--mdw-shape__mask-image__edges) 8 fill / auto stretch;
    -webkit-mask-box-image-width: auto 0 0 0;
  }
}
#gap-slot::before {
  margin-inline-end: -0.99px;
  transform: var(--gap-transform, scaleX(0.5));
  transform-origin: 0 0;
}
#gap-slot::after {
  margin-inline-start: -0.99px;
  transform: var(--gap-transform, scaleX(0.5));
  transform-origin: 100% 0;
}
#gap:is([focused], [populated]) {
  --gap-transform: scaleX(0);
}
#gap:empty {
  padding: 0;
}
#label[label][filled] {
  align-items: flex-start;
}
:host([filled]) {
  --mdw-shape__size__bottom-start-size: 0px;
  --mdw-shape__size__bottom-end-size: 0px;
}
:host([dense]) {
  --mdw-text-field__ratio: 0.75;
}
:host([filled][dense]) {
  --mdw-text-field__ratio: 0.5;
}
:host(:is([filled][label])) {
  --control__margin-top: calc((var(--mdw-text-field__ratio) * 8px) + var(--mdw-typescale__body-small__line-height));
  --control__padding-top: 0px;
  --control__padding-bottom: calc(var(--mdw-text-field__ratio) * 4px);
  --control__margin-bottom: calc(var(--mdw-text-field__ratio) * 4px);
}
#supporting {
  min-block-size: var(--mdw-typescale__body-small__line-height);
  margin-block-start: 4px;
  margin-inline: 16px;
  font-weight: var(--mdw-typescale__body-small__font-weight);
  font-size: var(--mdw-typescale__body-small__font-size);
  line-height: var(--mdw-typescale__body-small__line-height);
  font-family: var(--mdw-typescale__body-small__font-family);
  letter-spacing: var(--mdw-typescale__body-small__letter-spacing);
}
#control[errored] {
  caret-color: rgb(var(--mdw-color__error));
}
#control[errored]::selection {
  background-color: rgb(var(--mdw-color__on-error-container));
}
:is(#indicator, #label-text, #supporting, #outline)[errored] {
  color: rgb(var(--mdw-color__error));
}
:is(#indicator, #label-text, #supporting, #outline)[errored]:where([hovered]) {
  color: rgb(var(--mdw-color__on-error-container));
}
:is(#indicator, #label-text, #supporting, #outline)[errored]:where([focused]) {
  color: rgb(var(--mdw-color__error));
}
#label[disabled],
#label[disabled] #control {
  cursor: not-allowed;
}
#outline[disabled] {
  color: rgba(var(--mdw-color__outline), 0.12);
}
#label-text[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#supporting[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
.inline[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#label[disabled] {
  background-color: rgba(var(--mdw-color__on-surface), calc(0.04));
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#indicator[disabled] {
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
#label[disabled][outlined] {
  background-color: transparent;
}

/* components/Layout.css */
:host {
  --mdw-layout__x: normal;
  --mdw-layout__y: normal;
  display: flex;
  align-items: var(--mdw-layout__y);
  justify-content: var(--mdw-layout__x);
  box-sizing: border-box;
}
:host([column]) {
  align-items: var(--mdw-layout__x);
  flex-direction: column;
  justify-content: var(--mdw-layout__y);
}
:host(:is([x="start"], [x="flex-start"])) {
  --mdw-layout__x: flex-start;
}
:host(:is([x="end"], [x="flex-end"])) {
  --mdw-layout__x: flex-end;
}
:host([x="center"]) {
  --mdw-layout__x: center;
}
:host(:is([x="between"], [x="space-between"])) {
  --mdw-layout__x: space-between;
}
:host(:is([x="around"], [x="space-around"])) {
  --mdw-layout__x: space-around;
}
:host(:is([x="evenly"], [x="space-evenly"])) {
  --mdw-layout__x: space-evenly;
}
:host([x="stretch"]) {
  --mdw-layout__x: stretch;
}
:host(:is([y="start"], [y="flex-start"])) {
  --mdw-layout__y: flex-start;
}
:host(:is([y="end"], [y="flex-end"])) {
  --mdw-layout__y: flex-end;
}
:host([y="center"]) {
  --mdw-layout__y: center;
}
:host(:is([y="between"], [y="space-between"])) {
  --mdw-layout__y: space-between;
}
:host(:is([y="around"], [y="space-around"])) {
  --mdw-layout__y: space-around;
}
:host(:is([y="evenly"], [y="space-evenly"])) {
  --mdw-layout__y: space-evenly;
}
:host([y="stretch"]) {
  -y: stretch;
}
:host([wrap]) {
  flex-wrap: wrap;
}
:host([wrap="reverse"]) {
  flex-wrap: wrap-reverse;
}
:host([gap]) {
  gap: var(--mdw-layout__gap);
}

/* components/List.css */
:host {
  display: flex;
  flex-direction: column;
  padding-block: 8px;
}
:host(:focus) {
  outline: 1px solid red;
}

/* components/ListItem.css */
:host {
  --mdw-shape__size: 0px;
  display: block;
}
:host([href]) {
  cursor: pointer;
}
#anchor {
  display: flex;
  align-items: center;
  min-block-size: 56px;
  border: none;
  padding-inline-end: 8px;
  outline: none;
  color: inherit;
  text-decoration: none;
}
#content {
  display: flex;
  align-items: flex-start;
  flex-direction: column;
  justify-content: center;
  flex: 1;
  padding-inline: 16px;
}
#icon {
  font-size: 18px;
}
#trailing-icon {
  font-size: 24px;
}
.leading {
  order: -1;
  display: block;
  margin-block: 12px;
  margin-inline-start: 16px;
}
#headline {
  padding-block-start: 12px;
}
#supporting {
  padding-block-end: 12px;
}
#divider {
  position: absolute;
  inset-block-end: 0;
  display: block;
  color: rgb(var(--mdw-color__surface-variant));
}
:host([divider="inset"]) #divider {
  padding-inline: 16px 24px;
}
:host(:is([lines="2"], [supporting])) {
  min-block-size: 72px;
}
:host(:is([lines="3"])) {
  align-items: flex-start;
  min-block-size: 88px;
}
.text {
  display: block;
  overflow-x: hidden;
  overflow-y: hidden;
  max-block-size: var(--mdw-type__line-height);
  pointer-events: none;
  text-align: start;
  text-overflow: ellipsis;
  text-transform: none;
  white-space: normal;
  word-break: break-word;
}
#supporting-text {
  max-block-size: calc(var(--mdw-type__line-height) * 2);
}
:host([lines="2"]) #supporting-text {
  max-block-size: calc(var(--mdw-type__line-height) * 1);
}
@supports (-webkit-line-clamp:1) {
  .text {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
    max-block-size: none;
  }
  #supporting-text {
    -webkit-line-clamp: 2;
    max-block-size: none;
  }
  :host([lines="2"]) #supporting-text {
    -webkit-line-clamp: 1;
    max-block-size: none;
  }
}
#avatar {
  display: flex;
  align-items: center;
  justify-content: center;
  block-size: 40px;
  inline-size: 40px;
  border-radius: 50%;
}
#img {
  block-size: 56px;
  max-block-size: 56px;
  inline-size: 56px;
  max-inline-size: 56px;
  margin-block: 8px;
  object-fit: cover;
  object-position: center center;
}
#trailing {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
:host([video]) #img {
  block-size: 64px;
  max-block-size: 64px;
  inline-size: 114px;
  max-inline-size: 114px;
  margin-block: 12px;
  margin-inline-start: 0;
}
.trailing,
:host([checkbox="trailing"]) #checkbox,
:host([radio="trailing"]) #radio {
  order: 1;
  margin-block: 12px;
  margin-inline-start: 0;
  margin-inline-end: 16px;
}
#anchor[disabled] {
  opacity: 0.38;
  color: rgb(var(--mdw-color__on-surface));
}

/* components/ListSelect.css */
:host(:disabled) {
  cursor: not-allowed;
  pointer-events: none;
}
:host([internals-disabled]) {
  cursor: not-allowed;
  pointer-events: none;
}

/* components/Menu.css */
:host {
  --mdw-menu__transform-origin-inline-start: left;
  --mdw-menu__transform-origin-inline-end: right;
  --mdw-menu__transform-origin-x: var(--mdw-menu__transform-origin-inline-start);
  --mdw-menu__transform-origin-y: top;
  --mdw-menu__inline-base: 56px;
  --mdw-menu__size: 2;
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__on-surface);
  position: absolute;
  inset-block: 100% auto;
  inset-inline: auto 0;
  display: block;
  -ms-overflow-style: none;
  overscroll-behavior: none;
  overscroll-behavior: contain;
  scrollbar-width: none;
  pointer-events: none;
  transform-origin: var(--mdw-menu__transform-origin-x) var(--mdw-menu__transform-origin-y);
  transition-duration: motion.$fadeOutDuration;
  transition-property: none;
  transition-timing-function: motion.$decelerateEasing;
}
:host(::after) {
  content: "";
  display: block;
  block-size: 200%;
  inline-size: 200%;
}
:host(::-webkit-scrollbar) {
  display: none;
}
dialog {
  position: fixed;
  inset: 0;
  box-sizing: border-box;
  block-size: 100%;
  max-block-size: none;
  inline-size: 100%;
  max-inline-size: none;
  margin: 0;
  border: none;
  padding: 0;
  opacity: 0;
  visibility: hidden;
  z-index: 24;
  background-color: transparent;
  transition: none;
  transition-property: opacity;
  will-change: opacity;
}
dialog::backdrop {
  display: none;
}
dialog[aria-hidden=false],
dialog:modal {
  --mdw-dialog__scrim__visibility: visible;
  display: block;
  pointer-events: none;
  opacity: 1;
  visibility: visible;
  transition-duration: var(--mdw-dialog__fade-in-duration);
  transition-property: opacity;
  transition-timing-function: var(--mdw-dialog__deceleration-easing);
}
#scrim {
  position: fixed;
  inset: 0;
  overflow-y: scroll;
  overscroll-behavior: none;
  overscroll-behavior: contain;
  scrollbar-width: none;
  block-size: 100%;
  inline-size: 100%;
  cursor: default;
  pointer-events: auto;
  -webkit-tap-highlight-color: transparent;
  visibility: hidden;
  z-index: 0;
}
form {
  display: contents;
}
#scrim::-webkit-scrollbar {
  display: none;
}
#scrim::after {
  content: "";
  display: block;
  block-size: 200%;
  inline-size: 200%;
}
#surface {
  --mdw-shape__size: var(--mdw-shape__extra-small);
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__2);
  --mdw-elevation__filter__resting: var(--mdw-elevation__filter__2);
  position: relative;
  display: inline-flex;
  inline-size: calc(var(--mdw-menu__size) * var(--mdw-menu__inline-base));
  min-inline-size: calc(var(--mdw-menu__inline-base) * 2);
  max-inline-size: 100vw;
  flex: 1;
  pointer-events: auto;
  will-change: inset-block-start, inset-inline-start;
}
#surface::part(shape) {
  display: inline-flex;
  align-items: stretch;
  flex-direction: column;
  overflow-y: auto;
  overscroll-behavior: none;
  overscroll-behavior: contain;
  padding-block: 8px;
}
:host([modal]) #scrim {
  visibility: visible;
}

/* components/MenuItem.css */
:host {
  cursor: pointer;
  font: var(--mdw-typescale__label-large__font);
  letter-spacing: var(--mdw-typescale__label-large__letter-spacing);
  white-space: nowrap;
}
#anchor {
  display: flex;
  align-items: center;
  min-block-size: 48px;
  min-block-size: 48px;
  padding: 0;
  white-space: nowrap;
}
#content {
  padding-inline: 12px;
}
#icon {
  transition-duration: 100ms;
  transition-property: opacity;
  will-change: opacity;
}
.leading {
  margin: 0;
  margin-inline-start: 12px;
}
.trailing {
  margin-block: 0;
  margin-inline-end: 12px;
}
#trailing,
#icon {
  color: rgb(var(--mdw-color__on-surface-variant));
}
#selection {
  opacity: 0;
  font-size: 18px;
}
#selection.trailing {
  font-size: 24px;
}
#selection[selected] {
  opacity: 1;
}
#label[selected] #icon {
  opacity: 1;
}
:host([disabled]) {
  cursor: not-allowed;
}

/* components/Nav.css */
:host {
  --mdw-elevation__opacity__resting: var(--mdw-elevation__opacity__2);
  --mdw-bg: var(--mdw-color__surface);
  --mdw-ink: var(--mdw-color__on-surface);
  pointer-events: none;
  z-index: 2;
  font: var(--mdw-typescale__label-medium__font);
  letter-spacing: var(--mdw-typescale__label-medium__letter-spacing);
}
:host([color]:not([color|="surface"])) {
  --mdw-elevation__opacity__resting: 0;
}
#shape {
  pointer-events: auto;
}

/* components/NavItem.css */
:host {
  --mdw-badge__scale: 0;
  --mdw-shape__size: var(--mdw-shape__full);
  position: relative;
  display: grid;
  align-content: center;
  align-items: center;
  grid: auto-flow minmax(20px, min-content) / auto;
  grid-template: "a" minmax(32px, 1fr) / 56px;
  justify-items: center;
  row-gap: 4px;
  box-sizing: content-box;
  box-sizing: border-box;
  min-block-size: 56px;
  padding-inline: 0;
  cursor: pointer;
  user-select: none;
  color: rgb(var(--mdw-color__on-surface-variant));
}
:host(:not([color])) {
  --mdw-ink: var(--mdw-color__on-secondary-container);
  --mdw-bg: var(--mdw-color__secondary-container);
}
:host([color]) {
  background-color: transparent;
  color: inherit;
}
#slot {
  grid-row: 2;
  color: inherit;
}
a {
  position: inherit;
  display: var(--mdw-nav-item__anchor__display, contents);
  align-items: center;
  flex-direction: column;
  grid-area: b;
  justify-content: center;
  flex: 1;
  cursor: inherit;
  outline: none;
  opacity: var(--mdw-nav-item__anchor__opacity, 1);
  transform: translateY(var(--mdw-nav-item__offset-y, 0));
  color: inherit;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  font-family: inherit;
  letter-spacing: inherit;
  text-decoration: inherit;
  transition:
    opacity,
    color,
    transform 200ms;
  will-change: opacity, transform;
}
#shape {
  position: absolute;
  inset: 0;
  display: flex;
  grid-area: var(--mdw-nav-item__indicator__grid-area, a);
  transform: translateY(var(--mdw-nav-item__offset-y, 0));
  z-index: 0;
  background-color: transparent;
  transition: transform 200ms;
  will-change: transform;
}
#icon {
  --mdw-icon__size: 24px;
  --mdw-icon__font-variation-settings: "FILL" 0;
  position: relative;
  align-self: center;
  grid-area: a;
  transform: translateY(var(--mdw-nav-item__offset-y, 0));
  z-index: 3;
  transition: transform 200ms;
  will-change: transform;
}
#state {
  z-index: 2;
}
#badge {
  position: var(--mdw-nav-item__badge__position, absolute);
  inset-block-start: 50%;
  inset-inline-start: 50%;
  grid-area: var(--mdw-nav-item__badge__grid-area, a);
  transform: var(--mdw-nav-item__badge__transform, translateY(-50%) translateX(4px) translateY(-8px) translateY(var(--mdw-nav-item__offset-y, 0)) scale(var(--mdw-badge__scale)));
  z-index: 4;
  transition: transform 200ms;
  will-change: transform;
}
:host([badge]) {
  --mdw-badge__scale: 1;
}
#state,
#ripple {
  color: rgb(var(--mdw-bg));
}
#ripple-container {
  z-index: 1;
}
#ripple {
  opacity: 1;
}
:host([active]) #shape {
  color: rgb(var(--mdw-ink));
}
:host([active]) #icon {
  --mdw-icon__font-variation-settings: "FILL" 1;
  color: rgb(var(--mdw-ink));
}
:host([active]) #slot {
  color: inherit;
}
:host(:is([show-label="never"], [show-label="active"]:not([active]))) {
  --mdw-nav-item__anchor__opacity: 0;
  --mdw-nav-item__offset-y: 12px;
}

/* components/NavBar.css */
:host {
  position: sticky;
  inset-block-end: 0;
  order: 1;
  overflow: hidden;
  flex-shrink: 0;
  box-shadow: none;
}
#shape {
  display: grid;
  align-content: flex-start;
  align-items: flex-start;
  gap: 8px;
  grid-auto-columns: minmax(48px, 1fr);
  grid-auto-flow: column;
  box-sizing: border-box;
  min-block-size: 80px;
  inline-size: 100%;
  transform: translateY(0);
  text-align: center;
  will-change: transform;
}
#slot::slotted(mdw-nav-item) {
  --mdw-nav-item__anchor__display: block;
  grid: auto-flow auto / auto;
  grid-template: "x a y" 32px "b b b" minmax(16px, min-content) / auto 64px auto;
  padding-block: 12px 4px;
}

/* components/NavDrawer.css */
:host([open]) {
  --mdw-container__elevation__opacity: var(--mdw-container__elevation__opacity__0);
  --mdw-shape__size: var(--mdw-shape__large, 16px);
  --mdw-shape__size__top-start-size: 0px;
  --mdw-shape__size__bottom-start-size: 0px;
  grid-template-rows: min-content;
  grid-template-columns: minmax(360px, min-content);
  min-inline-size: 360px;
  box-shadow: none;
  font: var(--mdw-typescale__label-large__font);
  letter-spacing: var(--mdw-typescale__label-large__letter-spacing);
}
:host([open]) #slot::slotted(mdw-nav-item) {
  --mdw-nav-item__badge__position: static;
  --mdw-nav-item__badge__transform: none;
  --mdw-nav-item__badge__grid-area: c;
  --mdw-nav-item__label__padding-block: 18px;
  --mdw-nav-item__label__padding-inline: 52px 0;
  --mdw-nav-item__anchor__display: block;
  --mdw-nav-item__indicator__grid-area: s1 / s1 / s2 / s2 ;
  align-self: stretch;
  display: grid;
  align-items: center;
  gap: 12px;
  grid-template: "s1 a b c s2" minmax(56px, min-content) / 0 24px 1fr minmax(0, min-content) 12px;
  justify-items: flex-start;
  padding-inline-end: 12px;
}
#shape {
  grid-template-rows: min-content;
}

/* components/NavRail.css */
:host {
  display: inline-block;
}
#shape {
  display: grid;
  align-items: stretch;
  flex-direction: column;
  grid-template-rows: minmax(auto, 1fr) minmax(0, auto) minmax(auto, 1fr);
  grid-template-columns: minmax(80px, auto);
  justify-items: center;
  block-size: 100%;
  min-inline-size: 80px;
  background-color: rgb(var(--mdw-color__surface));
  box-shadow: none;
  text-align: center;
}
:host([align="start"]) #shape {
  grid-template-rows: min-content;
}
:host([align="end"]) #shape {
  grid-template-rows: 1fr;
}
#group {
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 12px;
  overflow-x: hidden;
  overflow-y: auto;
  box-sizing: border-box;
  inline-size: 100%;
  min-inline-size: 56px;
}
#start {
  display: flex;
  align-items: center;
  flex-direction: column;
}

/* components/Progress.css */
:host {
  --mdw-bg: var(--mdw-color__surface-variant);
  --mdw-ink: var(--mdw-color__primary);
  --mdw-progress__opacity__duration: 500ms;
  position: relative;
  display: inline-block;
  overflow: hidden;
  min-block-size: 4px;
  inline-size: 100%;
  opacity: 1;
  background-color: rgb(var(--mdw-bg));
  color: rgb(var(--mdw-ink));
  transition: opacity 500ms 275ms;
}
:host([auto-hide]) {
  will-change: opacity;
}
:host([auto-hide][value="100"]) {
  opacity: 0;
  transition: opacity 1s 1s;
}
:host([value]) #indeterminate {
  display: none;
}
#determinate {
  --previous: 0;
  --value: 0;
}
progress {
  position: absolute;
  inset: 0;
  box-sizing: border-box;
  block-size: 100%;
  inline-size: 100%;
  border: none;
  -moz-appearance: none;
  appearance: none;
  opacity: 0;
  transform: scaleX(var(--value, 0));
  transform-origin: 0 0;
  background-color: currentColor;
  color: inherit;
  transition: transform 275ms, opacity var(--mdw-progress__opacity__duration);
  will-change: transform, opacity;
}
progress::-webkit-progress-bar {
  display: none;
}
progress::-moz-progress-bar {
  display: none;
  block-size: 0;
}
progress[value] {
  opacity: 1;
  transform: scaleX(var(--value, 0));
}

/* components/ProgressCircle.css */
:host {
  --mdw-progress__circle__timing: cubic-bezier(0.4, 0.0, 0.2, 1);
  --mdw-progress__circle__margin: 4px;
  --mdw-progress__circle__duration: 5400ms;
  --mdw-progress__circle__duration__expand: 667ms;
  --mdw-progress__circle__duration__collapse: 667ms;
  --mdw-progress__circle__duration__fade-in: 333ms;
  --mdw-progress__circle__duration__complete-end: 333ms;
}
@media (prefers-reduced-motion) {
  :host {
    --mdw-progress__circle__duration: 54000ms;
  }
}
#circle {
  --startA: min(0.5, var(--previous));
  --endA: min(0.5, var(--value));
  --travelA: max( calc(var(--startA) - var(--endA)), calc(var(--endA) - var(--startA)) );
  --delayA: max(0, calc(var(--previous) - 0.5));
  --startB: max(0, calc(var(--previous) - 0.5));
  --endB: max(0, calc(var(--value) - 0.5));
  --travelB: max( calc(var(--startB) - var(--endB)), calc(var(--endB) - var(--startB)) );
  --delayB: max(0, 0.5 - calc(var(--previous)));
  position: absolute;
  inset: 0;
}
:host([circle]) {
  block-size: 48px;
  inline-size: 48px;
}
:host([circle]:not([color])) {
  background-color: transparent;
}
:host([circle]) .line {
  display: none;
}
:host([circle]) progress {
  visibility: hidden;
}
.semi {
  position: absolute;
  inset: var(--mdw-progress__circle__margin);
  overflow: hidden;
  box-sizing: border-box;
}
#semi1 {
  inset-inline-start: 50%;
}
#semi2 {
  inset-inline-end: 50%;
}
.semi::after {
  content: "";
  position: absolute;
  inset: 0;
  box-sizing: border-box;
  border: solid currentcolor 4px;
  transform: rotate(var(--rotation));
  background-color: transparent;
  border-radius: 50%;
  transition: transform 400ms;
  transition-timing-function: linear;
}
#semi1::after {
  --rotation: min(180deg, calc(var(--value) * 360deg));
  inset-inline-start: -100%;
  clip-path: inset(0 50% 0 0);
  transition-delay: calc(var(--delayA) * var(--mdw-progress__circle__duration__expand));
  transition-duration: calc(var(--travelA) * var(--mdw-progress__circle__duration__expand));
}
#semi2::after {
  --rotation: max(0deg, calc(var(--value) * 360deg - 180deg));
  inset-inline-end: -100%;
  clip-path: inset(0 0 0 50%);
  transition-delay: calc(var(--delayB) * var(--mdw-progress__circle__duration__expand));
  transition-duration: calc(var(--travelB) * var(--mdw-progress__circle__duration__expand));
}
#indeterminate-circle {
  position: absolute;
  inset: 0;
  display: block;
  animation: rotate-cw calc(var(--mdw-progress__circle__duration) / 4) linear infinite;
}
.arc {
  position: absolute;
  inset: var(--mdw-progress__circle__margin);
  overflow: hidden;
  box-sizing: border-box;
  animation: rotate-jump var(--mdw-progress__circle__duration) steps(1, end) infinite;
}
.arc::after {
  content: "";
  position: absolute;
  inset: 0;
  box-sizing: border-box;
  border: solid currentcolor 4px;
  background-color: transparent;
  border-radius: 50%;
  animation: grow-shrink calc(var(--mdw-progress__circle__duration) / 4) var(--mdw-progress__circle__timing) infinite;
}
#arc2 {
  inset-block-end: 50%;
  inset-inline-start: 50%;
  transform-origin: 0 100%;
}
#arc3 {
  inset-block-start: 50%;
  inset-inline-end: 50%;
  transform-origin: 100% 0;
}
#arc4 {
  inset-block-start: 50%;
  inset-inline-start: 50%;
  transform-origin: 0 0;
}
#arc2:after {
  inset-block-end: -100%;
  inset-inline-start: -100%;
  clip-path: polygon(0% 0%, 50% 0%, 50% 50%, 100% 50%, 100% 100%, 0% 100%);
}
#arc3:after {
  inset-block-start: -100%;
  inset-inline-end: -100%;
  clip-path: inset(0 50% 50% 0);
}
#arc4:after {
  inset-block-start: -100%;
  inset-inline-start: -100%;
  clip-path: inset(0 50% 0 0);
}
@keyframes rotate-cw {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes rotate-jump {
  0% {
    transform: scaleX(1) rotate(0deg);
  }
  12.5% {
    transform: scaleX(-1) rotate(-270deg);
  }
  25% {
    transform: scaleX(1) rotate(270deg);
  }
  37.5% {
    transform: scaleX(-1) rotate(-180deg);
  }
  50% {
    transform: scaleX(1) rotate(180deg);
  }
  62.5% {
    transform: scaleX(-1) rotate(-90deg);
  }
  75% {
    transform: scaleX(1) rotate(90deg);
  }
  87.5% {
    transform: scaleX(-1) rotate(0deg);
  }
  to {
    transform: scaleX(1) rotate(0deg);
  }
}
@keyframes grow-shrink {
  from {
    transform: rotate(calc(0.01 * 360deg));
  }
  50% {
    transform: rotate(calc(0.73 * 360deg));
  }
  to {
    transform: rotate(calc(0.01 * 360deg));
  }
}

/* components/ProgressLine.css */
:host {
  --mdw-progress__line1-head__timing: cubic-bezier(0.2, 0.8, 0, 1.0);
  --mdw-progress__line1-tail__timing: cubic-bezier(0.4, 0.0, 1.0, 1.0);
  --mdw-progress__line2-head__timing: cubic-bezier(0.0, 0.65, 0, 1.0);
  --mdw-progress__line2-tail__timing: cubic-bezier(0.1, 0.45, 0, 1.0);
  --mdw-progress__line__duration: 1800ms;
}
@media (prefers-reduced-motion) {
  :host {
    --mdw-progress__line__duration: 18000ms ;
  }
}
.line {
  opacity: 1;
  transition: opacity var(--mdw-progress__opacity__duration);
  will-change: opacity;
}
.line,
.line::after {
  position: absolute;
  inset: 0;
  overflow: hidden;
  animation-duration: var(--mdw-progress__line__duration);
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
}
.line::after {
  content: "";
  background-color: currentColor;
  animation: inherit;
  will-change: transform;
}
#line1 {
  animation-name: l1h;
}
#line2 {
  animation-name: l2h;
}
#line1::after {
  animation-name: l1t;
}
#line2::after {
  animation-name: l2t;
}
:host([value]) .line {
  opacity: 0;
  visibility: hidden;
  transition: opacity var(--mdw-progress__opacity__duration), visibility 1ms var(--mdw-progress__opacity__duration);
}
@keyframes l1h {
  0% {
    transform: translateX(0%);
  }
  70.4% {
    transform: translateX(0%);
    animation-timing-function: var(--mdw-progress__line1-head__timing);
  }
  100% {
    transform: translateX(100%);
  }
}
@keyframes l1t {
  0% {
    transform: translateX(-100%);
  }
  55.6% {
    transform: translateX(-100%);
    animation-timing-function: var(--mdw-progress__line1-tail__timing);
  }
  87.1% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(0%);
  }
}
@keyframes l2h {
  0% {
    transform: translateX(0%);
  }
  18.5% {
    transform: translateX(0%);
    animation-timing-function: var(--mdw-progress__line2-head__timing);
  }
  65.72% {
    transform: translateX(100%);
  }
  to {
    transform: translateX(100%);
  }
}
@keyframes l2t {
  0% {
    transform: translateX(-100%);
    animation-timing-function: var(--mdw-progress__line2-tail__timing);
  }
  41.67% {
    transform: translateX(0%);
  }
  to {
    transform: translateX(0%);
  }
}

/* components/RadioIcon.css */
:host {
  --disabled-opacity: 0.38;
  --mdw-ink: rgb(var(--mdw-color__primary));
  --color: rgb(var(--mdw-color__on-surface-variant));
  position: relative;
  display: inline-block;
  align-items: center;
  justify-content: center;
  block-size: 20px;
  inline-size: 20px;
  background-color: transparent;
  transition: opacity 100ms;
}
.shape {
  --mdw-shape__size: var(--mdw-shape__full);
}
#outline {
  filter: drop-shadow(1px 0px 0px var(--color)) drop-shadow(0px 1px 0px var(--color)) drop-shadow(-1px 0px 0px var(--color)) drop-shadow(0px -1px 0px var(--color));
  color: var(--color);
  will-change: filter, color;
}
#inner-shape {
  position: absolute;
  inset: 0;
  transform: scale(0);
  background-color: var(--color);
  transition: transform 100ms, background-color 100ms;
}
:host([hovered]) {
  --color: rgb(var(--mdw-color__on-surface));
}
:host([focused]) {
  --color: rgb(var(--mdw-color__on-surface));
}
:host([selected]) {
  --color: rgb(var(--mdw-ink));
}
:host([errored]) {
  --color: rgb(var(--mdw-color__error));
}
:host([disabled]) {
  --color: rgba(var(--mdw-color__on-surface));
  opacity: var(--disabled-opacity);
}
#inner-shape[selected] {
  transform: scale(0.5);
}

/* components/Radio.css */
:host {
  --mdw-ink: var(--mdw-color__primary);
  --mdw-radio__size: 20px;
  --mdw-radio__state-size: 40px;
  --mdw-radio__margin: calc((var(--mdw-radio__state-size) - var(--mdw-radio__size)) / 2);
  --mdw-shape__size: var(--mdw-shape__full);
  gap: var(--mdw-radio__gap, calc(var(--mdw-radio__margin)));
  direction: var(--mdw-radio__direction, initial);
}
#label {
  display: inline-grid;
  align-items: center;
  gap: inherit;
  grid-auto-flow: column;
  grid-template-rows: minmax(var(--mdw-radio__size), min-content);
  grid-template-columns: var(--mdw-radio__size);
  cursor: pointer;
  transition: none 100ms cubic-bezier(0.4, 0.0, 1, 1);
}
#control {
  line-height: 0;
}
#state {
  pointer-events: auto;
}
#state,
#ripple-container {
  inset-block-start: 50%;
  inset-inline-start: 50%;
  block-size: var(--mdw-radio__state-size);
  inline-size: var(--mdw-radio__state-size);
  transform: translateX(-50%) translateY(-50%);
  border-radius: 50%;
}
#label[disabled] {
  cursor: not-allowed;
  opacity: 0.38;
}
#target {
  position: relative;
  display: inline-flex;
  grid-column: 1 / 1;
  color: rgb(var(--mdw-color__on-surface));
}
#target[selected] {
  color: rgb(var(--mdw-ink));
}
#target[disabled] {
  color: rgb(var(--mdw-color__on-surface));
}
#target[errored] {
  color: rgb(var(--mdw-color__error));
}
#icon {
  --mdw-ink: inherit;
  --disabled-opacity: 1;
}

/* components/Select.css */
#slot {
  display: none;
}
#label {
  padding: 0;
  cursor: pointer;
}
#label[disabled] {
  cursor: not-allowed;
}
#icon {
  position: absolute;
  padding-inline-start: 12px;
}
#trailing-icon {
  position: absolute;
  inset-inline-end: 16px;
}
#control {
  padding-inline-start: 16px;
  padding-inline-end: calc(16px + 24px + 16px);
  accent-color: rgb(var(--mdw-ink));
  cursor: inherit;
}
:host([icon]) #control {
  margin-inline-start: calc(16px + 24px);
  padding-inline-start: 12px;
}
option {
  accent-color: rgb(var(--mdw-ink));
  min-block-size: var(--mdw-typescale__label-large__line-height);
  appearance: none;
  background-color: rgb(var(--mdw-color__surface)) !important;
  border-radius: 0;
  color: rgb(var(--mdw-color__on-surface)) !important;
  font: var(--mdw-typescale__label-large__font);
  letter-spacing: var(--mdw-typescale__label-large__letter-spacing);
}

/* components/SegmentedButton.css */
:host {
  --mdw-shape__size: var(--mdw-shape__full);
  --mdw-button__icon__font-variation-settings: "FILL" 0;
  --mdw-button__outline__size: 1px;
  --mdw-ink: var(--mdw-color__on-surface);
  color: rgb(var(--mdw-ink));
}
:host([inner-segmented-button]) {
  --mdw-shape__size: 0px;
  --mdw-shape__rounded: 1;
  --mdw-shape__mask-border-source: none;
}
#outline {
  inset-inline-end: calc(-1 * var(--mdw-button__outline__size));
}
:host([shape-end]) #outline {
  inset-inline-end: 0;
}
:host(:focus) {
  --mdw-button__outline__rgb: var(--mdw-color__outline);
}
#label[selected] {
  --mdw-ink: inherit;
  --mdw-bg: inherit;
  background-color: rgb(var(--mdw-bg));
}
#label[selected] #icon {
  --mdw-icon__opacity: 0;
  inline-size: 18px;
}
#check-icon {
  --mdw-icon__font-variation-settings: "FILL" 1;
  --mdw-icon__size: 18px;
  --mdw-icon__opacity: 0;
  position: absolute;
  inset-inline-start: var(--mdw-button__icon__margin-inline-start);
  order: -1;
  display: var(--mdw-button__icon__display);
  overflow: visible;
  margin: 0;
}
#check-icon[selected] {
  --mdw-icon__size: 18px;
  --mdw-icon__opacity: 1;
}
#label[disabled][selected] {
  background-color: rgba(var(--mdw-color__on-surface), 0.12);
}

/* components/SegmentedButtonGroup.css */
:host {
  --mdw-bg: var(--mdw-color__secondary-container);
  --mdw-ink: var(--mdw-color__on-secondary-container);
  display: flex;
}
:host([color]) {
  background-color: transparent;
}

/* components/Slider.css */
:host {
  --mdw-ink: var(--mdw-color__on-primary);
  --mdw-bg: var(--mdw-color__primary);
  display: block;
  min-block-size: 40px;
  min-inline-size: 88px;
  background-color: transparent;
  direction: var(--mdw-radio__direction, initial);
}
:host,
:host([color]) {
  background-color: transparent;
}
#label {
  position: absolute;
  inset: 0;
  display: block;
  cursor: pointer;
  color: rgb(var(--mdw-bg));
}
#control {
  overflow: visible;
  block-size: 40px;
  appearance: none;
  cursor: inherit;
  background-color: transparent;
  color: inherit;
}
#control::-webkit-slider-runnable-track {
  margin-inline: -10px;
  appearance: none;
  background-color: transparent;
}
@supports (-moz-appearance:none) {
  #control {
    inset-inline: -10px;
    inline-size: calc(100% + 20px);
  }
}
#control::-moz-range-track {
  inline-size: calc(100% + 20px) !important;
  appearance: none;
}
#control::-webkit-slider-thumb {
  display: block;
  block-size: 20px;
  inline-size: 20px;
  -webkit-appearance: none;
  cursor: inherit;
  transform: scale(2);
  background-color: transparent;
  border-radius: 50%;
  box-shadow: none;
}
#control::-moz-range-thumb {
  display: block;
  box-sizing: content-box;
  block-size: 20px;
  inline-size: 20px;
  border: none;
  appearance: none;
  cursor: inherit;
  transform: scale(2);
  background-color: transparent;
  border-radius: 50%;
}
#track {
  --value: 0.5;
  position: absolute;
  inset-block-start: 50%;
  inset-inline: 0;
  block-size: 4px;
  margin-block-start: -2px;
  pointer-events: none;
  user-select: none;
  background-color: rgb(var(--mdw-color__surface-variant));
  border-radius: inherit;
}
#thumb {
  position: absolute;
  inset-block-start: -18px;
  inset-inline-start: -20px;
  display: flex;
  align-items: center;
  justify-content: center;
  block-size: 40px;
  inline-size: 40px;
  pointer-events: none;
  border-radius: 50%;
  overflow: hidden;
  color: rgb(var(--mdw-bg));
}
#thumb::before {
  content: "";
  display: block;
  block-size: 20px;
  inline-size: 20px;
  background-color: currentColor;
  border-radius: 50%;
  transition: background-color 100ms;
}
#ticks::before,
#ticks::after {
  content: "";
  position: absolute;
  inset: 0;
  padding-inline: 10px;
  background-clip: content-box;
  background-image: radial-gradient(circle at center, var(--tick-color) 0, var(--tick-color) 1px, transparent 0);
  background-position: center center;
  background-repeat: repeat-x;
  background-size: 0 100%;
  background-size: calc(100% / var(--ticks, 0)) 2px;
}
#ticks::before {
  --tick-color: rgb(var(--mdw-color__on-surface-variant));
}
#ticks::after {
  --tick-color: rgb(var(--mdw-ink));
  padding-inline-end: calc(100% - (100% * var(--value)) + 10px);
  z-index: 1;
  will-change: padding-inline-end;
}
#track-active {
  position: absolute;
  inset: 0;
  overflow: hidden;
  border-radius: 99px;
}
#track-active::before {
  content: "";
  position: absolute;
  inset: 0;
  transform: scaleX(var(--value));
  transform-origin: 0 0;
  background-color: rgb(var(--mdw-bg));
  will-change: transform;
}
#thumb-anchor {
  position: absolute;
  inset-inline: 0;
  display: flex;
  align-items: flex-start;
  flex-direction: column;
  inline-size: 1%;
  transform: translateX(calc(var(--value) * 100 * 100%));
  transform-origin: 0 0;
  z-index: 24;
  will-change: transform;
}
#thumb-label {
  position: absolute;
  inset-block-end: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: content-box;
  margin-block-end: 6px;
  transform: translateX(-50%) scale(1);
  transform-origin: 50% 100%;
  font-weight: var(--mdw-typescale__label-medium__font-weight);
  line-height: var(--mdw-typescale__label-medium__line-height);
  font-family: var(--mdw-typescale__label-medium__font-family);
  letter-spacing: var(--mdw-typescale__label-medium__letter-spacing);
  transition: transform 200ms;
  will-change: transform;
}
#thumb-label:is([hidden], [text=""]) {
  transform: translateX(-50%) scale(0);
}
#thumb-label::before {
  content: attr(text);
  display: flex;
  align-items: center;
  justify-content: center;
  min-block-size: 28px;
  min-inline-size: 28px;
  z-index: 1;
  background-color: rgb(var(--mdw-bg));
  border-radius: 50%;
  color: rgb(var(--mdw-ink));
}
#thumb-label::after {
  --x-start: 14.6446%;
  --x-end: 85.3554%;
  --y: 70.7106%;
  content: "";
  position: absolute;
  inset: 0;
  inset-block-end: -6px;
  clip-path: polygon(var(--x-start) var(--y), var(--x-end) var(--y), 50% 100%, var(--x-start) var(--y));
  background-color: rgb(var(--mdw-bg));
}
#track[disabled] {
  background-color: rgb(var(--mdw-color__on-surface), calc(0.12 / 0.38));
}
#label[disabled],
#track[disabled] {
  --mdw-bg: var(--mdw-color__on-surface);
  cursor: not-allowed;
  opacity: 0.38;
}

/* components/Snackbar.css */
:host {
  --mdw-shape__size: var(--mdw-shape__small);
  --mdw-container__elevation__opacity: var(--mdw-container__elevation__opacity__3);
  --mdw-bg: var(--mdw-color__inverse-surface);
  --mdw-ink: var(--mdw-color__inverse-on-surface);
  --mdw-type__line-height: var(--mdw-typescale__body-medium__line-height);
  opacity: 0;
  transform: translateY(25%) scaleY(0.25);
  transform-origin: bottom center;
  visibility: hidden;
  z-index: 24;
  font: var(--mdw-typescale__body-medium__font);
  letter-spacing: var(--mdw-typescale__body-medium__letter-spacing);
  transition:
    transform 200ms,
    opacity 200ms,
    visibility 200ms;
}
:host([open]) {
  opacity: 1;
  transform: scale(1);
  visibility: visible;
}
#shape {
  display: flex;
  align-items: center;
  min-block-size: calc(var(--mdw-type__line-height) * 2);
  min-block-size: 2lh;
  padding-inline: 8px 8px;
}
#slot {
  display: block;
  overflow-x: hidden;
  overflow-y: hidden;
  max-block-size: calc(var(--mdw-type__line-height) * 2);
  flex: 1;
  margin-block: 14px;
  padding-inline: 8px;
  text-align: start;
  text-overflow: ellipsis;
  text-transform: none;
  white-space: normal;
  word-break: break-word;
}
@supports (-webkit-line-clamp:1) {
  #slot {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    max-block-size: none;
  }
}
#button {
  flex: none;
}
:host([close]) {
  padding-inline-end: 0;
}
#close {
  align-self: stretch;
  padding-inline: 12px;
}

/* components/Switch.css */
:host {
  --mdw-ink: var(--mdw-color__on-primary);
  --mdw-bg: var(--mdw-color__primary);
  --mdw-shape__size: var(--mdw-shape__full);
  flex-direction: var(--mdw-switch__direction, row);
  gap: var(--mdw-switch__gap, 8px);
}
#label {
  position: relative;
  display: flex;
  align-items: center;
  flex-direction: inherit;
  gap: inherit;
  cursor: pointer;
}
#track {
  position: relative;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  block-size: 32px;
  inline-size: 52px;
}
#track-shape {
  z-index: 0;
  background-color: rgb(var(--mdw-color__surface-variant));
}
#track-shape[selected] {
  background-color: rgb(var(--mdw-bg));
}
#outline {
  filter: drop-shadow(1px 0px 0px currentColor) drop-shadow(0px 1px 0px currentColor) drop-shadow(-1px 0px 0px currentColor) drop-shadow(0px -1px 0px currentColor);
}
#thumb {
  --x: 16px;
  --scale: calc(16/24);
  position: absolute;
  inset-inline-start: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  block-size: 40px;
  inline-size: 40px;
  transform: translateX(calc(var(--mdw-dir, 1) * -50%)) translateX(calc(var(--mdw-dir,1) * var(--x)));
  color: rgb(var(--mdw-color__outline));
}
:dir(rtl) #thumb {
  --mdw-dir: -1;
}
#thumb[selected] {
  --scale: calc(24/24);
  --x: calc(52px - 16px);
  color: rgb(var(--mdw-ink));
}
#thumb[pressed]:not([disabled]) {
  --scale: calc(28/24);
}
#thumb-shape {
  --mdw-shape__size: inherit;
  position: absolute;
  block-size: 24px;
  inline-size: 24px;
  transform: scale(var(--scale));
  z-index: 0;
  background-color: currentColor;
}
#thumb-shape[icon] {
  transform: scale(max(1, var(--scale)));
}
.icon {
  --mdw-icon__size: 16px;
  position: absolute;
  opacity: 0;
  transform: scale(max(1, var(--scale)));
}
.icon:not([src]):empty {
  display: none;
}
#selected-icon {
  color: rgb(var(--mdw-bg));
}
#icon,
#unselected-icon {
  --mdw-icon__font-variation-settings: "FILL" 0;
  opacity: 1;
  color: rgb(var(--mdw-color__surface-variant));
}
#unselected-icon[selected] {
  opacity: 0;
}
#selected-icon[selected] {
  opacity: 1;
}
#icon[selected] {
  --mdw-icon__font-variation-settings: "FILL" 1;
  color: rgb(var(--mdw-bg));
}
#state {
  position: absolute;
  inset-inline-start: 0;
  block-size: 40px;
  inline-size: 40px;
  border-radius: 50%;
}
#label[disabled] {
  --mdw-ink: var(--mdw-color__on-surface);
  --mdw-bg: var(--mdw-color__surface);
  cursor: not-allowed;
  opacity: 0.38;
}
#outline[disabled] {
  color: rgb(var(--mdw-color__on-surface));
}
#thumb[disabled] {
  color: rgb(var(--mdw-color__on-surface));
}
#track-shape[disabled] {
  background-color: rgb(var(--mdw-color__surface-variant));
  opacity: calc(0.12/0.38);
}
#track-shape[disabled][selected] {
  background-color: rgb(var(--mdw-color__on-surface));
}
#outline[selected] {
  color: transparent;
}

/* components/SwitchAnimations.css */
:host {
  --mdw-switch__transition-timing__collapse: cubic-bezier(0.4, 0.0, 1, 1);
  --mdw-switch__transition-duration__collapse: 375ms;
  --mdw-switch__transition-timing__expand: cubic-bezier(0.0, 0.0, 0.2, 1);
  --mdw-switch__transition-duration__expand: 500ms;
  --scale-delay: var(--mdw-switch__transition-duration);
}
#track {
  --mdw-switch__transition-duration: var(--mdw-switch__transition-duration__collapse);
  --mdw-switch__transition-timing: var(--mdw-switch__transition-timing__collapse);
  --mdw-switch__transition-delay__color: calc(var(--mdw-switch__transition-duration) / 2);
  --mdw-switch__transition-delay__translate: calc(var(--mdw-switch__transition-duration) / 2);
  --mdw-switch__transition-delay__scale: calc(var(--mdw-switch__transition-duration) / 2);
  transition-delay: var(--mdw-switch__transition-delay__color);
  transition-duration: calc(var(--mdw-switch__transition-duration) / 2);
  transition-timing-function: var(--mdw-switch__transition-timing);
}
#track-shape {
  transition-delay: var(--mdw-switch__transition-delay__color);
  transition-duration: inherit;
  transition-property: background-color;
  transition-timing-function: inherit;
}
#outline {
  transition-delay: var(--mdw-switch__transition-delay__color);
  transition-duration: inherit;
  transition-property: background-color, color;
  transition-timing-function: inherit;
}
#thumb {
  transition-delay: var(--mdw-switch__transition-delay__translate);
  transition-duration: inherit;
  transition-property: transform;
  transition-timing-function: inherit;
}
#thumb-shape,
.icon {
  transition-delay:
    var(--mdw-switch__transition-delay__scale),
    var(--mdw-switch__transition-delay__color),
    var(--mdw-switch__transition-delay__color);
  transition-duration: inherit;
  transition-property:
    transform,
    background-color,
    color;
  transition-timing-function: inherit;
}
:host(:is([icon], [src], [unselected-icon], [unselected-src])) #track {
  --mdw-switch__transition-delay__translate: 0s;
}
.icon {
  transition-property:
    transform,
    opacity,
    color;
}
#track[selected] {
  --mdw-switch__transition-delay__scale: 0s;
  --mdw-switch__transition-duration: var(--mdw-switch__transition-duration__expand);
  --mdw-switch__transition-timing: var(--mdw-switch__transition-timing__expand);
}
#track[selected][pressed] {
  --mdw-switch__transition-delay__translate: 0s;
}
#track:not([selected]) {
  --mdw-switch__transition-delay__translate: 0s;
}
#track[pressed]:not([selected]) {
  --mdw-switch__transition-delay__scale: 0s;
}

/* components/Tab.css */
:host {
  --mdw-shape__size: 0px;
  --mdw-icon__font-variation-settings: "FILL" 0;
  --mdw-icon__size: 24px;
  --mdw-ink: var(--mdw-color__on-surface-variant);
  display: inline-flex;
  min-inline-size: 64px;
  cursor: pointer;
  color: rgb(var(--mdw-ink));
}
#anchor {
  --mdw-shape__size: 0px;
  --mdw-icon__font-variation-settings: "FILL" 0;
  --mdw-icon__size: 24px;
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  box-sizing: border-box;
  block-size: 100%;
  inline-size: 100%;
  flex: 1;
  padding-block: 6px;
  padding-inline: 12px;
  cursor: pointer;
  outline: none;
  color: rgb(var(--mdw-ink));
  text-decoration: inherit;
}
#icon {
  --mdw-icon__font-variation-settings: inherit;
  padding-block: 4px;
}
#anchor[disabled] {
  cursor: not-allowed;
  background-color: rgba(var(--mdw-color__on-surface), 0.12);
  color: rgba(var(--mdw-color__on-surface), 0.38);
}
:host([active]) {
  --mdw-ink: inherit;
  --mdw-icon__font-variation-settings: "FILL" 1;
}
#slot {
  display: block;
  overflow-x: hidden;
  overflow-y: hidden;
  max-block-size: var(--mdw-typescale__title-small__line-height);
  max-inline-size: 100%;
  cursor: inherit;
  outline: none;
  opacity: var(--mdw-nav-item__anchor__opacity, 1);
  transform: translateY(var(--mdw-nav-item__offset-y, 0));
  color: inherit;
  font: var(--mdw-typescale__title-small__font);
  letter-spacing: var(--mdw-typescale__title-small__letter-spacing);
  text-align: center;
  text-decoration: inherit;
  text-overflow: ellipsis;
  text-transform: none;
  white-space: nowrap;
  word-break: break-word;
  transition:
    opacity,
    color,
    transform 200ms;
  will-change: opacity, transform;
}

/* components/TabList.css */
:host {
  --mdw-ink: var(--mdw-color__primary);
  --mdw-bg: var(--mdw-color__surface);
  position: relative;
  position: sticky;
  inset-block-start: 0;
  inset-inline: 0;
  display: grid;
  align-items: stretch;
  grid-auto-columns: minmax(auto, 1fr);
  grid-auto-flow: column;
  justify-content: space-evenly;
  overflow-y: hidden;
  box-sizing: border-box;
  min-block-size: 48px;
  inline-size: 100%;
  flex: none;
  background: rgb(var(--mdw-bg));
  text-align: center;
  will-change: transform;
}
#indicator {
  --corner: 3;
  --width: 24;
  --offset: 0;
  --visibility: 0;
  --transition-ratio: 1;
  position: absolute;
  inset-block-end: 0;
  inset-inline: 0;
  overflow-y: clip;
  block-size: 3px;
  inline-size: 100%;
  pointer-events: none;
  opacity: 1;
  transform: translateY(calc(100% * (1 - var(--visibility))));
  color: rgb(var(--mdw-color__on-surface));
  transition: transform 200ms;
  will-change: transform;
}
.indicator-piece {
  position: absolute;
  inset-block: 0;
  opacity: 1;
  transform-origin: 0 0;
  z-index: 1;
  background-color: currentColor;
  transition: transform;
  transition-duration: calc(200ms * var(--transition-ratio));
  will-change: transform;
}
#indicator-start {
  inset-inline-start: 0;
  inline-size: calc(2 * 1px * var(--corner));
  border-start-start-radius: calc(1px * var(--corner));
  transform: translateX(var(--offset));
}
#indicator-center {
  --precision: 100;
  position: absolute;
  inset-inline-start: calc(1px * var(--corner));
  inline-size: calc(1px * var(--precision));
  transform: translateX(var(--offset)) scaleX(calc((var(--width) - (2 * var(--corner))) / var(--precision)));
}
#indicator-end {
  position: absolute;
  inset-inline-start: 0;
  inline-size: calc(2 * 1px * var(--corner));
  border-start-end-radius: calc(1px * var(--corner));
  transform: translateX(var(--offset)) translateX(calc(-2px * var(--corner))) translateX(calc(var(--width) * 1px));
}
:host([active]) #indicator {
  --visibility: 1;
  color: rgb(var(--mdw-ink));
}
:host([secondary]) #indicator {
  --corner: 0;
}
:host([scrollable]) {
  grid-auto-columns: max-content;
  justify-content: flex-start;
  overflow-x: auto;
  padding-inline: 48px;
}

/* components/TextArea.css */
:host {
  display: grid;
  grid-auto-flow: row;
  grid-template-rows: minmax(0, 100%);
}
:host(:is([filled][label])) {
  --control__margin-top: calc((var(--mdw-text-field__ratio) * 8px) + var(--mdw-typescale__body-small__line-height));
  --control__padding-top: 0px;
  --control__padding-bottom: calc((var(--mdw-text-field__ratio) * 8px) - 1px);
  --control__margin-bottom: 1px;
}
#label {
  --max-rows: none;
  --line-height: var(--mdw-typescale__body-large__line-height);
  --expected-height: calc((var(--control__margin-top) + var(--control__padding-top) + var(--line-height) + var(--control__padding-bottom) + var(--control__margin-bottom)));
}
@supports ({ width: 1lh }) {
  #label {
    --line-height: 1lh;
  }
}
slot {
  display: none;
}
#label {
  max-block-size: 100%;
  grid-row: 1 / 1;
  padding: 0;
}
#control {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  background-color: rgba(255, 0, 0, 0.20);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  box-sizing: border-box;
  block-size: 100%;
  min-block-size: var(--expected-height);
  max-block-size: inherit;
  inline-size: 100% !important;
  padding-inline: 16px;
}
:host([minrows]) #control {
  min-block-size: calc((var(--min-rows) * var(--line-height)) + var(--control__margin-top) + var(--control__padding-top) + var(--control__padding-bottom) + var(--control__margin-bottom));
}
:host([maxrows]) #control {
  max-block-size: calc((var(--max-rows) * var(--line-height)) + var(--control__margin-top) + var(--control__padding-top) + var(--control__padding-bottom) + var(--control__margin-bottom));
}
#label:is([icon], [input-prefix]) {
  padding-inline-start: 0;
}
#label:is([trailing-icon], [input-suffix]) {
  padding-inline-end: 0;
}
:host(:is([icon], [input-prefix])) #control {
  padding-inline-start: 0;
}
:host(:is([trailing-icon], [input-suffix])) #control {
  padding-inline-end: 0;
}
mdw-icon {
  align-self: flex-start;
  margin-block-start: calc((var(--expected-height) - var(--mdw-icon__size)) / 2);
}
:host([fixed]) #control {
  resize: none;
}

/* typography/Body.css */
:host {
  --mdw-type__font: var(--mdw-typescale__body-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-large__letter-spacing);
}
:host([size="medium"]) {
  --mdw-type__font: var(--mdw-typescale__body-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-medium__letter-spacing);
}
:host([size="small"]) {
  --mdw-type__font: var(--mdw-typescale__body-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__body-small__letter-spacing);
}

/* typography/Headline.css */
:host {
  --mdw-type__font: var(--mdw-typescale__headline-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__headline-large__letter-spacing);
}
:host([size="medium"]) {
  --mdw-type__font: var(--mdw-typescale__headline-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__headline-medium__letter-spacing);
}
:host([size="small"]) {
  --mdw-type__font: var(--mdw-typescale__headline-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__headline-small__letter-spacing);
}

/* typography/Title.css */
:host {
  --mdw-type__font: var(--mdw-typescale__title-large__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__title-large__letter-spacing);
}
:host([size="medium"]) {
  --mdw-type__font: var(--mdw-typescale__title-medium__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__title-medium__letter-spacing);
}
:host([size="small"]) {
  --mdw-type__font: var(--mdw-typescale__title-small__font);
  --mdw-type__letter-spacing: var(--mdw-typescale__title-small__letter-spacing);
}
/*! For license information please see demo.min.css.LEGAL.txt */
/*# sourceMappingURL=demo.min.css.map */
