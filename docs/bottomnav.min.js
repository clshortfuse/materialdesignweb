/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 14);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var crosshairs = {};
var vOffset = 0;
var hOffset = 0;

Object.defineProperty(crosshairs, 'vOffset', {
  enumerable: true,
  configurable: false,
  get: function get() {
    return vOffset;
  },
  set: function set(val) {
    vOffset = val;
    document.getElementById('verticalLineLeft').style.left = val + 'px';
    document.getElementById('verticalLineRight').style.left = val + 'px';
  }
});

Object.defineProperty(crosshairs, 'hOffset', {
  enumerable: true,
  configurable: false,
  get: function get() {
    return hOffset;
  },
  set: function set(val) {
    hOffset = val;
    document.getElementById('horizontalLine').style.top = val + 'px';
  }
});

/**
 * @param {MouseEvent} event
 * @return {void}
 */
function onTemplateImageClick(event) {
  document.getElementById('horizontalLine').style.top = event.clientY + 'px';
  document.getElementById('verticalLineLeft').style.left = event.layerX + 'px';
  document.getElementById('verticalLineRight').style.left = event.clientX + 'px';
}

/** @return {void} */
function setupImageTargets() {
  var targets = document.getElementsByClassName('target');
  for (var i = 0; i < targets.length; i += 1) {
    targets[i].addEventListener('click', onTemplateImageClick);
  }
}

exports.default = setupImageTargets;

/***/ }),
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(15);
module.exports = __webpack_require__(17);


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _targetHandler = __webpack_require__(0);

var _targetHandler2 = _interopRequireDefault(_targetHandler);

var _index = __webpack_require__(16);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var componentMap = new WeakMap();

/** @return {void} */
function initializeMdwComponents() {
  var components = void 0;
  components = document.querySelectorAll('.js .mdw-bottomnav');
  for (var i = 0; i < components.length; i += 1) {
    componentMap.set(components[i], new _index.Bottomnav(components[i]));
  }

  components = document.querySelectorAll('.js .mdw-bottomnav__item');
  for (var _i = 0; _i < components.length; _i += 1) {
    componentMap.set(components[_i], new _index.BottomnavItem(components[_i]));
  }
}

initializeMdwComponents();
(0, _targetHandler2.default)();

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BottomnavItem = function () {
  /**
   * @param {Element} element
   */
  function BottomnavItem(element) {
    var _this = this;

    _classCallCheck(this, BottomnavItem);

    this.element = element;
    var rippleElements = element.getElementsByClassName('mdw-ripple');
    this.ripple = rippleElements && rippleElements[0];
    if (!this.ripple) {
      var ripple = document.createElement('div');
      ripple.classList.add('mdw-ripple');
      this.element.insertBefore(ripple, this.element.firstChild);
      this.ripple = ripple;
    }
    var innerRippleElements = this.ripple.getElementsByClassName('mdw-ripple__inner');
    this.rippleInner = innerRippleElements && innerRippleElements[0];
    if (!this.rippleInner) {
      var rippleInner = document.createElement('div');
      rippleInner.classList.add('mdw-ripple__inner');
      this.ripple.appendChild(rippleInner);
      this.rippleInner = rippleInner;
    }
    this.element.setAttribute('mdw-ripple', '');
    this.element.addEventListener('click', function (event) {
      _this.updateRipplePosition(event);
    });
  }

  /**
   * @param {MouseEvent|PointerEvent} event
   * @return {void}
   */


  _createClass(BottomnavItem, [{
    key: 'updateRipplePosition',
    value: function updateRipplePosition(event) {
      if (event.target !== this.element && event.target !== this.ripple) {
        return;
      }
      if (!event.pointerType && !event.detail) {
        // Ripple from center
        this.rippleInner.style.removeProperty('left');
        this.rippleInner.style.removeProperty('top');
        return;
      }
      var x = event.offsetX;
      var y = event.offsetY;
      this.rippleInner.style.setProperty('left', x + 'px');
      this.rippleInner.style.setProperty('top', y + 'px');
    }
  }]);

  return BottomnavItem;
}();

var Bottomnav = function () {
  /**
   * @param {Element} element
   */
  function Bottomnav(element) {
    var _this2 = this;

    _classCallCheck(this, Bottomnav);

    this.element = element;
    this.items = this.element.getElementsByClassName('mdw-bottomnav__item');
    this.inputs = this.element.getElementsByTagName('input');

    var _loop = function _loop(i) {
      var item = _this2.items.item(i);
      item.addEventListener('click', function () {
        _this2.onItemClicked(item);
      });
    };

    for (var i = 0; i < this.items.length; i += 1) {
      _loop(i);
    }

    var _loop2 = function _loop2(i) {
      var input = _this2.inputs.item(i);
      input.addEventListener('change', function () {
        _this2.onInputChanged(input);
      });
    };

    for (var i = 0; i < this.inputs.length; i += 1) {
      _loop2(i);
    }
  }

  /**
   * @param {HTMLInputElement} inputElement
   * @return {void}
   */


  _createClass(Bottomnav, [{
    key: 'onInputChanged',
    value: function onInputChanged(inputElement) {
      var itemElement = void 0;
      if (inputElement.parentElement.classList.contains('mdw-bottomnav__item')) {
        itemElement = inputElement.parentElement;
      }
      if (inputElement.id) {
        itemElement = document.querySelector('label.mdw-bottomnav__item[for="' + inputElement.id + '"]');
      }
      if (itemElement.hasAttribute('selected') && inputElement.checked) {
        return;
      }
      if (!itemElement.hasAttribute('selected') && !inputElement.checked) {
        return;
      }
      this.removeSelection();
      itemElement.setAttribute('selected', '');
    }

    /** @return {boolean} change */

  }, {
    key: 'removeSelection',
    value: function removeSelection() {
      for (var i = 0; i < this.items.length; i += 1) {
        var _item = this.items.item(i);
        if (_item.hasAttribute('selected')) {
          _item.removeAttribute('selected');
          return true;
        }
      }
      return false;
    }

    /**
     * @param {Element} itemElement
     * @return {void}
     */

  }, {
    key: 'onItemClicked',
    value: function onItemClicked(itemElement) {
      if (itemElement.hasAttribute('selected')) {
        return;
      }
      if (itemElement.hasAttribute('disabled')) {
        return;
      }
      this.removeSelection();
      itemElement.setAttribute('selected', '');
      var inputElement = void 0;
      if (itemElement instanceof HTMLLabelElement && itemElement.hasAttribute('for')) {
        var id = itemElement.getAttribute('for');
        if (id) {
          inputElement = document.getElementById(id);
        }
      } else {
        var _itemElement$getEleme = itemElement.getElementsByTagName('input');

        var _itemElement$getEleme2 = _slicedToArray(_itemElement$getEleme, 1);

        inputElement = _itemElement$getEleme2[0];
      }
      if (inputElement instanceof HTMLInputElement) {
        inputElement.checked = true;
      } else if (inputElement) {
        throw new Error('Unexpected inputElement type');
      }
    }
  }]);

  return Bottomnav;
}();

exports.Bottomnav = Bottomnav;
exports.BottomnavItem = BottomnavItem;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);