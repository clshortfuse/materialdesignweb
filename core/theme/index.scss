@import '../_platform.scss';
@import './_palettes.scss';
@import './_builder.scss';
@import './_variables.scss';

@mixin mdw-theme__add-component-variable-rules($component, $values, $rgbOnly: false) {
  @if ($mdw-theme__variables == 'supports') {
    @supports(--v:v) {
      @include __mdw-theme__add-component-variable-rules($component, $values, $rgbOnly);
      @content;
    }
  } @else if ($mdw-theme__variables != false) {
    @include __mdw-theme__add-component-variable-rules($component, $values, $rgbOnly);
    @content;
  }
}

@mixin mdw-theme__add-component-fallback-rules($lightness) {
  @if ($mdw-theme__fallbacks == 'ieonly') {
    @include mdw-platform__ie() {
      @include __mdw-theme__fallbacks($lightness) {
        @content;
      }
    }
  } @else if ($mdw-theme__fallbacks != false) {
    @include __mdw-theme__fallbacks($lightness) {
      @content;
    }
  }
}

@function mdwGetThemeValue($component, $colorMap, $key, $type) {
  @return __mdwGetThemeValue($component, $colorMap, $key, $type);
}

@function mdwGetThemeParamValue($param) {
  @if ($param == 'primary') {
    @return map-get($mdw-theme__palettes, $mdw-theme__primary);
  } @else if ($param == 'secondary') {
    @return map-get($mdw-theme__palettes, $mdw-theme__secondary);
  } @else if ($param == 'warn') {
    @return map-get($mdw-theme__palettes, $mdw-theme__warn);
  } @else if ($param == 'background') {
    @return map-get($mdw-theme__palettes, $mdw-theme__background);
  } @else if ($param == 'foreground-light') {
    @return $mdw-theme__foreground-light;
  } @else if ($param == 'foreground-dark') {
    @return $mdw-theme__foreground-dark;
  }
}

@function mdwGetThemeParamColor($param, $tone, $type) {
  @if ($type == 'var' or ($type == null)) {
    @if ($tone == null) {
      @return var(--#{$param}-color);
    }
    @return var(--#{$param}-#{$tone}-color);
  }
  @if ($tone == null) {
    $tone: '500';
  }

  $paramValue: mdwGetThemeParamValue($param);
  @if (($param == 'foreground-light') or ($param == 'foreground-dark')) {
    @return $paramValue;
  }
  @return map-get($paramValue, $tone);
}