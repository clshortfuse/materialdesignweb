@import '../_platform.scss';
@import './_palettes.scss';
@import './_builder.scss';
@import './_variables.scss';

@mixin mdw-theme__add-component-variable-rules($component, $values) {
  @if ($mdw-theme__variables == 'supports') {
    @supports(--v:v) {
      @content;
      @include __mdw-theme__add-component-variable-rules($component, $values);
    }
  } @else if ($mdw-theme__variables != false) {
    @content;
    @include __mdw-theme__add-component-variable-rules($component, $values);
  }
}

@mixin mdw-theme__add-component-fallback-rules($lightness) {
  @if ($mdw-theme__fallbacks == 'ieonly') {
    @include mdw-platform__ie() {
      @include __mdw-theme__fallbacks($lightness) {
        @content;
      }
    }
  } @else if ($mdw-theme__fallbacks != false) {
    @include __mdw-theme__fallbacks($lightness) {
      @content;
    }
  }
}

@function mdwGetThemeValue($component, $colorMap, $key, $type) {
  @return __mdwGetThemeValue($component, $colorMap, $key, $type);
}

@function mdwGetThemeParamValue($param) {
  @if ($param == 'primary') {
    @return map-get($mdw-theme__palettes, $mdw-theme__primary);
  } @else if ($param == 'secondary') {
    @return map-get($mdw-theme__palettes, $mdw-theme__secondary);
  } @else if ($param == 'warn') {
    @return map-get($mdw-theme__palettes, $mdw-theme__warn);
  } @else if ($param == 'background') {
    @return map-get($mdw-theme__palettes, $mdw-theme__background);
  } @else if ($param == 'foreground-light') {
    @return nth($mdw-theme__foreground, 1);
  } @else if ($param == 'foreground-dark') {
    @return nth($mdw-theme__foreground, length($mdw-theme__foreground));
  } @else {
    @return map-get($mdw-theme__palettes, $param);
  }
}

@function mdwGetThemeParamColor($param, $tone: null) {
  $paramValue: mdwGetThemeParamValue($param);
  @if (($param == 'foreground-light') or ($param == 'foreground-dark')) {
    @return $paramValue;
  }
  @return map-get($paramValue, $tone);
}