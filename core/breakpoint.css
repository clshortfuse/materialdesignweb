// https://material.io/design/layout/responsive-layout-grid.html#breakpoints

@use "./_length.scss" as *;

:root {
  --mdw-breakpoint__portrait-small-handset: 0;
  --mdw-breakpoint__portrait-medium-handset: 360px;
  --mdw-breakpoint__portrait-large-handset: 400px;
  --mdw-breakpoint__portrait-small-tablet: 600px;
  --mdw-breakpoint__portrait-large-tablet: 720px;
  --mdw-breakpoint__portrait-desktop: 960px;
  --mdw-breakpoint__landscape-small-handset: 480px;
  --mdw-breakpoint__landscape-medium-handset: 600px;
  --mdw-breakpoint__landscape-large-handset: 720px;
  --mdw-breakpoint__landscape-small-tablet: 960px;
  --mdw-breakpoint__landscape-large-tablet: 1024px;
  --mdw-breakpoint__landscape-desktop: 1440px;
  --mdw-breakpoint__window-xsmall: 0;
  --mdw-breakpoint__window-small: 600px;
  --mdw-breakpoint__window-medium: 1024px;
  --mdw-breakpoint__window-large: 1440px;
  --mdw-breakpoint__window-xlarge: 1920px;
  --mdw-breakpoint__columns-4: 0;
  --mdw-breakpoint__columns-8: 600px;
  --mdw-breakpoint__columns-12: 840px;
}

@layer is4Columns {
  @content {
    // Column-count based mixins
  }
}

@mixin is4Columns {
  @media (max-width: #{$columns8 - 1}) {
    @content;
  }
}

@mixin min8Columns {
  @media (min-width: $columns8) {
    @content;
  }
}

@mixin max8Columns {
  @media (max-width: #{$columns12 - 1}) {
    @content;
  }
}

@mixin is8Columns {
  @media (min-width: $columns8) and (max-width: #{$columns12 - 1}) {
    @content;
  }
}

@mixin is12Columns {
  @media (min-width: $columns12) {
    @content;
  }
}

// Smallest width less than 600dp

@mixin has16DPMargin {
  @media
    (orientation:portrait) and (max-width: 599px),
    (orientation:landscape) and (max-height: 599px) {
    @content;
  }
}

// Window-size based mixins

@mixin isXSmallWindow {
  @media (max-width: #{$windowSmall - 1}) {
    @content;
  }
}

@mixin minSmallWindow {
  @media (min-width: #{$windowSmall}) {
    @content;
  }
}

@mixin maxSmallWindow {
  @media (max-width: #{$windowMedium - 1}) {
    @content;
  }
}

@mixin isSmallWindow {
  @media (min-width: $windowSmall) and (max-width: #{$windowMedium - 1}) {
    @content;
  }
}

@mixin minMediumWindow {
  @media (min-width: #{$windowMedium}) {
    @content;
  }
}

@mixin maxMediumWindow {
  @media (max-width: #{$windowLarge - 1}) {
    @content;
  }
}

@mixin isMediumWindow {
  @media (min-width: $windowMedium) and (max-width: #{$windowLarge - 1}) {
    @content;
  }
}

@mixin minLargeWindow {
  @media (min-width: #{$windowLarge}) {
    @content;
  }
}

@mixin maxLargeWindow {
  @media (max-width: #{$windowXLarge - 1}) {
    @content;
  }
}

@mixin isLargeWindow {
  @media (min-width: $windowLarge) and (max-width: #{$windowXLarge - 1}) {
    @content;
  }
}

@mixin isXLargeWindow {
  @media (min-width: $windowXLarge) {
    @content;
  }
}

// Device-based mixins
// Detect size and orientation based on window.screen variables (device-width/device-height)
// max-device-width is deprecated for promotion of better heuristics (touch, viewport, hover, etc)
// https://drafts.csswg.org/mediaqueries-4/#mf-deprecated
// min-device-width is unsafe due to older Android bugs
// https://developers.google.com/web/fundamentals/design-and-ux/responsive/

@mixin isMobileDevicePortrait {
  @media (max-device-width: #{$portraitSmallTablet - 1})
    and (max-device-aspect-ratio: 1 / 1) {
    @content;
  }
}
@mixin isMobileDeviceLandscape {
  @media (max-device-width: #{$landscapeSmallTablet - 1})
    and (min-device-aspect-ratio: 1 / 1) {
    @content;
  }
}

@mixin isMobileDevice {
  @media
    (max-device-width: #{$portraitSmallTablet - 1})
    and (max-device-aspect-ratio: 1 / 1),
    (max-device-width: #{$landscapeSmallTablet - 1})
    and (min-device-aspect-ratio: 1 / 1) {
    @content;
  }
}

@mixin isTabletDevice {
  @media
    (min-width: $portraitSmallTablet)
    and (max-device-width: #{$portraitDesktop - 1})
    and (max-device-aspect-ratio: 1 / 1),
    (min-width: $landscapeSmallTablet)
    and (max-device-width: #{$landscapeDesktop - 1})
    and (min-device-aspect-ratio: 1 / 1) {
    @content;
  }
}

@mixin maxTabletDevice {
  @media
    (max-device-width: #{$portraitDesktop - 1})
    and (max-device-aspect-ratio: 1 / 1),
    (max-device-width: #{$landscapeDesktop - 1})
    and (min-device-aspect-ratio: 1 / 1) {
    @content;
  }
}
